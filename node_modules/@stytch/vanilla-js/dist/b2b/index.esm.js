var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject0, _templateObject1, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, _templateObject46, _templateObject47, _templateObject48, _templateObject49, _templateObject50, _templateObject51, _templateObject52, _templateObject53, _templateObject54, _templateObject55, _templateObject56, _templateObject57, _templateObject58, _templateObject59, _templateObject60, _templateObject61, _templateObject62, _templateObject63, _templateObject64, _templateObject65, _templateObject66, _templateObject67, _templateObject68, _templateObject69, _templateObject70, _templateObject71, _templateObject72, _templateObject73, _templateObject74, _templateObject75, _templateObject76, _templateObject77, _templateObject78, _templateObject79, _templateObject80, _templateObject81, _templateObject82, _templateObject83, _templateObject84, _templateObject85, _templateObject86, _templateObject87, _templateObject88;
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n2 = 0, F = function F() {}; return { s: F, n: function n() { return _n2 >= r.length ? { done: !0 } : { done: !1, value: r[_n2++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return r; }; var t, r = {}, e = Object.prototype, n = e.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, i = o.iterator || "@@iterator", a = o.asyncIterator || "@@asyncIterator", u = o.toStringTag || "@@toStringTag"; function c(t, r, e, n) { return Object.defineProperty(t, r, { value: e, enumerable: !n, configurable: !n, writable: !n }); } try { c({}, ""); } catch (t) { c = function c(t, r, e) { return t[r] = e; }; } function h(r, e, n, o) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype); return c(a, "_invoke", function (r, e, n) { var o = 1; return function (i, a) { if (3 === o) throw Error("Generator is already running"); if (4 === o) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var u = n.delegate; if (u) { var c = d(u, n); if (c) { if (c === f) continue; return c; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (1 === o) throw o = 4, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = 3; var h = s(r, e, n); if ("normal" === h.type) { if (o = n.done ? 4 : 2, h.arg === f) continue; return { value: h.arg, done: n.done }; } "throw" === h.type && (o = 4, n.method = "throw", n.arg = h.arg); } }; }(r, n, new Context(o || [])), !0), a; } function s(t, r, e) { try { return { type: "normal", arg: t.call(r, e) }; } catch (t) { return { type: "throw", arg: t }; } } r.wrap = h; var f = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var l = {}; c(l, i, function () { return this; }); var p = Object.getPrototypeOf, y = p && p(p(x([]))); y && y !== e && n.call(y, i) && (l = y); var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l); function g(t) { ["next", "throw", "return"].forEach(function (r) { c(t, r, function (t) { return this._invoke(r, t); }); }); } function AsyncIterator(t, r) { function e(o, i, a, u) { var c = s(t[o], t, i); if ("throw" !== c.type) { var h = c.arg, f = h.value; return f && "object" == _typeof(f) && n.call(f, "__await") ? r.resolve(f.__await).then(function (t) { e("next", t, a, u); }, function (t) { e("throw", t, a, u); }) : r.resolve(f).then(function (t) { h.value = t, a(h); }, function (t) { return e("throw", t, a, u); }); } u(c.arg); } var o; c(this, "_invoke", function (t, n) { function i() { return new r(function (r, o) { e(t, n, r, o); }); } return o = o ? o.then(i, i) : i(); }, !0); } function d(r, e) { var n = e.method, o = r.i[n]; if (o === t) return e.delegate = null, "throw" === n && r.i["return"] && (e.method = "return", e.arg = t, d(r, e), "throw" === e.method) || "return" !== n && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f; var i = s(o, r.i, e.arg); if ("throw" === i.type) return e.method = "throw", e.arg = i.arg, e.delegate = null, f; var a = i.arg; return a ? a.done ? (e[r.r] = a.value, e.next = r.n, "return" !== e.method && (e.method = "next", e.arg = t), e.delegate = null, f) : a : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f); } function w(t) { this.tryEntries.push(t); } function m(r) { var e = r[4] || {}; e.type = "normal", e.arg = t, r[4] = e; } function Context(t) { this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0); } function x(r) { if (null != r) { var e = r[i]; if (e) return e.call(r); if ("function" == typeof r.next) return r; if (!isNaN(r.length)) { var o = -1, a = function e() { for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e; return e.value = t, e.done = !0, e; }; return a.next = a; } } throw new TypeError(_typeof(r) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, "constructor", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, "GeneratorFunction"), r.isGeneratorFunction = function (t) { var r = "function" == typeof t && t.constructor; return !!r && (r === GeneratorFunction || "GeneratorFunction" === (r.displayName || r.name)); }, r.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, "GeneratorFunction")), t.prototype = Object.create(v), t; }, r.awrap = function (t) { return { __await: t }; }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () { return this; }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(h(t, e, n, o), i); return r.isGeneratorFunction(e) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, g(v), c(v, u, "Generator"), c(v, i, function () { return this; }), c(v, "toString", function () { return "[object Generator]"; }), r.keys = function (t) { var r = Object(t), e = []; for (var n in r) e.unshift(n); return function t() { for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t; return t.done = !0, t; }; }, r.values = x, Context.prototype = { constructor: Context, reset: function reset(r) { if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) "t" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0][4]; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(r) { if (this.done) throw r; var e = this; function n(t) { a.type = "throw", a.arg = r, e.next = t; } for (var o = e.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i[4], u = this.prev, c = i[1], h = i[2]; if (-1 === i[0]) return n("end"), !1; if (!c && !h) throw Error("try statement without catch or finally"); if (null != i[0] && i[0] <= u) { if (u < c) return this.method = "next", this.arg = t, n(c), !0; if (u < h) return n(h), !1; } } }, abrupt: function abrupt(t, r) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) { var o = n; break; } } o && ("break" === t || "continue" === t) && o[0] <= r && r <= o[2] && (o = null); var i = o ? o[4] : {}; return i.type = t, i.arg = r, o ? (this.method = "next", this.next = o[2], f) : this.complete(i); }, complete: function complete(t, r) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && r && (this.next = r), f; }, finish: function finish(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[2] === t) return this.complete(e[4], e[3]), m(e), f; } }, "catch": function _catch(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[0] === t) { var n = e[4]; if ("throw" === n.type) { var o = n.arg; m(e); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(r, e, n) { return this.delegate = { i: x(r), r: e, n: n }, "next" === this.method && (this.arg = t), f; } }, r; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _taggedTemplateLiteral(e, t) { return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } })); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
import { StytchB2BHeadlessClient } from './index.headless.esm.js';
import { i as isTruthy, w as wn, q, F as F$1, m as merge, H as He, Z as Ze, u as useLingui, p as passwordManagerDisableAutofillProps, U as Ue, a as withMiddleware, b as useSWR, c as useSWRConfig, _ as _$1, d as useStateWithDeps, T as T$1, s as serialize, e as mergeObjects, g as getTimestamp, f as UNDEFINED, h as useIsomorphicLayoutEffect, j as h$2, k as p$1, y, l as g$1, n as Trans, o as w$1, r as extractErrorMessage, C as Cn, t as F$2, v as s$1, x as CreateSSRSafeWebComponent, z as Fe, I as I18nProviderWrapper } from '../extractErrorMessage-CEiFKbfj.js';
import { B as B2BMFAProducts, A as AuthFlowType, a as B2BProducts, b as OTPMethods, W as Wallets, P as Products, _ as __rest, c as B2BOAuthProviders, S as StytchEventType, r as readB2BInternals, D as DEFAULT_SESSION_DURATION_MINUTES, l as logger, d as __awaiter, E as EMAIL_REGEX, e as OneTapPositions, i as isTestPublicToken, f as debounce, C as COUNTRIES_LIST, g as StytchSDKError, I as IDPOAuthFlowMissingParamError, h as StytchAPIError, N as NoCurrentSessionError, R as RedirectURLType, j as checkB2BNotSSR } from '../internal-BfhZpZd3.js';
export { k as BiometricRegistrationIdIsNullOrBlank, m as BiometricsAlreadyEnrolledError, n as BiometricsFailedError, o as BiometricsUnavailableError, p as ChallengeSigningFailedError, q as DFPNotConfigured, s as DeviceCredentialsNotAllowedError, F as FailedCodeChallengeError, t as FailedToDecryptDataError, u as InternalError, v as InvalidAuthorizationCredentialError, w as InvalidCredentialTypeError, x as InvalidPrivateKeyLength, y as InvalidRedirectSchemeError, z as InvalidStartUrlError, J as JSONDataNotConvertibleToStringError, K as KeyInvalidatedError, G as KeystoreUnavailableError, M as MissingAttestationObjectError, H as MissingAuthorizationCredentialIDTokenError, L as MissingCipherIv, Q as MissingGoogleClientIDError, T as MissingPKCEError, U as MissingPublicKeyError, V as MissingUrlError, X as NoBiometricsEnrolledError, Y as NoBiometricsRegistrationError, Z as NoCredentialsPresentError, O as OAuthProviders, $ as PasskeysInvalidEncoding, a0 as PasskeysMisconfigured, a1 as PasskeysUnsupportedError, a2 as RNUIProducts, a3 as RandomNumberGenerationFailed, a4 as SDKAPIUnreachableError, a5 as SDKNotConfiguredError, a6 as SignInWithAppleMisconfigured, a7 as StytchAPISchemaError, a8 as StytchAPIUnreachableError, a9 as StytchError, aa as StytchSDKAPIError, ab as StytchSDKSchemaError, ac as StytchSDKUsageError, ad as UNRECOVERABLE_ERROR_TYPES, ae as UserCancellationError, af as UserLockedOutError, ag as errorToStytchError } from '../internal-BfhZpZd3.js';
var messages = {
  "button.back.ariaLabel": ["Back"],
  "button.continue": ["Continue"],
  "button.continueWithEmail": ["Continue with email"],
  "button.createAnOrganization": ["Create an organization"],
  "button.emailCode": ["Email me a code"],
  "button.emailLink": ["Email me a link"],
  "button.retry": ["Try again"],
  "button.totpQrManual": ["Having trouble scanning?"],
  "button.totpQrRetry": ["Try to scan the QR code again"],
  "button.tryDifferentEmailAddress": ["Try a different email address"],
  "button.usePassword": ["Use a password instead"],
  "emailConfirmation.content": ["An email was sent to <bold>", ["email"], "</bold>."],
  "emailConfirmation.title": ["Check your email"],
  "emailMethodSelection.code": ["Email me a log in code"],
  "emailMethodSelection.link": ["Email me a log in link"],
  "emailMethodSelection.title": ["Select how you’d like to continue."],
  "emailVerification.content": ["Confirm your email address with one of the following:"],
  "emailVerification.title": ["Verify your email"],
  "error.adBlockerDetected": ["The request was blocked by an Ad Blocker. Please disable your ad blocker, refresh the page, and try again."],
  "error.authPolicyNoOrg": ["Unable to join due to the organization's authentication policy. Please contact your admin for more information."],
  "error.authPolicyWithOrg": ["Unable to join due to ", ["organizationName"], "'s authentication policy. Please contact your admin for more information."],
  "error.breachedPassword": ["Password appears in the list of breached passwords and must be reset."],
  "error.claimedDomain": ["Your email domain is associated with a particular organization, so you are unable to join or create other organizations. Please contact your admin for more information."],
  "error.default": ["Something went wrong. Try again later or contact your admin for help."],
  "error.duplicatePhoneNumber": ["A member with the specified phone number already exists for this organization."],
  "error.emailNoAccessToOrg": [["email"], " does not have access to ", ["organizationName"], ". If you think this is a mistake, contact your admin."],
  "error.emailNotFound": ["Email not found."],
  "error.eml": ["Something went wrong. Your login link may have expired, been revoked, or been used more than once. Request a new login link to try again, or contact your admin for help."],
  "error.inactiveEmail": ["The email address is marked as inactive. Please try another email address, or contact your admin if you think this is a mistake."],
  "error.invalidCode": ["Code format is invalid, please try again."],
  "error.invalidEmail": ["Email format is invalid."],
  "error.invalidEmailAddress": ["Invalid email address"],
  "error.invalidPhoneNumber": ["Phone number format is invalid. Ensure the phone number is in the E.164 format."],
  "error.invalidPhoneNumberCountryCode": ["The phone number's country code is invalid, unsupported, or disabled."],
  "error.invalidSessionToken": ["Invalid session token."],
  "error.jitIneligible": [["email"], " does not have access to ", ["organizationName"], ". If you think this is a mistake, contact your admin"],
  "error.memberPasswordNotFound": ["Member password not found."],
  "error.noUserPassword": ["Password not found for this user. Please try again."],
  "error.oauthFlowCallbackError": ["An error was encountered in the callback of the OAuth flow. Please try again."],
  "error.oauthTokenNotFound": ["OAuth Token could not be found."],
  "error.organization": ["The organization you are looking for could not be found. If you think this is a mistake, contact your admin."],
  "error.otpCodeNotFound": ["Invalid passcode, please try again."],
  "error.passcodeInvalid": ["Invalid passcode, please try again."],
  "error.resetPassword": ["Password must be reset."],
  "error.sessionNotFound": ["Session not found."],
  "error.title": ["Looks like there was an error!"],
  "error.unableToAuthMagicLink": ["The magic link could not be authenticated because it was either already used or expired. Please try again."],
  "error.unauthorizedAction": ["Unauthorized action."],
  "error.unauthorizedCredentials": ["Unauthorized credentials."],
  "error.unsubscribedPhoneNumber": ["Phone number is unsubscribed. User has unsubscribed. Resubscribe by texting 'START' before messages can be sent."],
  "error.userLockLimitReached": ["Too many failed authentication attempts. Please try again later."],
  "error.userUnauthenticated": ["Must have an active session to call this method. Have you logged in yet?"],
  "formField.backupCode.ariaLabel": ["Backup code"],
  "formField.backupCode.placeholder": ["Enter backup code"],
  "formField.email.label": ["Email"],
  "formField.email.placeholder": ["example@email.com"],
  "formField.orgSlug.placeholder": ["Enter org slug"],
  "formField.otp.ariaLabel": ["One-time passcode"],
  "formField.passcode.status.verifying": ["Verifying passcode..."],
  "formField.password.ariaLabel": ["Password"],
  "formField.password.label": ["Password"],
  "idpConsent.allowClientTo": ["Allow ", ["clientName"], " to:"],
  "idpConsent.button.allow": ["Allow"],
  "idpConsent.button.deny": ["Deny"],
  "idpConsent.cannotGrantRequest": ["You cannot grant ", ["clientName"], "'s request to:"],
  "idpConsent.customScopes.title": [["clientName"], " wants to access your ", ["projectName"], " account"],
  "idpConsent.defaultClientName": ["The App"],
  "idpConsent.denied": ["Access to the application was denied."],
  "idpConsent.noActiveSession": ["No active session detected. Please log in to continue."],
  "idpConsent.noPermissionsToGrant": ["You do not have permissions to grant ", ["clientName"], " access to some of the requested scopes."],
  "idpConsent.signIn.title": ["Sign in to ", ["clientName"], " with ", ["projectName"]],
  "idpLogout.confirmMessage": ["Are you sure you want to log out of your ", ["projectName"], " account?"],
  "idpLogout.no": ["No"],
  "idpLogout.notLoggedOut": ["You have not been logged out. You may close this page."],
  "idpLogout.title": ["Log out?"],
  "idpLogout.yes": ["Yes"],
  "link.openInGmail": ["Open in Gmail"],
  "link.openInOutlook": ["Open in Outlook"],
  "link.openInYahoo": ["Open in Yahoo"],
  "link.signupResetPassword": ["Sign up or reset password"],
  "login.loading": ["Logging in..."],
  "login.success.content": ["You have successfully logged in."],
  "login.title": ["Sign up or log in"],
  "methodDivider.text": ["or"],
  "mfa.enrollment.content": ["Your organization requires an additional form of verification to make your account more secure."],
  "mfa.enrollment.option.sms": ["Text me a code"],
  "mfa.enrollment.option.totp": ["Use an authenticator app"],
  "mfa.enrollment.title": ["Set up Multi-Factor Authentication"],
  "mfa.methods.authenticatorApp": ["Use an authenticator app"],
  "mfa.smsEnrollment.content": ["Your organization requires an additional form of verification to make your account more secure."],
  "mfa.smsEnrollment.title": ["Enter your phone number to set up Multi-Factor Authentication"],
  "mfa.totpEnrollment.content": ["Click to copy the code below. Enter into your authenticator app to link your account."],
  "mfa.totpEnrollment.copyCode.ariaLabel": ["Copy code"],
  "mfa.totpEnrollment.title": ["Having trouble scanning the QR code?"],
  "mfa.totpEnrollment.toast.codeCopied": ["Code copied"],
  "mfa.totpEnrollment.toast.copyFailed": ["Couldn't copy code to clipboard"],
  "mfa.totpEntry.getNewCode": ["If the verification code doesn’t work, go back to your authenticator app to get a new code."],
  "mfa.totpEntry.switchToSms": ["Text me a code instead"],
  "mfa.totpEntry.useBackupCode": ["Can’t access your authenticator app? <backupCodeLink>Use a backup code</backupCodeLink>"],
  "mfaTotpEnrollment.qrAltText": ["QR code for TOTP enrollment"],
  "oauth.continueWithGitHub": ["Continue with GitHub"],
  "oauth.continueWithGoogle": ["Continue with Google"],
  "oauth.continueWithHubSpot": ["Continue with HubSpot"],
  "oauth.continueWithMicrosoft": ["Continue with Microsoft"],
  "oauth.continueWithSlack": ["Continue with Slack"],
  "organizationDiscovery.acceptInvite": ["Accept Invite"],
  "organizationDiscovery.join": ["Join"],
  "organizationDiscovery.noOrgs.content": ["Make sure your email address is correct. Otherwise, you might need to be invited by your admin."],
  "organizationDiscovery.noOrgs.create.content": [["email"], " does not have an account. Think this is a mistake? Try a different email address, or contact your admin."],
  "organizationDiscovery.noOrgs.create.title": ["Create an organization to get started"],
  "organizationDiscovery.noOrgs.title": [["email"], " does not belong to any organizations."],
  "organizationDiscovery.title": ["Select an organization to continue"],
  "organizationLogin.title": ["Continue to ", ["organizationName"]],
  "organizationLogin.titleUnknown": ["Continue to ..."],
  "passcode.codeSent": ["Code sent"],
  "passcode.didntGetIt": ["Didn't get it?"],
  "passcode.expirationCountdown": ["Your code expires in ", ["timeRemaining"], "."],
  "passcode.expired": ["Your code has expired."],
  "passcode.resendCode": ["Resend code"],
  "passcode.sentConfirmation": ["A 6-digit passcode was sent to you at <bold>", ["destination"], "</bold>."],
  "passcode.title": ["Enter passcode"],
  "password.forgot.content.discovery": ["We'll email you a verification link to sign up for an account or reset your password if you have one."],
  "password.forgot.content.organization": ["We'll email you a login link to sign in to your account directly or reset your password if you have one."],
  "password.forgot.title": ["Check your email for help signing in!"],
  "password.login.title": ["Log in with email and password"],
  "password.reset.emailSent.content": ["A login link was sent to you at <bold>", ["email"], "</bold>."],
  "password.reset.emailSent.resendText": ["Didn't get it? <resendButton>Resend email</resendButton>"],
  "password.reset.emailSent.title": ["Check your email!"],
  "password.reset.toast.emailResent": ["Email resent"],
  "password.setNew.title": ["Set a new password"],
  "password.strengthError.breached": ["This password may have been used on a different site that experienced a security issue. Please choose another password."],
  "password.strengthError.complexity": [["complexity", "plural", {
    one: ["Must contain ", "#", " of the following: uppercase letter, lowercase letter, number, symbol"],
    other: ["Must contain ", "#", " of the following: uppercase letter, lowercase letter, number, symbol"]
  }]],
  "password.strengthError.minimumLength": [["characterLength", "plural", {
    one: ["Must be at least ", "#", " character long"],
    other: ["Must be at least ", "#", " characters long"]
  }]],
  "password.verification.content": ["A login link was sent to you at <bold>", ["email"], "</bold>."],
  "password.verification.resendEmail": ["Didn't get it? <resendButton>Resend email</resendButton>"],
  "password.verification.title": ["Verify your email first."],
  "password.zxcvbn.suggestion.addWords": ["Add another word or two. Uncommon words are better."],
  "password.zxcvbn.suggestion.allUppercase": ["All-uppercase is almost as easy to guess as all-lowercase."],
  "password.zxcvbn.suggestion.avoidDatesAndYearsAssociatedWithYou": ["Avoid dates and years that are associated with you."],
  "password.zxcvbn.suggestion.avoidRecentYears": ["Avoid recent years."],
  "password.zxcvbn.suggestion.avoidRepeats": ["Avoid repeated words and characters."],
  "password.zxcvbn.suggestion.avoidSequences": ["Avoid sequences."],
  "password.zxcvbn.suggestion.avoidYearsAssociatedWithYou": ["Avoid years that are associated with you."],
  "password.zxcvbn.suggestion.capitalization": ["Capitalization doesn't help very much."],
  "password.zxcvbn.suggestion.longerKeyboardPattern": ["Use a longer keyboard pattern with more turns."],
  "password.zxcvbn.suggestion.noSymbolsDigitsUppercase": ["No need for symbols, digits, or uppercase letters."],
  "password.zxcvbn.suggestion.predictableSubstitutions": ["Predictable substitutions like '@' instead of 'a' don't help very much."],
  "password.zxcvbn.suggestion.reversed": ["Reversed words aren't much harder to guess."],
  "password.zxcvbn.suggestion.useAFewWords": ["Use a few words, avoid common phrases."],
  "password.zxcvbn.warning.commonNames": ["Common names and surnames are easy to guess."],
  "password.zxcvbn.warning.dates": ["Dates are often easy to guess."],
  "password.zxcvbn.warning.longerRepeats": ["Repeats like \"abcabcabc\" are only slightly harder to guess than \"abc\"."],
  "password.zxcvbn.warning.names": ["Names and surnames by themselves are easy to guess."],
  "password.zxcvbn.warning.recentYears": ["Recent years are easy to guess."],
  "password.zxcvbn.warning.repeats": ["Repeats like \"aaa\" are easy to guess."],
  "password.zxcvbn.warning.sequences": ["Sequences like \"abc\" or \"6543\" are easy to guess."],
  "password.zxcvbn.warning.shortKeyboardPatterns": ["Short keyboard patterns are easy to guess."],
  "password.zxcvbn.warning.similarToCommonPassword": ["This is similar to a commonly used password."],
  "password.zxcvbn.warning.straightRows": ["Straight rows of keys are easy to guess."],
  "password.zxcvbn.warning.top100CommonPassword": ["This is a top-100 common password."],
  "password.zxcvbn.warning.top10CommonPassword": ["This is a top-10 common password."],
  "password.zxcvbn.warning.veryCommonPassword": ["This is a very common password."],
  "password.zxcvbn.warning.wordByItself": ["A word by itself is easy to guess."],
  "provider.continueWith": ["Continue with ", ["displayName"]],
  "provider.continueWithSSO": ["Continue with SSO"],
  "recoveryCodes.entry.content": ["Enter one of the backup codes you saved when setting up your authenticator app."],
  "recoveryCodes.entry.error.invalidCode": ["Invalid backup code, please try again."],
  "recoveryCodes.entry.title": ["Enter backup code"],
  "recoveryCodes.save.button.copyAll": ["Copy all"],
  "recoveryCodes.save.button.done": ["Done"],
  "recoveryCodes.save.button.download": ["Download file"],
  "recoveryCodes.save.content": ["This is the only time you will be able to access and save your backup codes."],
  "recoveryCodes.save.title": ["Save your backup codes!"],
  "recoveryCodes.save.toast.copied": ["Copied"],
  "recoveryCodes.save.toast.copyFailed": ["Couldn't copy codes to clipboard"],
  "ssoDiscovery.email.error.unknown": ["Something went wrong. Try again later or contact your admin for help."],
  "ssoDiscovery.email.title": ["Enter your email to continue"],
  "ssoDiscovery.fallback.button.reset": ["Try another log in method"],
  "ssoDiscovery.fallback.content": ["Please input the Organization's unique slug to continue. If you don't know the unique slug, log in through another method to view all of your available Organizations."],
  "ssoDiscovery.fallback.error.orgNotFound": ["Organization not found. Please try again."],
  "ssoDiscovery.fallback.error.unknown": ["An error occurred. Please try again."],
  "ssoDiscovery.fallback.title": ["Sorry, we couldn't find any connections."],
  "ssoDiscovery.title": ["Select a connection to continue"],
  "success.title": ["Success!"],
  "totp.content": ["Enter the 6-digit code from your authenticator app."],
  "totp.setupQr.content": ["Your organization requires an additional form of verification to make your account more secure. If you don’t have an authenticator app, you’ll need to install one first."],
  "totp.setupQr.title": ["Scan the QR code to link your authenticator app"],
  "totp.title": ["Enter verification code"],
  "watermark.altText": ["Powered by Stytch"]
};
var DEFAULT_MFA_STATE = {
  primaryInfo: null,
  isEnrolling: false,
  smsOtp: {
    isSending: false,
    sendError: null,
    codeExpiration: null,
    formattedDestination: null,
    enrolledNumber: null
  },
  totp: {
    isCreating: false,
    createError: null,
    enrollment: null
  }
};
var ErrorType;
(function (ErrorType) {
  ErrorType[ErrorType["Default"] = 0] = "Default";
  ErrorType[ErrorType["EmailMagicLink"] = 1] = "EmailMagicLink";
  ErrorType[ErrorType["Organization"] = 2] = "Organization";
  ErrorType[ErrorType["CannotJoinOrgDueToAuthPolicy"] = 3] = "CannotJoinOrgDueToAuthPolicy";
  ErrorType[ErrorType["AdBlockerDetected"] = 4] = "AdBlockerDetected";
  ErrorType[ErrorType["OrganizationDiscoveryClaimedDomain"] = 5] = "OrganizationDiscoveryClaimedDomain";
})(ErrorType || (ErrorType = {}));
var AppScreens$1;
(function (AppScreens) {
  AppScreens["Main"] = "Main";
  AppScreens["EmailConfirmation"] = "Email Confirmation";
  AppScreens["LoggedIn"] = "Logged In";
  AppScreens["Discovery"] = "Discovery";
  AppScreens["Error"] = "Error";
  AppScreens["PasswordEmailForm"] = "Password Email";
  AppScreens["PasswordAuthenticate"] = "Password Authenticate";
  AppScreens["PasswordResetForm"] = "Password Reset Form";
  AppScreens["PasswordResetVerifyConfirmation"] = "Password Reset Verify Confirmation";
  AppScreens["PasswordForgotForm"] = "Password Forgot Form";
  AppScreens["PasswordSetNewConfirmation"] = "Password Set New Confirmation";
  AppScreens["MFAEnrollmentSelection"] = "MFA Enrollment Selection";
  AppScreens["RecoveryCodeEntry"] = "Recovery Code Entry";
  AppScreens["RecoveryCodeSave"] = "Recovery Code Save";
  AppScreens["SMSOTPEnrollment"] = "SMS OTP Enrollment";
  AppScreens["SMSOTPEntry"] = "SMS OTP Entry";
  AppScreens["TOTPEnrollmentManual"] = "TOTP Enrollment Manual";
  AppScreens["TOTPEnrollmentQRCode"] = "TOTP Enrollment QR Code";
  AppScreens["TOTPEntry"] = "TOTP Entry";
  AppScreens["EmailMethodSelection"] = "Email Method Selection";
  AppScreens["EmailOTPEntry"] = "Email OTP Entry";
  AppScreens["SSODiscoveryEmail"] = "SSO Discovery Email";
  AppScreens["SSODiscoveryFallback"] = "SSO Discovery Fallback";
  AppScreens["SSODiscoveryMenu"] = "SSO Discovery Menu";
  AppScreens["IDPConsent"] = "IDP Consent";
})(AppScreens$1 || (AppScreens$1 = {}));
var getAuthMethodsForMember = function getAuthMethodsForMember(authMethods, member) {
  var memberHasPassword = !!(member === null || member === void 0 ? void 0 : member.member_password_id);
  return memberHasPassword ? authMethods : authMethods.filter(function (method) {
    return method !== 'password';
  });
};
var getEnabledMethods = function getEnabledMethods(_ref) {
  var allMethods = _ref.allMethods,
    orgSupportedMethods = _ref.orgSupportedMethods,
    uiIncludedMethods = _ref.uiIncludedMethods;
  if (orgSupportedMethods === null || orgSupportedMethods === void 0 ? void 0 : orgSupportedMethods.length) {
    return new Set(orgSupportedMethods);
  }
  var methodsArr = (uiIncludedMethods === null || uiIncludedMethods === void 0 ? void 0 : uiIncludedMethods.length) ? uiIncludedMethods : allMethods;
  return new Set(methodsArr);
};
var DEFAULT_SMS_OTP_EXPIRATION_MS = 1000 * 60 * 2;
function apiMfaMethodToProduct(method) {
  switch (method) {
    case 'totp':
      return B2BMFAProducts.totp;
    case 'sms_otp':
      return B2BMFAProducts.smsOtp;
    default:
      return undefined;
  }
}
var getSmsOtpCodeExpiration = function getSmsOtpCodeExpiration() {
  return new Date(Date.now() + DEFAULT_SMS_OTP_EXPIRATION_MS);
};
var B2B_MFA_METHODS = [B2BMFAProducts.totp, B2BMFAProducts.smsOtp];
var mfaReducer = function mfaReducer(state, action) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;
  switch (action.type) {
    case 'primary_authenticate_success':
      {
        var memberAuthenticated = !!action.response.member_session;
        var postAuthScreen = action.resetTokenType === 'multi_tenant_magic_links' ? AppScreens$1.PasswordResetForm : AppScreens$1.LoggedIn;
        if (memberAuthenticated) {
          return Object.assign(Object.assign({}, state), {
            mfa: DEFAULT_MFA_STATE,
            primary: {},
            screen: postAuthScreen
          });
        }
        if (action.response.primary_required) {
          var primaryAuthMethods = getAuthMethodsForMember(action.response.primary_required.allowed_auth_methods, action.response.member);
          var _action$response$memb = action.response.member,
            email = _action$response$memb.email_address,
            emailVerified = _action$response$memb.email_address_verified;
          var newBaseState = Object.assign(Object.assign({}, state), {
            flowState: {
              type: AuthFlowType.Organization,
              organization: action.response.organization
            },
            formState: Object.assign(Object.assign({}, state.formState), {
              passwordState: {
                email: email
              }
            }),
            primary: {
              primaryAuthMethods: primaryAuthMethods,
              email: email,
              emailVerified: emailVerified
            },
            screen: AppScreens$1.Main
          });
          if ((primaryAuthMethods === null || primaryAuthMethods === void 0 ? void 0 : primaryAuthMethods.length) === 0) {
            return Object.assign(Object.assign({}, newBaseState), {
              screen: AppScreens$1.Error,
              error: {
                type: ErrorType.CannotJoinOrgDueToAuthPolicy,
                canGoBack: false
              }
            });
          }
          return newBaseState;
        }
        var memberEnrolledInSmsOtp = action.response.member.mfa_phone_number_verified;
        var memberEnrolledInTotp = !!action.response.member.totp_registration_id;
        var primaryInfo = {
          enrolledMfaMethods: [memberEnrolledInTotp && B2BMFAProducts.totp, memberEnrolledInSmsOtp && B2BMFAProducts.smsOtp].filter(isTruthy),
          memberId: action.response.member_id,
          memberPhoneNumber: action.response.member.mfa_phone_number,
          organizationId: action.response.organization.organization_id,
          organizationMfaOptionsSupported: action.response.organization.mfa_methods === 'RESTRICTED' && action.response.organization.allowed_mfa_methods ? (_a = action.response.organization.allowed_mfa_methods) === null || _a === void 0 ? void 0 : _a.map(apiMfaMethodToProduct).filter(isTruthy) : [],
          postAuthScreen: postAuthScreen
        };
        var organizationSupportsMethod = function organizationSupportsMethod(method) {
          return primaryInfo.organizationMfaOptionsSupported.length === 0 || primaryInfo.organizationMfaOptionsSupported.includes(method);
        };
        var getDefaultMethod = function getDefaultMethod() {
          var defaultMethod = apiMfaMethodToProduct(action.response.member.default_mfa_method);
          if (defaultMethod && organizationSupportsMethod(defaultMethod) && primaryInfo.enrolledMfaMethods.includes(defaultMethod)) {
            return defaultMethod;
          }
          return undefined;
        };
        var smsImplicitlySent = ((_b = action.response.mfa_required) === null || _b === void 0 ? void 0 : _b.secondary_auth_initiated) === 'sms_otp';
        var entryMethod = smsImplicitlySent ? B2BMFAProducts.smsOtp : (_c = getDefaultMethod()) !== null && _c !== void 0 ? _c : primaryInfo.enrolledMfaMethods.find(organizationSupportsMethod);
        if (entryMethod) {
          var mfaState = Object.assign(Object.assign({}, DEFAULT_MFA_STATE), {
            primaryInfo: primaryInfo
          });
          switch (entryMethod) {
            case B2BMFAProducts.smsOtp:
              {
                return Object.assign(Object.assign({}, state), {
                  mfa: Object.assign(Object.assign({}, mfaState), {
                    smsOtp: Object.assign(Object.assign({}, DEFAULT_MFA_STATE.smsOtp), {
                      codeExpiration: smsImplicitlySent ? getSmsOtpCodeExpiration() : null
                    })
                  }),
                  primary: {},
                  screen: AppScreens$1.SMSOTPEntry
                });
              }
            case B2BMFAProducts.totp:
              return Object.assign(Object.assign({}, state), {
                mfa: mfaState,
                primary: {},
                screen: AppScreens$1.TOTPEntry
              });
          }
        }
        var enabledMethods = getEnabledMethods({
          allMethods: B2B_MFA_METHODS,
          orgSupportedMethods: primaryInfo.organizationMfaOptionsSupported,
          uiIncludedMethods: action.includedMfaMethods
        });
        var getNextEnrollmentScreen = function getNextEnrollmentScreen() {
          if (enabledMethods.size === 1) {
            if (enabledMethods.has(B2BMFAProducts.totp)) {
              return AppScreens$1.TOTPEnrollmentQRCode;
            }
            if (enabledMethods.has(B2BMFAProducts.smsOtp)) {
              return AppScreens$1.SMSOTPEnrollment;
            }
          }
          return AppScreens$1.MFAEnrollmentSelection;
        };
        return Object.assign(Object.assign({}, state), {
          mfa: Object.assign(Object.assign({}, DEFAULT_MFA_STATE), {
            primaryInfo: primaryInfo,
            isEnrolling: true
          }),
          primary: {},
          screen: getNextEnrollmentScreen()
        });
      }
    case 'mfa/start_enrollment':
      {
        var screen = action.method === B2BMFAProducts.smsOtp ? AppScreens$1.SMSOTPEnrollment : AppScreens$1.TOTPEnrollmentQRCode;
        return Object.assign(Object.assign({}, state), {
          screen: screen
        });
      }
    case 'sms_otp/authenticate_success':
      return Object.assign(Object.assign({}, state), {
        mfa: DEFAULT_MFA_STATE,
        screen: (_e = (_d = state.mfa.primaryInfo) === null || _d === void 0 ? void 0 : _d.postAuthScreen) !== null && _e !== void 0 ? _e : AppScreens$1.LoggedIn
      });
    case 'sms_otp/send':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            isSending: true,
            sendError: null
          })
        })
      });
    case 'sms_otp/send_success':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            isSending: false,
            sendError: null,
            codeExpiration: getSmsOtpCodeExpiration(),
            formattedDestination: (_f = action.formattedPhoneNumber) !== null && _f !== void 0 ? _f : state.mfa.smsOtp.formattedDestination,
            enrolledNumber: action.phoneNumber ? {
              phoneNumber: action.phoneNumber,
              countryCode: action.countryCode
            } : null
          })
        }),
        screen: AppScreens$1.SMSOTPEntry
      });
    case 'sms_otp/send_error':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            isSending: false,
            sendError: action.error,
            codeExpiration: (_g = state.mfa.smsOtp.codeExpiration) !== null && _g !== void 0 ? _g : new Date(Date.now() - 1000)
          })
        })
      });
    case 'sms_otp/format_destination':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            formattedDestination: action.formattedPhoneNumber
          })
        })
      });
    case 'sms_otp/navigate_to_entry':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.SMSOTPEntry
      });
    case 'recovery_code/authenticate_success':
      return Object.assign(Object.assign({}, state), {
        mfa: DEFAULT_MFA_STATE,
        screen: (_j = (_h = state.mfa.primaryInfo) === null || _h === void 0 ? void 0 : _h.postAuthScreen) !== null && _j !== void 0 ? _j : AppScreens$1.LoggedIn
      });
    case 'recovery_code/navigate_to_entry':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.RecoveryCodeEntry
      });
    case 'recovery_code/save_acknowledge':
      return Object.assign(Object.assign({}, state), {
        mfa: DEFAULT_MFA_STATE,
        screen: (_l = (_k = state.mfa.primaryInfo) === null || _k === void 0 ? void 0 : _k.postAuthScreen) !== null && _l !== void 0 ? _l : AppScreens$1.LoggedIn
      });
    case 'totp/authenticate_success':
      return Object.assign(Object.assign({}, state), {
        mfa: state.mfa.isEnrolling ? state.mfa : DEFAULT_MFA_STATE,
        screen: state.mfa.isEnrolling ? AppScreens$1.RecoveryCodeSave : (_o = (_m = state.mfa.primaryInfo) === null || _m === void 0 ? void 0 : _m.postAuthScreen) !== null && _o !== void 0 ? _o : AppScreens$1.LoggedIn
      });
    case 'totp/create':
      if (state.mfa.totp.isCreating) {
        return state;
      }
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          totp: Object.assign(Object.assign({}, state.mfa.totp), {
            isCreating: true,
            createError: null
          })
        })
      });
    case 'totp/create_success':
      if (!state.mfa.isEnrolling || ((_p = state.mfa.primaryInfo) === null || _p === void 0 ? void 0 : _p.memberId) !== action.memberId || ((_q = state.mfa.primaryInfo) === null || _q === void 0 ? void 0 : _q.organizationId) !== action.organizationId) {
        return state;
      }
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          totp: Object.assign(Object.assign({}, state.mfa.totp), {
            createError: null,
            isCreating: false,
            enrollment: {
              secret: action.response.secret,
              qrCode: action.response.qr_code,
              recoveryCodes: action.response.recovery_codes,
              method: (_s = (_r = state.mfa.totp.enrollment) === null || _r === void 0 ? void 0 : _r.method) !== null && _s !== void 0 ? _s : 'qr'
            }
          })
        })
      });
    case 'totp/create_error':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          totp: Object.assign(Object.assign({}, state.mfa.totp), {
            isCreating: false,
            createError: action.error
          })
        })
      });
    case 'totp/navigate_to_entry':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.TOTPEntry
      });
    case 'totp/show_code':
      {
        if (!state.mfa.isEnrolling || !state.mfa.totp.enrollment) {
          return state;
        }
        var method = (_u = (_t = action.method) !== null && _t !== void 0 ? _t : state.mfa.totp.enrollment.method) !== null && _u !== void 0 ? _u : 'qr';
        return Object.assign(Object.assign({}, state), {
          mfa: Object.assign(Object.assign({}, state.mfa), {
            totp: Object.assign(Object.assign({}, state.mfa.totp), {
              enrollment: Object.assign(Object.assign({}, state.mfa.totp.enrollment), {
                method: method
              })
            })
          }),
          screen: method === 'manual' ? AppScreens$1.TOTPEnrollmentManual : AppScreens$1.TOTPEnrollmentQRCode
        });
      }
    default:
      return state;
  }
};
var reducer = function reducer(state, action) {
  var _a, _b, _c;
  switch (action.type) {
    case 'transition':
      {
        var screenHistory = action.history === 'push' ? [].concat(_toConsumableArray(state.screenHistory), [state.screen]) : [];
        return Object.assign(Object.assign({}, state), {
          screen: action.screen,
          screenHistory: screenHistory
        });
      }
    case 'navigate_back':
      {
        var screen = state.screenHistory.at(-1);
        if (!screen) {
          return state;
        }
        var _screenHistory = state.screenHistory.slice(0, -1);
        return Object.assign(Object.assign({}, state), {
          screen: screen,
          screenHistory: _screenHistory
        });
      }
    case 'set_error_message_and_transition':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.Error,
        error: {
          type: action.errorType,
          canGoBack: action.canGoBack
        }
      });
    case 'set_user_supplied_email':
      {
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            emailState: {
              userSuppliedEmail: action.email
            },
            passwordState: {
              email: action.email
            }
          })
        });
      }
    case 'set_organization':
      {
        return Object.assign(Object.assign({}, state), {
          flowState: {
            type: AuthFlowType.Organization,
            organization: action.organization
          }
        });
      }
    case 'set_discovery_state':
      {
        var discoveredOrganizations = action.discoveredOrganizations;
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            discoveryState: {
              email: action.email,
              discoveredOrganizations: discoveredOrganizations
            }
          }),
          screen: AppScreens$1.Discovery
        });
      }
    case 'select_discovered_organization':
      {
        var _action$discoveredOrg = action.discoveredOrganization,
          membership = _action$discoveredOrg.membership,
          organization = _action$discoveredOrg.organization,
          primary_required = _action$discoveredOrg.primary_required;
        var email = (_b = (_a = membership.member) === null || _a === void 0 ? void 0 : _a.email_address) !== null && _b !== void 0 ? _b : state.formState.discoveryState.email;
        var primaryAuthMethods = primary_required ? primary_required.allowed_auth_methods : undefined;
        var newBaseState = Object.assign(Object.assign({}, state), {
          flowState: {
            type: AuthFlowType.Organization,
            organization: organization
          },
          formState: Object.assign(Object.assign({}, state.formState), {
            passwordState: {
              email: email
            }
          }),
          primary: {
            primaryAuthMethods: primaryAuthMethods,
            email: email,
            emailVerified: (_c = membership.member) === null || _c === void 0 ? void 0 : _c.email_address_verified
          },
          screen: AppScreens$1.Main
        });
        if ((primaryAuthMethods === null || primaryAuthMethods === void 0 ? void 0 : primaryAuthMethods.length) === 0) {
          return Object.assign(Object.assign({}, newBaseState), {
            screen: AppScreens$1.Error,
            error: {
              type: ErrorType.CannotJoinOrgDueToAuthPolicy,
              canGoBack: true
            }
          });
        }
        return newBaseState;
      }
    case 'set_password_state':
      {
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            passwordState: {
              email: action.email
            }
          })
        });
      }
    case 'send_email_otp':
      {
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            otpState: {
              codeExpiration: action.codeExpiration
            }
          }),
          screen: AppScreens$1.EmailOTPEntry,
          screenHistory: [].concat(_toConsumableArray(state.screenHistory), [state.screen])
        });
      }
    case 'set_sso_discovery_state':
      {
        var connections = action.connections;
        if (!connections.length) {
          return Object.assign(Object.assign({}, state), {
            screen: AppScreens$1.SSODiscoveryFallback,
            screenHistory: [].concat(_toConsumableArray(state.screenHistory), [state.screen])
          });
        }
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            ssoDiscoveryState: {
              connections: action.connections
            }
          }),
          screen: AppScreens$1.SSODiscoveryMenu,
          screenHistory: [].concat(_toConsumableArray(state.screenHistory), [state.screen])
        });
      }
    case 'use_password_auth':
      {
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            passwordState: {
              email: action.email
            }
          }),
          screen: AppScreens$1.PasswordAuthenticate,
          screenHistory: [].concat(_toConsumableArray(state.screenHistory), [state.screen])
        });
      }
    default:
      return mfaReducer(state, action);
  }
};
var DEFAULT_STATE = {
  screen: AppScreens$1.Main,
  screenHistory: [],
  formState: {
    emailState: {
      userSuppliedEmail: ''
    },
    otpState: {
      codeExpiration: null
    },
    discoveryState: {
      email: '',
      discoveredOrganizations: []
    },
    passwordState: {
      email: ''
    },
    ssoDiscoveryState: {
      connections: []
    }
  },
  flowState: {
    type: AuthFlowType.Organization,
    organization: null
  },
  mfa: DEFAULT_MFA_STATE,
  primary: {},
  error: {
    type: ErrorType.Default,
    canGoBack: false
  }
};
var DEFAULT_CONFIG = {
  products: [B2BProducts.emailMagicLinks],
  authFlowType: AuthFlowType.Organization,
  sessionOptions: {
    sessionDurationMinutes: 60
  }
};
var GlobalContext = /*#__PURE__*/wn.createContext({
  client: {},
  config: DEFAULT_CONFIG,
  state: [DEFAULT_STATE, function () {
    return null;
  }]
});
var GlobalContextProvider = function GlobalContextProvider(_ref2) {
  var children = _ref2.children,
    client = _ref2.client,
    config = _ref2.config,
    callbacks = _ref2.callbacks,
    initialState = _ref2.initialState;
  var state = wn.useReducer(reducer, initialState !== null && initialState !== void 0 ? initialState : DEFAULT_STATE);
  return /*#__PURE__*/wn.createElement(GlobalContext.Provider, {
    value: {
      client: client,
      state: state,
      config: config,
      callbacks: callbacks
    }
  }, children);
};
var useGlobalContext = function useGlobalContext() {
  return q(GlobalContext);
};
var useStytch = function useStytch() {
  return useGlobalContext().client;
};
var useGlobalReducer = function useGlobalReducer() {
  return useGlobalContext().state;
};
var useConfig = function useConfig() {
  return useGlobalContext().config;
};
var useErrorCallback = function useErrorCallback() {
  var _a, _b;
  return (_b = (_a = useGlobalContext().callbacks) === null || _a === void 0 ? void 0 : _a.onError) !== null && _b !== void 0 ? _b : function () {
    return void 0;
  };
};
var useEventCallback = function useEventCallback() {
  var _a, _b;
  return (_b = (_a = useGlobalContext().callbacks) === null || _a === void 0 ? void 0 : _a.onEvent) !== null && _b !== void 0 ? _b : function () {
    return void 0;
  };
};
var AppScreens;
(function (AppScreens) {
  AppScreens["Main"] = "Main";
  AppScreens["PasskeyRegistrationStart"] = "Register New Passkey";
  AppScreens["PasskeyRegistrationSuccess"] = "Passkey Registration Success";
  AppScreens["PasskeyConfirmation"] = "Passkey Confirmation";
  AppScreens["PasswordCreateOrLogin"] = "Password";
  AppScreens["PasswordResetForm"] = "Password Reset Form";
  AppScreens["PasswordForgot"] = "Password Forgot";
  AppScreens["PasswordBreached"] = "Password Breached";
  AppScreens["PasswordSetNew"] = "Password Set New";
  AppScreens["PasswordDedupe"] = "Password Dedupe";
  AppScreens["PasswordConfirmation"] = "Password Confirmation";
  AppScreens["EmailConfirmation"] = "Email Confirmation";
  AppScreens["OTPAuthenticate"] = "OTP Authenticate";
  AppScreens["OTPConfirmation"] = "OTP Confirmation";
  AppScreens["CryptoConnect"] = "Crypto Connect";
  AppScreens["CryptoSignMessage"] = "Crypto Sign Message";
  AppScreens["CryptoOtherScreen"] = "Crypto Other Screen";
  AppScreens["CryptoSetupWallet"] = "Crypto Setup Wallet";
  AppScreens["CryptoError"] = "Crypto Error";
  AppScreens["CryptoConfirmation"] = "Crypto Confirmation";
  AppScreens["IDPConsent"] = "IDP Consent";
})(AppScreens || (AppScreens = {}));
({
  screen: AppScreens.Main,
  formState: {
    magicLinkState: {
      email: ''
    },
    otpState: {
      type: OTPMethods.Email,
      methodId: '',
      otpDestination: ''
    },
    cryptoState: {
      walletAddress: '',
      walletOption: Wallets.Metamask,
      walletChallenge: ''
    },
    passwordState: {
      email: '',
      type: 'new'
    },
    resetPasswordState: {
      token: ''
    },
    errorDescriptor: undefined
  }
});
({
  products: [Products.emailMagicLinks],
  emailMagicLinksOptions: {
    loginRedirectURL: '',
    loginExpirationMinutes: 30,
    signupRedirectURL: '',
    signupExpirationMinutes: 30,
    createUserAsPending: false
  }
});
var DEFAULT_STYLE_CONFIG = {
  container: {
    backgroundColor: '#FFFFFF',
    borderColor: '#ADBCC5',
    borderRadius: '8px',
    width: '400px'
  },
  colors: {
    primary: '#19303D',
    secondary: '#5C727D',
    success: '#0C5A56',
    error: '#8B1214'
  },
  buttons: {
    primary: {
      backgroundColor: '#19303D',
      textColor: '#FFFFFF',
      borderColor: '#19303D',
      borderRadius: '4px'
    },
    secondary: {
      backgroundColor: '#FFFFFF',
      textColor: '#19303D',
      borderColor: '#19303D',
      borderRadius: '4px'
    },
    disabled: {
      backgroundColor: '#F3F5F6',
      textColor: '#8296A1',
      borderColor: '#F3F5F6',
      borderRadius: '4px'
    }
  },
  fontFamily: 'Arial, Helvetica, sans-serif',
  hideHeaderText: false,
  logo: {
    logoImageUrl: ''
  }
};
var defaultDisabledTextColor = '#8296A1';
var createTheme = function createTheme(styles) {
  var displayWatermark = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
  var styleConfig = merge({}, DEFAULT_STYLE_CONFIG, styles);
  return {
    typography: {
      fontFamily: styleConfig.fontFamily,
      header: {
        fontFamily: styleConfig.fontFamily,
        fontSize: 24,
        fontWeight: 600,
        lineHeight: '30px'
      },
      body: {
        fontFamily: styleConfig.fontFamily,
        fontSize: 16,
        fontWeight: 'normal',
        lineHeight: '21px'
      },
      helper: {
        fontFamily: styleConfig.fontFamily,
        fontSize: 14,
        fontWeight: '400',
        lineHeight: '20px',
        whiteSpace: 'pre-wrap'
      }
    },
    colors: {
      primary: styleConfig.colors.primary,
      secondary: styleConfig.colors.secondary,
      success: styleConfig.colors.success,
      error: styleConfig.colors.error,
      disabled: '#F3F5F6',
      disabledText: defaultDisabledTextColor
    },
    container: {
      width: styleConfig.container.width,
      border: "1px solid ".concat(styleConfig.container.borderColor),
      borderRadius: styleConfig.container.borderRadius,
      backgroundColor: styleConfig.container.backgroundColor
    },
    buttons: {
      primary: {
        backgroundColor: styleConfig.buttons.primary.backgroundColor,
        textColor: styleConfig.buttons.primary.textColor,
        border: "1px solid ".concat(styleConfig.buttons.primary.borderColor),
        borderRadius: styleConfig.buttons.primary.borderRadius
      },
      secondary: {
        backgroundColor: styleConfig.buttons.secondary.backgroundColor,
        textColor: styleConfig.buttons.secondary.textColor,
        border: "1px solid ".concat(styleConfig.buttons.secondary.borderColor),
        borderRadius: styleConfig.buttons.secondary.borderRadius
      },
      disabled: {
        textColor: styleConfig.buttons.disabled.textColor,
        backgroundColor: styleConfig.buttons.disabled.backgroundColor,
        border: "1px solid ".concat(styleConfig.buttons.disabled.borderColor),
        borderRadius: styleConfig.buttons.disabled.borderRadius
      }
    },
    inputs: {
      backgroundColor: (_b = (_a = styleConfig.inputs) === null || _a === void 0 ? void 0 : _a.backgroundColor) !== null && _b !== void 0 ? _b : 'transparent',
      textColor: (_d = (_c = styleConfig.inputs) === null || _c === void 0 ? void 0 : _c.textColor) !== null && _d !== void 0 ? _d : styleConfig.colors.primary,
      borderColor: (_f = (_e = styleConfig.inputs) === null || _e === void 0 ? void 0 : _e.borderColor) !== null && _f !== void 0 ? _f : styleConfig.colors.primary,
      borderRadius: (_h = (_g = styleConfig.inputs) === null || _g === void 0 ? void 0 : _g.borderRadius) !== null && _h !== void 0 ? _h : '4px',
      placeholderColor: (_k = (_j = styleConfig.inputs) === null || _j === void 0 ? void 0 : _j.placeholderColor) !== null && _k !== void 0 ? _k : defaultDisabledTextColor
    },
    displayHeader: !styleConfig.hideHeaderText,
    displayWatermark: displayWatermark,
    logo: {
      logoImageUrl: styleConfig.logo.logoImageUrl
    }
  };
};
var useTheme = function useTheme(_ref3) {
  var styles = _ref3.styles,
    displayWatermark = _ref3.displayWatermark;
  return F$1(function () {
    return createTheme(styles, displayWatermark);
  }, [styles, displayWatermark]);
};
var itemOrNone = function itemOrNone(item) {
  return item !== null && item !== void 0 ? item : undefined;
};
var spaceOrNone = function spaceOrNone(space) {
  return space ? "".concat(space, "px") : undefined;
};
var Flex = He.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: ", ";\n\n  flex-direction: ", ";\n  justify-content: ", ";\n  align-items: ", ";\n  flex-grow: ", ";\n  flex-shrink: ", ";\n  order: ", ";\n  align-self: ", ";\n  flex-flow: ", ";\n  flex-wrap: ", ";\n\n  width: ", ";\n  height: ", ";\n  max-width: ", ";\n  max-height: ", ";\n  min-width: ", ";\n  min-height: ", ";\n  padding: ", ";\n  margin: ", ";\n  margin-top: ", ";\n  margin-right: ", ";\n  margin-bottom: ", ";\n  margin-left: ", ";\n  padding-top: ", ";\n  padding-right: ", ";\n  padding-bottom: ", ";\n  padding-left: ", ";\n\n  gap: ", ";\n"])), function (_ref4) {
  var inline = _ref4.inline;
  return inline ? 'inline-flex' : 'flex';
}, function (_ref5) {
  var direction = _ref5.direction;
  return itemOrNone(direction);
}, function (_ref6) {
  var justifyContent = _ref6.justifyContent,
    center = _ref6.center;
  return center ? 'center' : itemOrNone(justifyContent);
}, function (_ref7) {
  var alignItems = _ref7.alignItems,
    center = _ref7.center;
  return center ? 'center' : itemOrNone(alignItems);
}, function (_ref8) {
  var grow = _ref8.grow;
  return itemOrNone(grow);
}, function (_ref9) {
  var shrink = _ref9.shrink;
  return itemOrNone(shrink);
}, function (_ref0) {
  var order = _ref0.order;
  return itemOrNone(order);
}, function (_ref1) {
  var alignSelf = _ref1.alignSelf;
  return itemOrNone(alignSelf);
}, function (_ref10) {
  var flow = _ref10.flow;
  return itemOrNone(flow);
}, function (_ref11) {
  var wrap = _ref11.wrap;
  return itemOrNone(wrap);
}, function (_ref12) {
  var width = _ref12.width;
  return typeof width === 'string' ? width : spaceOrNone(width);
}, function (_ref13) {
  var height = _ref13.height;
  return typeof height === 'string' ? height : spaceOrNone(height);
}, function (_ref14) {
  var maxWidth = _ref14.maxWidth;
  return typeof maxWidth === 'string' ? maxWidth : spaceOrNone(maxWidth);
}, function (_ref15) {
  var maxHeight = _ref15.maxHeight;
  return typeof maxHeight === 'string' ? maxHeight : spaceOrNone(maxHeight);
}, function (_ref16) {
  var minWidth = _ref16.minWidth;
  return typeof minWidth === 'string' ? minWidth : spaceOrNone(minWidth);
}, function (_ref17) {
  var minHeight = _ref17.minHeight;
  return typeof minHeight === 'string' ? minHeight : spaceOrNone(minHeight);
}, function (_ref18) {
  var padding = _ref18.padding;
  return spaceOrNone(padding);
}, function (_ref19) {
  var margin = _ref19.margin;
  return spaceOrNone(margin);
}, function (_ref20) {
  var marginTop = _ref20.marginTop;
  return spaceOrNone(marginTop);
}, function (_ref21) {
  var marginRight = _ref21.marginRight;
  return spaceOrNone(marginRight);
}, function (_ref22) {
  var marginBottom = _ref22.marginBottom;
  return spaceOrNone(marginBottom);
}, function (_ref23) {
  var marginLeft = _ref23.marginLeft;
  return spaceOrNone(marginLeft);
}, function (_ref24) {
  var paddingTop = _ref24.paddingTop;
  return spaceOrNone(paddingTop);
}, function (_ref25) {
  var paddingRight = _ref25.paddingRight;
  return spaceOrNone(paddingRight);
}, function (_ref26) {
  var paddingBottom = _ref26.paddingBottom;
  return spaceOrNone(paddingBottom);
}, function (_ref27) {
  var paddingLeft = _ref27.paddingLeft;
  return spaceOrNone(paddingLeft);
}, function (_ref28) {
  var gap = _ref28.gap;
  return spaceOrNone(gap);
});
var Text = He.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  color: ", ";\n  text-align: ", ";\n  ", ";\n"])), function (props) {
  return props.color && props.theme.colors[props.color];
}, function (props) {
  return props.align;
}, function (props) {
  return props.size && props.theme.typography[props.size];
});
Text.defaultProps = {
  size: 'body',
  color: 'primary',
  align: 'left'
};
var BackButton = He.button(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  all: unset;\n  cursor: pointer;\n"])));
var BackArrowSvg = function BackArrowSvg(_ref29) {
  var color = _ref29.color;
  return /*#__PURE__*/wn.createElement("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z",
    fill: color
  }));
};
var BackArrow = function BackArrow(_ref30) {
  var onClick = _ref30.onClick;
  var theme = Ze();
  var _useLingui = useLingui(),
    _t = _useLingui._;
  return /*#__PURE__*/wn.createElement(BackButton, {
    type: "button",
    onClick: onClick,
    "aria-label": _t({
      id: 'button.back.ariaLabel',
      message: "Back"
    })
  }, /*#__PURE__*/wn.createElement(BackArrowSvg, {
    color: theme.colors.primary
  }));
};
var ErrorSVG = function ErrorSVG() {
  return /*#__PURE__*/wn.createElement("svg", {
    width: "200",
    height: "200",
    viewBox: "0 0 200 200",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("g", {
    opacity: "0.1"
  }, /*#__PURE__*/wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M99.9999 0C155.229 0 200 44.7715 200 99.9999C200 155.229 155.229 200 99.9999 200C44.7715 200 0 155.229 0 99.9999C0 44.7715 44.7715 0 99.9999 0Z",
    fill: "url(#paint0_linear_4408_12810)"
  })), /*#__PURE__*/wn.createElement("g", {
    opacity: "0.3"
  }, /*#__PURE__*/wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M99.9993 17.5723C145.523 17.5723 182.427 54.4762 182.427 99.9993C182.427 145.523 145.523 182.427 99.9993 182.427C54.4762 182.427 17.5723 145.523 17.5723 99.9993C17.5723 54.4762 54.4762 17.5723 99.9993 17.5723Z",
    fill: "url(#paint1_linear_4408_12810)"
  })), /*#__PURE__*/wn.createElement("g", {
    opacity: "0.7"
  }, /*#__PURE__*/wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M99.9987 32.2305C137.487 32.2305 167.877 62.6203 167.877 100.108C167.877 137.596 137.487 167.986 99.9987 167.986C62.5109 167.986 32.1211 137.596 32.1211 100.108C32.1211 62.6203 62.5109 32.2305 99.9987 32.2305Z",
    fill: "url(#paint2_linear_4408_12810)"
  })), /*#__PURE__*/wn.createElement("path", {
    d: "M100 45.8334C70.1 45.8334 45.8333 70.1 45.8333 100C45.8333 129.9 70.1 154.167 100 154.167C129.9 154.167 154.167 129.9 154.167 100C154.167 70.1 129.9 45.8334 100 45.8334ZM105.417 127.083H94.5833V116.25H105.417V127.083ZM105.417 105.417H94.5833V72.9167H105.417V105.417Z",
    fill: "#8B1214"
  }), /*#__PURE__*/wn.createElement("defs", null, /*#__PURE__*/wn.createElement("linearGradient", {
    id: "paint0_linear_4408_12810",
    x1: "-87.1375",
    y1: "160.384",
    x2: "169.669",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/wn.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/wn.createElement("stop", {
    offset: "1",
    stopColor: "#8B1214"
  })), /*#__PURE__*/wn.createElement("linearGradient", {
    id: "paint1_linear_4408_12810",
    x1: "-87.138",
    y1: "160.384",
    x2: "169.668",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/wn.createElement("stop", {
    stopColor: "#F7F0F0"
  }), /*#__PURE__*/wn.createElement("stop", {
    offset: "1",
    stopColor: "#8B1214"
  })), /*#__PURE__*/wn.createElement("linearGradient", {
    id: "paint2_linear_4408_12810",
    x1: "-87.1386",
    y1: "160.493",
    x2: "169.668",
    y2: "338.405",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/wn.createElement("stop", {
    stopColor: "#8B1214",
    stopOpacity: "0.01"
  }), /*#__PURE__*/wn.createElement("stop", {
    offset: "1",
    stopColor: "#E4C7C7"
  }))));
};
var ErrorHeader = He(Text)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  text-align: center;\n"])));
var ErrorDisplay = function ErrorDisplay(_ref31) {
  var text = _ref31.text,
    onGoBack = _ref31.onGoBack;
  var _useLingui2 = useLingui(),
    _t = _useLingui2._;
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, onGoBack && /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: onGoBack
  }), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24,
    alignItems: "center"
  }, /*#__PURE__*/wn.createElement(ErrorHeader, {
    size: "header"
  }, _t({
    id: 'error.title',
    message: "Looks like there was an error!"
  })), /*#__PURE__*/wn.createElement(ErrorSVG, null), /*#__PURE__*/wn.createElement(Text, null, text)));
};
var ErrorScreen = function ErrorScreen() {
  var _a;
  var _useGlobalReducer = useGlobalReducer(),
    _useGlobalReducer2 = _slicedToArray(_useGlobalReducer, 2),
    state = _useGlobalReducer2[0],
    dispatch = _useGlobalReducer2[1];
  var _useLingui3 = useLingui(),
    _t2 = _useLingui3._;
  var _state$error = state.error,
    currentErrorType = _state$error.type,
    canGoBack = _state$error.canGoBack;
  var organizationName = (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.organization_name;
  var ErrorTypeMap = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, ErrorType.Default, _t2({
    id: 'error.default',
    message: "Something went wrong. Try again later or contact your admin for help."
  })), ErrorType.EmailMagicLink, _t2({
    id: 'error.eml',
    message: "Something went wrong. Your login link may have expired, been revoked, or been used more than once. Request a new login link to try again, or contact your admin for help."
  })), ErrorType.Organization, _t2({
    id: 'error.organization',
    message: "The organization you are looking for could not be found. If you think this is a mistake, contact your admin."
  })), ErrorType.CannotJoinOrgDueToAuthPolicy, organizationName ? _t2({
    id: 'error.authPolicyWithOrg',
    message: "Unable to join due to {organizationName}'s authentication policy. Please contact your admin for more information.",
    values: {
      organizationName: organizationName
    }
  }) : _t2({
    id: 'error.authPolicyNoOrg',
    message: "Unable to join due to the organization's authentication policy. Please contact your admin for more information."
  })), ErrorType.AdBlockerDetected, _t2({
    id: 'error.adBlockerDetected',
    message: "The request was blocked by an Ad Blocker. Please disable your ad blocker, refresh the page, and try again."
  })), ErrorType.OrganizationDiscoveryClaimedDomain, _t2({
    id: 'error.claimedDomain',
    message: "Your email domain is associated with a particular organization, so you are unable to join or create other organizations. Please contact your admin for more information."
  }));
  var handleGoBack = F$1(function () {
    if (canGoBack) {
      return function () {
        return dispatch({
          type: 'transition',
          screen: AppScreens$1.Main
        });
      };
    }
    return undefined;
  }, [canGoBack, dispatch]);
  return /*#__PURE__*/wn.createElement(ErrorDisplay, {
    text: ErrorTypeMap[currentErrorType],
    onGoBack: handleGoBack
  });
};
var Input = He.input(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  height: 47px;\n  padding: 0 8px;\n  box-sizing: border-box;\n  border: 1px solid ", ";\n  border-radius: ", ";\n  color: ", ";\n  font-family: ", ";\n  font-size: 18px;\n  &::placeholder {\n    color: ", ";\n  }\n\n  &:disabled {\n    border: 1px solid ", ";\n    color: ", ";\n    background-color: ", ";\n  }\n"])), function (props) {
  return props.theme.inputs.backgroundColor;
}, function (props) {
  return props.theme.inputs.borderColor;
}, function (props) {
  return props.theme.inputs.borderRadius;
}, function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  return props.theme.inputs.placeholderColor;
}, function (props) {
  return props.theme.colors.disabledText;
}, function (props) {
  return props.theme.colors.disabledText;
}, function (props) {
  return props.theme.colors.disabled;
});
var EmailInput = function EmailInput(_ref32) {
  var email = _ref32.email,
    setEmail = _ref32.setEmail,
    _ref32$disableInput = _ref32.disableInput,
    disableInput = _ref32$disableInput === void 0 ? false : _ref32$disableInput,
    _ref32$hasPasskeys = _ref32.hasPasskeys,
    hasPasskeys = _ref32$hasPasskeys === void 0 ? false : _ref32$hasPasskeys;
  var _useLingui4 = useLingui(),
    _t = _useLingui4._;
  return /*#__PURE__*/wn.createElement(Input, Object.assign({
    placeholder: _t({
      id: 'formField.email.placeholder',
      message: "example@email.com"
    }),
    name: "email",
    type: "email",
    autoComplete: hasPasskeys ? 'username webauthn' : 'email',
    disabled: disableInput,
    id: "email-input",
    value: email,
    onChange: function onChange(e) {
      return setEmail(e.target.value);
    },
    required: true
  }, hasPasskeys ? passwordManagerDisableAutofillProps : {}));
};
var DASHBOARD_REGEX = /https:\/\/stytch\.com\/[#a-zA-Z0-9/-]+/g;
var mapURLsToLinks = function mapURLsToLinks(str) {
  var nonLinkChunks = str.split(DASHBOARD_REGEX);
  var linkChunks = Array.from(str.matchAll(DASHBOARD_REGEX)).map(function (el) {
    return el[0];
  });
  var chunkResults = [];
  while (nonLinkChunks.length || linkChunks.length) {
    if (nonLinkChunks.length) {
      chunkResults.push(nonLinkChunks.shift());
    }
    if (linkChunks.length) {
      var chunk = linkChunks.shift();
      chunkResults.push(/*#__PURE__*/wn.createElement("a", {
        key: chunk + '__' + String(linkChunks.length),
        href: chunk,
        target: "_blank",
        rel: "noreferrer"
      }, chunk));
    }
  }
  return chunkResults;
};
var ErrorText = function ErrorText(_ref33) {
  var errorMessage = _ref33.errorMessage;
  var tokens = F$1(function () {
    return mapURLsToLinks(errorMessage);
  }, [errorMessage]);
  return /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "error"
  }, tokens);
};
var Button = He.button(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  all: unset;\n  width: 100%;\n  height: 45px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 18px;\n  text-transform: none;\n  font-family: ", ";\n  box-shadow: none;\n  text-align: center;\n\n  ", "\n\n  &:disabled {\n    background-color: ", ";\n    color: ", ";\n    border: ", ";\n    border-radius: ", ";\n    cursor: not-allowed;\n  }\n"])), function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  switch (props.variant) {
    case 'primary':
      return "\n          border: ".concat(props.theme.buttons.primary.border, ";\n          border-radius: ").concat(props.theme.buttons.primary.borderRadius, ";\n          color: ").concat(props.theme.buttons.primary.textColor, ";\n          background-color: ").concat(props.theme.buttons.primary.backgroundColor, ";\n        ");
    case 'outlined':
      return "\n          border: ".concat(props.theme.buttons.secondary.border, ";\n          border-radius: ").concat(props.theme.buttons.secondary.borderRadius, ";\n          color: ").concat(props.theme.buttons.secondary.textColor, ";\n          background-color: ").concat(props.theme.buttons.secondary.backgroundColor, ";\n        ");
    case 'text':
      return "\n          color: ".concat(props.theme.colors.primary, ";\n          background-color: transparent;\n          font-weight: 600;\n        ");
  }
}, function (props) {
  return props.theme.buttons.disabled.backgroundColor;
}, function (props) {
  return props.theme.buttons.disabled.textColor;
}, function (props) {
  return props.theme.buttons.disabled.border;
}, function (props) {
  return props.theme.buttons.disabled.borderRadius;
});
Button.defaultProps = {
  variant: 'primary'
};
var circularRotateKeyframe = Ue(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n"])));
var circularDashKeyframe = Ue(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n"])));
var AnimatedCircle = He.circle(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n  stroke-dasharray: 80px, 200px;\n  stroke-dashoffset: 0;\n  animation: ", " 1.4s ease-in-out infinite;\n  stroke: ", ";\n  fill: none;\n"])), circularDashKeyframe, function (props) {
  return props.theme.colors.primary;
});
var CircularProgressRoot = He.div(_templateObject0 || (_templateObject0 = _taggedTemplateLiteral(["\n  width: ", "px;\n  height: ", "px;\n  animation: ", " 1.4s ease-in-out infinite;\n"])), function (props) {
  return props.size;
}, function (props) {
  return props.size;
}, circularRotateKeyframe);
var CircularProgressSVG = He.svg(_templateObject1 || (_templateObject1 = _taggedTemplateLiteral(["\n  display: block;\n"])));
var CircularProgress = function CircularProgress(_ref34) {
  var size = _ref34.size,
    thickness = _ref34.thickness;
  return /*#__PURE__*/wn.createElement(CircularProgressRoot, {
    size: size
  }, /*#__PURE__*/wn.createElement(CircularProgressSVG, {
    viewBox: "".concat(size / 2, " ").concat(size / 2, " ").concat(size, " ").concat(size)
  }, /*#__PURE__*/wn.createElement(AnimatedCircle, {
    cx: size,
    cy: size,
    r: (size - thickness) / 2,
    fill: "none",
    strokeWidth: thickness
  })));
};
var LoadingButton = function LoadingButton(_a) {
  var children = _a.children,
    isLoading = _a.isLoading,
    buttonProps = __rest(_a, ["children", "isLoading"]);
  return /*#__PURE__*/wn.createElement(Button, Object.assign({}, buttonProps), isLoading ? (/*#__PURE__*/wn.createElement(Flex, {
    justifyContent: "center"
  }, /*#__PURE__*/wn.createElement(CircularProgress, {
    size: 18,
    thickness: 1,
    "data-testid": "loading-icon"
  }))) : children);
};
var SubmitButton = function SubmitButton(_ref35) {
  var isSubmitting = _ref35.isSubmitting,
    disabled = _ref35.disabled,
    text = _ref35.text,
    variant = _ref35.variant;
  var buttonDisabled = isSubmitting || disabled;
  return /*#__PURE__*/wn.createElement(LoadingButton, {
    isLoading: isSubmitting,
    type: "submit",
    disabled: buttonDisabled,
    variant: variant
  }, text);
};
var getParamsFromB2BOAuthProviderConfig = function getParamsFromB2BOAuthProviderConfig(provider) {
  var providerType = '';
  var oneTap = false;
  var customScopes = [];
  var providerParams = {};
  var cancelOnTapOutside = undefined;
  if (typeof provider === 'string') {
    providerType = provider;
  } else {
    providerType = provider.type;
    if (provider.type === B2BOAuthProviders.Google && 'one_tap' in provider) {
      oneTap = provider.one_tap;
      cancelOnTapOutside = provider.cancel_on_tap_outside;
    }
    customScopes = provider.customScopes || [];
    providerParams = provider.providerParams || {};
  }
  var oauthProvider = providerType;
  return {
    type: oauthProvider,
    one_tap: oneTap,
    customScopes: customScopes,
    providerParams: providerParams,
    cancel_on_tap_outside: cancelOnTapOutside
  };
};
var productsToAuthMethods = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, B2BProducts.oauth, undefined), B2BProducts.sso, 'sso'), B2BProducts.emailMagicLinks, 'magic_link'), B2BProducts.emailOtp, 'email_otp'), B2BProducts.passwords, 'password');
var oauthProvidersToAuthMethods = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, B2BOAuthProviders.Google, 'google_oauth'), B2BOAuthProviders.Microsoft, 'microsoft_oauth'), B2BOAuthProviders.HubSpot, 'hubspot_oauth'), B2BOAuthProviders.Slack, 'slack_oauth'), B2BOAuthProviders.GitHub, 'github_oauth');
var authMethodsToProducts = Object.entries(productsToAuthMethods).reduce(function (acc, _ref36) {
  var _ref37 = _slicedToArray(_ref36, 2),
    product = _ref37[0],
    method = _ref37[1];
  if (method) {
    acc[method] = product;
  }
  return acc;
}, {});
var oauthMethodsToOauthProviders = Object.entries(oauthProvidersToAuthMethods).reduce(function (acc, _ref38) {
  var _ref39 = _slicedToArray(_ref38, 2),
    provider = _ref39[0],
    method = _ref39[1];
  acc[method] = provider;
  return acc;
}, {});
var oauthProviderToAuthMethod = function oauthProviderToAuthMethod(provider) {
  return oauthProvidersToAuthMethods[provider];
};
var oauthMethodToOauthProvider = function oauthMethodToOauthProvider(authMethod) {
  return oauthMethodsToOauthProviders[authMethod];
};
var productToAuthMethod = function productToAuthMethod(product) {
  return productsToAuthMethods[product];
};
var authMethodToProduct = function authMethodToProduct(authMethod) {
  if (authMethod in oauthMethodsToOauthProviders) {
    return B2BProducts.oauth;
  }
  return authMethodsToProducts[authMethod];
};
var allProducts = Object.keys(productsToAuthMethods);
var allOauthProviders = Object.values(B2BOAuthProviders);
var flattenConfigToAuthMethods = function flattenConfigToAuthMethods(products, oauthProviders) {
  return products.reduce(function (acc, product) {
    if (product === B2BProducts.oauth) {
      oauthProviders.forEach(function (provider) {
        var authMethod = oauthProviderToAuthMethod(typeof provider === 'string' ? provider : provider.type);
        if (authMethod) {
          acc.push(authMethod);
        }
      });
    } else {
      var authMethod = productToAuthMethod(product);
      if (authMethod) {
        acc.push(authMethod);
      }
    }
    return acc;
  }, []);
};
var useOAuthProviderConfigs = function useOAuthProviderConfigs() {
  var _a;
  var config = useConfig();
  return F$1(function () {
    var _a;
    if (!((_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.providers)) {
      return [];
    }
    return config.oauthOptions.providers.map(getParamsFromB2BOAuthProviderConfig);
  }, [(_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.providers]);
};
var useRestrictedAuthMethods = function useRestrictedAuthMethods() {
  var _a, _b;
  var _useGlobalReducer3 = useGlobalReducer(),
    _useGlobalReducer4 = _slicedToArray(_useGlobalReducer3, 1),
    state = _useGlobalReducer4[0];
  var primaryAuthMethods = state.primary.primaryAuthMethods;
  var hasPrimaryAuthMethods = !!primaryAuthMethods;
  var restrictedAuthMethods = F$1(function () {
    var _a, _b, _c;
    if (state.primary.primaryAuthMethods) {
      return new Set(state.primary.primaryAuthMethods);
    }
    if (((_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.auth_methods) === 'RESTRICTED') {
      return new Set((_c = (_b = state.flowState.organization) === null || _b === void 0 ? void 0 : _b.allowed_auth_methods) !== null && _c !== void 0 ? _c : []);
    }
  }, [(_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.allowed_auth_methods, (_b = state.flowState.organization) === null || _b === void 0 ? void 0 : _b.auth_methods, state.primary.primaryAuthMethods]);
  return {
    restrictedAuthMethods: restrictedAuthMethods,
    hasPrimaryAuthMethods: hasPrimaryAuthMethods
  };
};
var useEffectiveAuthConfig = function useEffectiveAuthConfig() {
  var _a;
  var _useGlobalReducer5 = useGlobalReducer(),
    _useGlobalReducer6 = _slicedToArray(_useGlobalReducer5, 1),
    state = _useGlobalReducer6[0];
  var config = useConfig();
  var _useRestrictedAuthMet = useRestrictedAuthMethods(),
    restrictedAuthMethods = _useRestrictedAuthMet.restrictedAuthMethods,
    hasPrimaryAuthMethods = _useRestrictedAuthMet.hasPrimaryAuthMethods;
  var oauthProviderConfigs = useOAuthProviderConfigs();
  var flattenedConfiguredAuthMethods = F$1(function () {
    return flattenConfigToAuthMethods(config.products, oauthProviderConfigs);
  }, [config.products, oauthProviderConfigs]);
  var authMethodsToShow = F$1(function () {
    var _a;
    if (!restrictedAuthMethods) {
      return flattenedConfiguredAuthMethods;
    }
    var restrictedAuthMethodsInUiConfig = flattenedConfiguredAuthMethods.filter(function (authMethod) {
      return restrictedAuthMethods.has(authMethod);
    });
    if (restrictedAuthMethodsInUiConfig.length > 0 || !hasPrimaryAuthMethods) {
      return restrictedAuthMethodsInUiConfig;
    }
    if (((_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.auth_methods) === 'RESTRICTED') {
      return flattenConfigToAuthMethods(allProducts, allOauthProviders).filter(function (authMethod) {
        return restrictedAuthMethods.has(authMethod);
      });
    }
    return ['magic_link'];
  }, [flattenedConfiguredAuthMethods, hasPrimaryAuthMethods, restrictedAuthMethods, (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.auth_methods]);
  var products = F$1(function () {
    return _toConsumableArray(new Set(authMethodsToShow.map(authMethodToProduct).filter(isTruthy)));
  }, [authMethodsToShow]);
  var oauthProviderSettings = F$1(function () {
    return authMethodsToShow.map(function (authMethod) {
      var _a;
      var provider = oauthMethodToOauthProvider(authMethod);
      if (provider) {
        return (_a = oauthProviderConfigs.find(function (oauthProvider) {
          return oauthProvider.type === provider;
        })) !== null && _a !== void 0 ? _a : getParamsFromB2BOAuthProviderConfig(provider);
      }
    }).filter(isTruthy);
  }, [authMethodsToShow, oauthProviderConfigs]);
  return {
    products: products,
    oauthProviderSettings: oauthProviderSettings
  };
};
var DEFAULT_OTP_EXPIRATION_MS = 1000 * 60 * 10;
var getOtpCodeExpiration = function getOtpCodeExpiration() {
  return new Date(Date.now() + DEFAULT_OTP_EXPIRATION_MS);
};
var mutation = function mutation() {
  return function (key, fetcher) {
    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _useSWRConfig = useSWRConfig(),
      mutate = _useSWRConfig.mutate;
    var keyRef = _$1(key);
    var fetcherRef = _$1(fetcher);
    var configRef = _$1(config);
    var ditchMutationsUntilRef = _$1(0);
    var _useStateWithDeps = useStateWithDeps({
        data: UNDEFINED,
        error: UNDEFINED,
        isMutating: false
      }),
      _useStateWithDeps2 = _slicedToArray(_useStateWithDeps, 3),
      stateRef = _useStateWithDeps2[0],
      stateDependencies = _useStateWithDeps2[1],
      setState = _useStateWithDeps2[2];
    var currentState = stateRef.current;
    var trigger = T$1(/*#__PURE__*/function () {
      var _ref40 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(arg, opts) {
        var _serialize, _serialize2, serializedKey, resolvedKey, options, mutationStartedAt, data;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _serialize = serialize(keyRef.current), _serialize2 = _slicedToArray(_serialize, 2), serializedKey = _serialize2[0], resolvedKey = _serialize2[1];
              if (fetcherRef.current) {
                _context.next = 3;
                break;
              }
              throw new Error('Can’t trigger the mutation: missing fetcher.');
            case 3:
              if (serializedKey) {
                _context.next = 5;
                break;
              }
              throw new Error('Can’t trigger the mutation: missing key.');
            case 5:
              options = mergeObjects(mergeObjects({
                populateCache: false,
                throwOnError: true
              }, configRef.current), opts);
              mutationStartedAt = getTimestamp();
              ditchMutationsUntilRef.current = mutationStartedAt;
              setState({
                isMutating: true
              });
              _context.prev = 9;
              _context.next = 12;
              return mutate(serializedKey, fetcherRef.current(resolvedKey, {
                arg: arg
              }), mergeObjects(options, {
                throwOnError: true
              }));
            case 12:
              data = _context.sent;
              if (ditchMutationsUntilRef.current <= mutationStartedAt) {
                setState({
                  data: data,
                  isMutating: false,
                  error: undefined
                });
                options.onSuccess == null ? void 0 : options.onSuccess(data, serializedKey, options);
              }
              return _context.abrupt("return", data);
            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](9);
              if (!(ditchMutationsUntilRef.current <= mutationStartedAt)) {
                _context.next = 24;
                break;
              }
              setState({
                error: _context.t0,
                isMutating: false
              });
              options.onError == null ? void 0 : options.onError(_context.t0, serializedKey, options);
              if (!options.throwOnError) {
                _context.next = 24;
                break;
              }
              throw _context.t0;
            case 24:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[9, 17]]);
      }));
      return function (_x, _x2) {
        return _ref40.apply(this, arguments);
      };
    }(), []);
    var reset = T$1(function () {
      ditchMutationsUntilRef.current = getTimestamp();
      setState({
        data: UNDEFINED,
        error: UNDEFINED,
        isMutating: false
      });
    }, []);
    useIsomorphicLayoutEffect(function () {
      keyRef.current = key;
      fetcherRef.current = fetcher;
      configRef.current = config;
    });
    return {
      trigger: trigger,
      reset: reset,
      get data() {
        stateDependencies.data = true;
        return currentState.data;
      },
      get error() {
        stateDependencies.error = true;
        return currentState.error;
      },
      get isMutating() {
        stateDependencies.isMutating = true;
        return currentState.isMutating;
      }
    };
  };
};
var index = withMiddleware(useSWR, mutation);
var extractErrorType = function extractErrorType(error) {
  if (error && _typeof(error) === 'object') {
    if ('error_type' in error && typeof error.error_type === 'string') {
      return error.error_type;
    }
  }
};
var errorMessages = {
  invalid_email: {
    id: 'error.invalidEmail',
    message: "Email format is invalid."
  },
  invalid_phone_number: {
    id: 'error.invalidPhoneNumber',
    message: "Phone number format is invalid. Ensure the phone number is in the E.164 format."
  },
  unsubscribed_phone_number: {
    id: 'error.unsubscribedPhoneNumber',
    message: "Phone number is unsubscribed. User has unsubscribed. Resubscribe by texting 'START' before messages can be sent."
  },
  inactive_email: {
    id: 'error.inactiveEmail',
    message: "The email address is marked as inactive. Please try another email address, or contact your admin if you think this is a mistake."
  },
  unauthorized_credentials: {
    id: 'error.unauthorizedCredentials',
    message: "Unauthorized credentials."
  },
  user_unauthenticated: {
    id: 'error.userUnauthenticated',
    message: "Must have an active session to call this method. Have you logged in yet?"
  },
  email_not_found: {
    id: 'error.emailNotFound',
    message: "Email not found."
  },
  unable_to_auth_magic_link: {
    id: 'error.unableToAuthMagicLink',
    message: "The magic link could not be authenticated because it was either already used or expired. Please try again."
  },
  no_user_password: {
    id: 'error.noUserPassword',
    message: "Password not found for this user. Please try again."
  },
  breached_password: {
    id: 'error.breachedPassword',
    message: "Password appears in the list of breached passwords and must be reset."
  },
  reset_password: {
    id: 'error.resetPassword',
    message: "Password must be reset."
  },
  oauth_token_not_found: {
    id: 'error.oauthTokenNotFound',
    message: "OAuth Token could not be found."
  },
  invalid_code: {
    id: 'error.invalidCode',
    message: "Code format is invalid, please try again."
  },
  member_password_not_found: {
    id: 'error.memberPasswordNotFound',
    message: "Member password not found."
  },
  oauth_flow_callback_error: {
    id: 'error.oauthFlowCallbackError',
    message: "An error was encountered in the callback of the OAuth flow. Please try again."
  },
  unauthorized_action: {
    id: 'error.unauthorizedAction',
    message: "Unauthorized action."
  },
  user_lock_limit_reached: {
    id: 'error.userLockLimitReached',
    message: "Too many failed authentication attempts. Please try again later."
  },
  invalid_session_token: {
    id: 'error.invalidSessionToken',
    message: "Invalid session token."
  },
  session_not_found: {
    id: 'error.sessionNotFound',
    message: "Session not found."
  },
  invalid_phone_number_country_code: {
    id: 'error.invalidPhoneNumberCountryCode',
    message: "The phone number's country code is invalid, unsupported, or disabled."
  },
  otp_code_not_found: {
    id: 'error.otpCodeNotFound',
    message: "Invalid passcode, please try again."
  },
  duplicate_member_phone_number: {
    id: 'error.duplicatePhoneNumber',
    message: "A member with the specified phone number already exists for this organization."
  }
};
var getTranslatedError = function getTranslatedError(error, t) {
  var errorType = extractErrorType(error);
  var messageDescriptor = errorMessages[errorType];
  if (messageDescriptor) {
    return t(messageDescriptor);
  }
  return error.error_message;
};
var KeyToStytchEventMap = {
  'stytch.magicLinks.authenticate': StytchEventType.B2BMagicLinkAuthenticate,
  'stytch.sso.authenticate': StytchEventType.B2BSSOAuthenticate,
  'stytch.sso.discoverConnections': StytchEventType.B2BSSODiscoverConnections,
  'stytch.magicLinks.discovery.authenticate': StytchEventType.B2BMagicLinkDiscoveryAuthenticate,
  'stytch.discovery.organizations.create': StytchEventType.B2BDiscoveryOrganizationsCreate,
  'stytch.discovery.intermediateSessions.exchange': StytchEventType.B2BDiscoveryIntermediateSessionExchange,
  'stytch.magicLinks.email.loginOrSignup': StytchEventType.B2BMagicLinkEmailLoginOrSignup,
  'stytch.magicLinks.email.discovery.send': StytchEventType.B2BMagicLinkEmailDiscoverySend,
  'stytch.oauth.authenticate': StytchEventType.B2BOAuthAuthenticate,
  'stytch.oauth.discovery.authenticate': StytchEventType.B2BOAuthDiscoveryAuthenticate,
  'stytch.otps.sms.send': StytchEventType.B2BSMSOTPSend,
  'stytch.otps.sms.authenticate': StytchEventType.B2BSMSOTPAuthenticate,
  'stytch.totp.create': StytchEventType.B2BTOTPCreate,
  'stytch.totp.authenticate': StytchEventType.B2BTOTPAuthenticate,
  'stytch.recoveryCodes.recover': StytchEventType.B2BRecoveryCodesRecover,
  'stytch.impersonation.authenticate': StytchEventType.B2BImpersonationAuthenticate,
  'stytch.otps.email.authenticate': StytchEventType.B2BOTPsEmailAuthenticate,
  'stytch.otps.email.discovery.authenticate': StytchEventType.B2BOTPsEmailDiscoveryAuthenticate,
  'stytch.otps.email.discovery.send': StytchEventType.B2BOTPsEmailDiscoverySend,
  'stytch.otps.email.loginOrSignup': StytchEventType.B2BOTPsEmailLoginOrSignup,
  'stytch.organization.getBySlug': StytchEventType.B2BOrganizationsGetBySlug
};
var useMutate = function useMutate(key, fetcher, options) {
  var onEvent = useEventCallback();
  var _onError = useErrorCallback();
  return index(key, fetcher, Object.assign(Object.assign({
    throwOnError: false
  }, options), {
    onSuccess: function onSuccess(data, key, config) {
      var eventType = key in KeyToStytchEventMap ? KeyToStytchEventMap[key] : undefined;
      if (eventType) {
        onEvent({
          type: eventType,
          data: data
        });
      }
      (options === null || options === void 0 ? void 0 : options.onSuccess) && options.onSuccess(data, key, config);
    },
    onError: function onError(error, key, config) {
      _onError(error);
      (options === null || options === void 0 ? void 0 : options.onError) && options.onError(error, key, config);
    }
  }));
};
var useExtractSlug = function useExtractSlug() {
  var _a;
  var _useGlobalReducer7 = useGlobalReducer(),
    _useGlobalReducer8 = _slicedToArray(_useGlobalReducer7, 2),
    state = _useGlobalReducer8[0],
    dispatch = _useGlobalReducer8[1];
  var _h$ = h$2(),
    _h$2 = _slicedToArray(_h$, 2),
    pattern = _h$2[0],
    setPattern = _h$2[1];
  var config = useConfig();
  var stytchClient = useStytch();
  var slug = (_a = config.organizationSlug) !== null && _a !== void 0 ? _a : extractFromPattern(pattern || null, window.location.href);
  var _useMutate = useMutate('stytch.organization.getBySlug', function (_, _ref41) {
      var slug = _ref41.arg.slug;
      return stytchClient.organization.getBySlug({
        organization_slug: slug
      });
    }, {
      onSuccess: function onSuccess(_ref42) {
        var organization = _ref42.organization;
        if (organization === null) {
          dispatch({
            type: 'set_error_message_and_transition',
            errorType: ErrorType.Organization,
            canGoBack: false
          });
        } else {
          dispatch({
            type: 'set_organization',
            organization: Object.assign({}, organization)
          });
        }
      }
    }),
    trigger = _useMutate.trigger,
    isSearching = _useMutate.isMutating;
  p$1(function () {
    readB2BInternals(stytchClient).bootstrap.getAsync().then(function (_ref43) {
      var slugPattern = _ref43.slugPattern;
      setPattern(slugPattern);
    });
  }, [stytchClient]);
  p$1(function () {
    if (slug !== null && state.flowState.organization === null && state.screen === AppScreens$1.Main && state.flowState.type == AuthFlowType.Organization) {
      trigger({
        slug: slug
      });
    }
  }, [slug, state.flowState, state.screen]);
  var resultPending = pattern === undefined || isSearching;
  return {
    slug: slug,
    resultPending: resultPending
  };
};
var useBootstrap = function useBootstrap() {
  var stytchClient = useStytch();
  var _h$3 = h$2(readB2BInternals(stytchClient).bootstrap.getSync()),
    _h$4 = _slicedToArray(_h$3, 2),
    boostrap = _h$4[0],
    setBootstrap = _h$4[1];
  p$1(function () {
    readB2BInternals(stytchClient).bootstrap.getAsync().then(function (data) {
      setBootstrap(data);
    });
  }, [stytchClient]);
  return boostrap;
};
var onAuthenticateSuccess = function onAuthenticateSuccess(data, dispatch, config) {
  dispatch({
    type: 'primary_authenticate_success',
    response: data,
    includedMfaMethods: config.mfaProductInclude
  });
};
var onDiscoveryAuthenticateSuccess = function onDiscoveryAuthenticateSuccess(data, dispatch) {
  dispatch({
    type: 'set_discovery_state',
    email: data.email_address,
    discoveredOrganizations: data.discovered_organizations
  });
};
var usePasswordInput = function usePasswordInput() {
  var _useGlobalReducer9 = useGlobalReducer(),
    _useGlobalReducer0 = _slicedToArray(_useGlobalReducer9, 2),
    state = _useGlobalReducer0[0],
    dispatch = _useGlobalReducer0[1];
  var config = useConfig();
  var stytch = useStytch();
  var _useLingui5 = useLingui(),
    _t = _useLingui5._;
  var onEvent = useEventCallback();
  var onError = useErrorCallback();
  var _h$5 = h$2(state.formState.passwordState.email),
    _h$6 = _slicedToArray(_h$5, 2),
    email = _h$6[0],
    setEmail = _h$6[1];
  var _h$7 = h$2(''),
    _h$8 = _slicedToArray(_h$7, 2),
    password = _h$8[0],
    setPassword = _h$8[1];
  var _h$9 = h$2(''),
    _h$0 = _slicedToArray(_h$9, 2),
    errorMessage = _h$0[0],
    setErrorMessage = _h$0[1];
  var _h$1 = h$2(false),
    _h$10 = _slicedToArray(_h$1, 2),
    isSubmitting = _h$10[0],
    setIsSubmitting = _h$10[1];
  var organization = state.flowState.organization;
  var submitPassword = function submitPassword(organization_id) {
    var _a, _b, _c;
    setErrorMessage('');
    setIsSubmitting(true);
    stytch.passwords.authenticate({
      email_address: email,
      organization_id: organization_id,
      password: password,
      session_duration_minutes: (_b = (_a = config.sessionOptions) === null || _a === void 0 ? void 0 : _a.sessionDurationMinutes) !== null && _b !== void 0 ? _b : DEFAULT_SESSION_DURATION_MINUTES,
      locale: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.locale
    }).then(function (data) {
      setIsSubmitting(false);
      onEvent({
        type: StytchEventType.B2BPasswordAuthenticate,
        data: data
      });
      onAuthenticateSuccess(data, dispatch, config);
    })["catch"](function (err) {
      setIsSubmitting(false);
      onError(err);
      setErrorMessage(getTranslatedError(err, _t));
    });
  };
  var submitDiscoveryPassword = function submitDiscoveryPassword() {
    setErrorMessage('');
    setIsSubmitting(true);
    stytch.passwords.discovery.authenticate({
      email_address: email,
      password: password
    }).then(function (data) {
      setIsSubmitting(false);
      onEvent({
        type: StytchEventType.B2BPasswordDiscoveryAuthenticate,
        data: data
      });
      dispatch({
        type: 'transition',
        screen: AppScreens$1.Discovery
      });
      dispatch({
        type: 'set_discovery_state',
        email: data.email_address,
        discoveredOrganizations: data.discovered_organizations
      });
    })["catch"](function (err) {
      setIsSubmitting(false);
      onError(err);
      setErrorMessage(getTranslatedError(err, _t));
    });
  };
  var emailEligibleForJITProvisioning = function emailEligibleForJITProvisioning(organization, email) {
    var emailDomain = email.split('@').pop();
    return organization.email_jit_provisioning == 'NOT_ALLOWED' || organization.email_jit_provisioning == 'RESTRICTED' && emailDomain && organization.email_allowed_domains.includes(emailDomain);
  };
  var handleNonMemberReset = function handleNonMemberReset() {
    var _a, _b, _c, _d, _e;
    if (!organization) {
      return;
    }
    if (!emailEligibleForJITProvisioning(organization, email)) {
      setIsSubmitting(false);
      var organizationName = organization.organization_name;
      setErrorMessage(_t({
        id: 'error.emailNoAccessToOrg',
        message: "{email} does not have access to {organizationName}. If you think this is a mistake, contact your admin.",
        values: {
          email: email,
          organizationName: organizationName
        }
      }));
      return;
    }
    var dataLayer = readB2BInternals(stytch).dataLayer;
    dataLayer.setItem('reset-email-value', email);
    stytch.magicLinks.email.loginOrSignup({
      email_address: email,
      organization_id: organization.organization_id,
      login_redirect_url: (_a = config.passwordOptions) === null || _a === void 0 ? void 0 : _a.resetPasswordRedirectURL,
      signup_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
      login_template_id: (_c = config.emailMagicLinksOptions) === null || _c === void 0 ? void 0 : _c.loginTemplateId,
      signup_template_id: (_d = config.emailMagicLinksOptions) === null || _d === void 0 ? void 0 : _d.signupTemplateId,
      locale: (_e = config.emailMagicLinksOptions) === null || _e === void 0 ? void 0 : _e.locale
    }).then(function () {
      setIsSubmitting(false);
      dispatch({
        type: 'set_password_state',
        email: email
      });
      dispatch({
        type: 'transition',
        screen: AppScreens$1.PasswordResetVerifyConfirmation
      });
    })["catch"](function (err) {
      onError(err);
      setErrorMessage(getTranslatedError(err, _t));
      setIsSubmitting(false);
    });
  };
  return {
    stytch: stytch,
    onError: onError,
    email: email,
    setEmail: setEmail,
    password: password,
    setPassword: setPassword,
    organization: organization,
    errorMessage: errorMessage,
    setErrorMessage: setErrorMessage,
    isSubmitting: isSubmitting,
    setIsSubmitting: setIsSubmitting,
    submitPassword: submitPassword,
    submitDiscoveryPassword: submitDiscoveryPassword,
    handleNonMemberReset: handleNonMemberReset
  };
};
var extractFromPattern = function extractFromPattern(pattern, href) {
  if (pattern === null) return null;
  var url = new URL(href);
  url.search = '';
  var currentUrl = url.toString().trim();
  var regexPattern = pattern.replace(/\./g, '\\.').replace(/\*/g, '(?:[^.]+)').replace('{{slug}}', '(.+)');
  var regex = new RegExp(regexPattern);
  var match = currentUrl.match(regex);
  if (match && match[1]) {
    return match[1];
  }
  return null;
};
var useEmailOtpDiscoverySend = function useEmailOtpDiscoverySend() {
  var _ref44 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    throwOnError = _ref44.throwOnError;
  var _useGlobalReducer1 = useGlobalReducer(),
    _useGlobalReducer10 = _slicedToArray(_useGlobalReducer1, 2),
    dispatch = _useGlobalReducer10[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.otps.email.discovery.send', function (_key, _ref45) {
    var email = _ref45.arg.email;
    var _a, _b;
    return stytchClient.otps.email.discovery.send({
      email_address: email,
      login_template_id: (_a = config.emailOtpOptions) === null || _a === void 0 ? void 0 : _a.loginTemplateId,
      locale: (_b = config.emailOtpOptions) === null || _b === void 0 ? void 0 : _b.locale
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'send_email_otp',
        codeExpiration: getOtpCodeExpiration()
      });
    },
    throwOnError: throwOnError
  });
};
var useEmailOtpLoginOrSignup = function useEmailOtpLoginOrSignup() {
  var _ref46 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    throwOnError = _ref46.throwOnError;
  var _useGlobalReducer11 = useGlobalReducer(),
    _useGlobalReducer12 = _slicedToArray(_useGlobalReducer11, 2),
    dispatch = _useGlobalReducer12[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.otps.email.loginOrSignup', function (_key, _ref47) {
    var _ref47$arg = _ref47.arg,
      email = _ref47$arg.email,
      organization_id = _ref47$arg.organization_id;
    var _a, _b, _c;
    return stytchClient.otps.email.loginOrSignup({
      email_address: email,
      organization_id: organization_id,
      login_template_id: (_a = config.emailOtpOptions) === null || _a === void 0 ? void 0 : _a.loginTemplateId,
      signup_template_id: (_b = config.emailOtpOptions) === null || _b === void 0 ? void 0 : _b.signupTemplateId,
      locale: (_c = config.emailOtpOptions) === null || _c === void 0 ? void 0 : _c.locale
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'send_email_otp',
        codeExpiration: getOtpCodeExpiration()
      });
    },
    throwOnError: throwOnError
  });
};
var useEmlDiscoverySend = function useEmlDiscoverySend() {
  var _useGlobalReducer13 = useGlobalReducer(),
    _useGlobalReducer14 = _slicedToArray(_useGlobalReducer13, 2),
    dispatch = _useGlobalReducer14[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.magicLinks.email.discovery.send', function (_, _ref48) {
    var email = _ref48.arg.email;
    var _a, _b, _c;
    return stytchClient.magicLinks.email.discovery.send({
      email_address: email,
      discovery_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.discoveryRedirectURL,
      login_template_id: (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.loginTemplateId,
      locale: (_c = config.emailMagicLinksOptions) === null || _c === void 0 ? void 0 : _c.locale
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'transition',
        screen: AppScreens$1.EmailConfirmation
      });
    }
  });
};
var useEmlLoginOrSignup = function useEmlLoginOrSignup() {
  var _useGlobalReducer15 = useGlobalReducer(),
    _useGlobalReducer16 = _slicedToArray(_useGlobalReducer15, 2),
    dispatch = _useGlobalReducer16[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.magicLinks.email.loginOrSignup', function (_, _ref49) {
    var _ref49$arg = _ref49.arg,
      email = _ref49$arg.email,
      organization_id = _ref49$arg.organization_id;
    var _a, _b, _c, _d, _e;
    return stytchClient.magicLinks.email.loginOrSignup({
      email_address: email,
      organization_id: organization_id,
      login_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.loginRedirectURL,
      signup_redirect_url: (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.signupRedirectURL,
      login_template_id: (_c = config.emailMagicLinksOptions) === null || _c === void 0 ? void 0 : _c.loginTemplateId,
      signup_template_id: (_d = config.emailMagicLinksOptions) === null || _d === void 0 ? void 0 : _d.signupTemplateId,
      locale: (_e = config.emailMagicLinksOptions) === null || _e === void 0 ? void 0 : _e.locale
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'transition',
        screen: AppScreens$1.EmailConfirmation
      });
    },
    onError: function onError(e) {
      logger.error(e);
    }
  });
};
var UsePasswordText = He(Text)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n  font-weight: bold !important;\n  cursor: pointer;\n"])));
var PasswordUseButton = function PasswordUseButton(_ref50) {
  var email = _ref50.email;
  var _useGlobalReducer17 = useGlobalReducer(),
    _useGlobalReducer18 = _slicedToArray(_useGlobalReducer17, 2),
    dispatch = _useGlobalReducer18[1];
  var _useLingui6 = useLingui(),
    _t = _useLingui6._;
  var handleUsePassword = function handleUsePassword() {
    dispatch({
      type: 'use_password_auth',
      email: email
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    justifyContent: "center"
  }, /*#__PURE__*/wn.createElement(UsePasswordText, {
    onClick: handleUsePassword
  }, _t({
    id: 'button.usePassword',
    message: "Use a password instead"
  })));
};
var JIT_PROVISIONING_ERRORS = ['email_jit_provisioning_not_allowed', 'invalid_email_for_jit_provisioning'];
var useParseErrorMessage = function useParseErrorMessage() {
  var _useLingui7 = useLingui(),
    _t = _useLingui7._;
  return function (error, _ref51) {
    var email = _ref51.email,
      organizationName = _ref51.org;
    if (JIT_PROVISIONING_ERRORS.includes(error.error_type)) {
      return _t({
        id: 'error.jitIneligible',
        message: "{email} does not have access to {organizationName}. If you think this is a mistake, contact your admin",
        values: {
          email: email,
          organizationName: organizationName
        }
      });
    }
    return getTranslatedError(error, _t);
  };
};
var EmailForm = function EmailForm(_ref52) {
  var showPasswordButton = _ref52.showPasswordButton;
  var _useGlobalReducer19 = useGlobalReducer(),
    _useGlobalReducer20 = _slicedToArray(_useGlobalReducer19, 2),
    state = _useGlobalReducer20[0],
    dispatch = _useGlobalReducer20[1];
  var _h$11 = h$2(state.formState.passwordState.email),
    _h$12 = _slicedToArray(_h$11, 2),
    emailInput = _h$12[0],
    setEmailInput = _h$12[1];
  var parseErrorMessage = useParseErrorMessage();
  var _useLingui8 = useLingui(),
    _t2 = _useLingui8._;
  var _useEffectiveAuthConf = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf.products;
  var enableEml = products.includes(B2BProducts.emailMagicLinks);
  var enableOtp = products.includes(B2BProducts.emailOtp);
  var providedEmail = state.primary.email;
  var email = providedEmail || emailInput;
  var _useEmlLoginOrSignup = useEmlLoginOrSignup(),
    stytchEmlLoginOrSignup = _useEmlLoginOrSignup.trigger,
    emlError = _useEmlLoginOrSignup.error,
    emlIsMutating = _useEmlLoginOrSignup.isMutating;
  var _useEmailOtpLoginOrSi = useEmailOtpLoginOrSignup(),
    stytchOtpLoginOrSignup = _useEmailOtpLoginOrSi.trigger,
    otpError = _useEmailOtpLoginOrSi.error,
    otpIsMutating = _useEmailOtpLoginOrSi.isMutating;
  var organization = state.flowState.organization;
  if (!organization) return /*#__PURE__*/wn.createElement(wn.Fragment, null);
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            e.preventDefault();
            dispatch({
              type: 'set_user_supplied_email',
              email: email
            });
            if (enableEml && enableOtp) {
              dispatch({
                type: 'transition',
                screen: AppScreens$1.EmailMethodSelection,
                history: 'push'
              });
            } else if (enableEml) {
              stytchEmlLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            } else if (enableOtp) {
              stytchOtpLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            }
          case 3:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
  };
  var isMutating = emlIsMutating || otpIsMutating;
  var error = emlError || otpError;
  var errorText = error && (/*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: parseErrorMessage(error, {
      email: email,
      org: organization.organization_name
    })
  }));
  if (providedEmail) {
    return /*#__PURE__*/wn.createElement(Flex, {
      direction: "column",
      gap: 12
    }, /*#__PURE__*/wn.createElement(Flex, {
      direction: "column",
      gap: 8
    }, products.filter(function (product) {
      return product === B2BProducts.emailMagicLinks || product === B2BProducts.emailOtp;
    }).map(function (product) {
      switch (product) {
        case B2BProducts.emailMagicLinks:
          return /*#__PURE__*/wn.createElement(LoadingButton, {
            key: product,
            type: "button",
            onClick: function onClick() {
              dispatch({
                type: 'set_user_supplied_email',
                email: email
              });
              stytchEmlLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            },
            isLoading: emlIsMutating,
            disabled: isMutating,
            variant: "text"
          }, _t2({
            id: 'button.emailLink',
            message: "Email me a link"
          }));
        case B2BProducts.emailOtp:
          return /*#__PURE__*/wn.createElement(LoadingButton, {
            key: product,
            type: "button",
            onClick: function onClick() {
              dispatch({
                type: 'set_user_supplied_email',
                email: email
              });
              stytchOtpLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            },
            isLoading: otpIsMutating,
            disabled: isMutating,
            variant: "text"
          }, _t2({
            id: 'button.emailCode',
            message: "Email me a code"
          }));
      }
    })), showPasswordButton && /*#__PURE__*/wn.createElement(PasswordUseButton, {
      email: email
    }));
  }
  return /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 12
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    minHeight: 52
  }, /*#__PURE__*/wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmailInput
  }), errorText), /*#__PURE__*/wn.createElement(SubmitButton, {
    isSubmitting: isMutating,
    text: _t2({
      id: 'button.continueWithEmail',
      message: "Continue with email"
    })
  })), showPasswordButton && /*#__PURE__*/wn.createElement(PasswordUseButton, {
    email: email
  })));
};
var EmailDiscoveryForm = function EmailDiscoveryForm(_ref53) {
  var showPasswordButton = _ref53.showPasswordButton;
  var _useGlobalReducer21 = useGlobalReducer(),
    _useGlobalReducer22 = _slicedToArray(_useGlobalReducer21, 2),
    state = _useGlobalReducer22[0],
    dispatch = _useGlobalReducer22[1];
  var _h$13 = h$2(state.formState.passwordState.email),
    _h$14 = _slicedToArray(_h$13, 2),
    email = _h$14[0],
    setEmail = _h$14[1];
  var _useLingui9 = useLingui(),
    _t3 = _useLingui9._;
  var _useEffectiveAuthConf2 = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf2.products;
  var enableEml = products.includes(B2BProducts.emailMagicLinks);
  var enableOtp = products.includes(B2BProducts.emailOtp);
  var _useEmlDiscoverySend = useEmlDiscoverySend(),
    stytchEmlDiscoverySend = _useEmlDiscoverySend.trigger,
    emlError = _useEmlDiscoverySend.error,
    emlIsMutating = _useEmlDiscoverySend.isMutating;
  var _useEmailOtpDiscovery = useEmailOtpDiscoverySend(),
    stytchOtpDiscoverySend = _useEmailOtpDiscovery.trigger,
    otpError = _useEmailOtpDiscovery.error,
    otpIsMutating = _useEmailOtpDiscovery.isMutating;
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            e.preventDefault();
            dispatch({
              type: 'set_user_supplied_email',
              email: email
            });
            if (enableEml && enableOtp) {
              dispatch({
                type: 'transition',
                screen: AppScreens$1.EmailMethodSelection,
                history: 'push'
              });
            } else if (enableEml) {
              stytchEmlDiscoverySend({
                email: email
              });
            } else if (enableOtp) {
              stytchOtpDiscoverySend({
                email: email
              });
            }
          case 3:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
  };
  var isMutating = emlIsMutating || otpIsMutating;
  var error = emlError || otpError;
  return /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 12
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    minHeight: 52
  }, /*#__PURE__*/wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  }), error && /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: getTranslatedError(error, _t3)
  })), /*#__PURE__*/wn.createElement(SubmitButton, {
    isSubmitting: isMutating,
    text: _t3({
      id: 'button.continueWithEmail',
      message: "Continue with email"
    })
  })), showPasswordButton && /*#__PURE__*/wn.createElement(PasswordUseButton, {
    email: email
  })));
};
var CreateIcon = function CreateIcon(IconSvgComponent) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    wrapped: true
  };
  var IconComponent = function IconComponent() {
    var component = /*#__PURE__*/wn.createElement(IconSvgComponent, null);
    return options.wrapped ? (/*#__PURE__*/wn.createElement(Flex, {
      height: 24,
      width: 24
    }, component)) : component;
  };
  return IconComponent;
};
var GoogleIconSvg = function GoogleIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 48 48"
  }, /*#__PURE__*/wn.createElement("path", {
    fill: "#FFC107",
    d: "M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"
  }), /*#__PURE__*/wn.createElement("path", {
    fill: "#FF3D00",
    d: "M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"
  }), /*#__PURE__*/wn.createElement("path", {
    fill: "#4CAF50",
    d: "M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"
  }), /*#__PURE__*/wn.createElement("path", {
    fill: "#1976D2",
    d: "M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"
  }));
};
var GoogleIcon = CreateIcon(GoogleIconSvg);
var MicrosoftIconSvg = function MicrosoftIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M9.52382 0.952381H0.952393V9.52381H9.52382V0.952381Z",
    fill: "#F25022"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M9.52382 10.4762H0.952393V19.0476H9.52382V10.4762Z",
    fill: "#00A4EF"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M19.0475 0.952381H10.4761V9.52381H19.0475V0.952381Z",
    fill: "#7FBA00"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M19.0475 10.4762H10.4761V19.0476H19.0475V10.4762Z",
    fill: "#FFB900"
  }));
};
var MicrosoftIcon = CreateIcon(MicrosoftIconSvg);
var OktaIcon = function OktaIcon() {
  return /*#__PURE__*/wn.createElement("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("rect", {
    width: "24",
    height: "24",
    rx: "12",
    fill: "white"
  }), /*#__PURE__*/wn.createElement("g", {
    clipPath: "url(#clip0_239_1214)"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M12.9031 3.125L12.5329 7.685C12.3577 7.665 12.1826 7.655 12.0025 7.655C11.7773 7.655 11.5572 7.67 11.3421 7.705L11.1319 5.495C11.1269 5.425 11.1819 5.365 11.252 5.365H11.6272L11.4471 3.13C11.4421 3.06 11.4972 3 11.5622 3H12.788C12.8581 3 12.9131 3.06 12.9031 3.13V3.125ZM9.81101 3.35C9.791 3.285 9.72095 3.245 9.65591 3.27L8.50513 3.69C8.44008 3.715 8.41006 3.79 8.44008 3.85L9.37572 5.89L9.02048 6.02C8.95543 6.045 8.92541 6.12 8.95543 6.18L9.91108 8.185C10.2563 7.995 10.6316 7.85 11.0268 7.76L9.81602 3.35H9.81101ZM6.9891 4.62L9.63589 8.35C9.30067 8.57 8.99546 8.83 8.73528 9.13L7.14921 7.57C7.09917 7.52 7.10417 7.44 7.15421 7.395L7.44441 7.155L5.86834 5.56C5.8183 5.51 5.8233 5.43 5.87834 5.385L6.81398 4.6C6.86901 4.555 6.94407 4.565 6.98409 4.62H6.9891ZM4.76759 6.78C4.71255 6.74 4.6325 6.76 4.59747 6.82L3.98706 7.88C3.95203 7.94 3.97705 8.015 4.03709 8.045L6.06847 9.005L5.87834 9.33C5.84332 9.39 5.86834 9.47 5.93338 9.495L7.95475 10.42C8.09985 10.045 8.29498 9.695 8.53515 9.38L4.76759 6.78ZM3.27157 9.66C3.28158 9.59 3.35163 9.55 3.41667 9.565L7.84468 10.72C7.7296 11.095 7.66456 11.49 7.65455 11.9L5.43804 11.72C5.368 11.715 5.31796 11.65 5.33297 11.58L5.39802 11.21L3.1615 11C3.09145 10.995 3.04642 10.93 3.05643 10.86L3.26657 9.655L3.27157 9.66ZM3.10646 12.65C3.03641 12.655 2.99138 12.72 3.00139 12.79L3.21653 13.995C3.22654 14.065 3.29659 14.105 3.36163 14.09L5.53311 13.525L5.59815 13.895C5.60816 13.965 5.67821 14.005 5.74325 13.99L7.88471 13.4C7.75962 13.03 7.67957 12.635 7.65955 12.23L3.10146 12.65H3.10646ZM3.81694 15.82C3.78192 15.76 3.80694 15.685 3.86698 15.655L7.99978 13.695C8.15489 14.065 8.36503 14.41 8.6152 14.72L6.80397 16.01C6.74893 16.05 6.66888 16.035 6.63386 15.975L6.44373 15.645L4.59747 16.92C4.54243 16.96 4.46238 16.94 4.42736 16.88L3.81194 15.82H3.81694ZM8.82534 14.96L5.60816 18.215C5.55812 18.265 5.56313 18.345 5.61817 18.39L6.5588 19.175C6.61384 19.22 6.68889 19.21 6.72892 19.155L8.0298 17.325L8.32 17.57C8.37504 17.615 8.45509 17.605 8.49512 17.545L9.75598 15.715C9.41574 15.505 9.10053 15.25 8.83035 14.96H8.82534ZM8.18991 20.185C8.12487 20.16 8.09485 20.085 8.12487 20.025L10.0312 15.865C10.3814 16.045 10.7617 16.18 11.1569 16.255L10.5965 18.405C10.5815 18.47 10.5065 18.51 10.4414 18.485L10.0862 18.355L9.4908 20.52C9.47078 20.585 9.40073 20.625 9.33569 20.6L8.18491 20.18L8.18991 20.185ZM11.4721 16.31L11.1019 20.87C11.0969 20.94 11.1519 21 11.217 21H12.4428C12.5128 21 12.5679 20.94 12.5579 20.87L12.3778 18.635H12.753C12.8231 18.635 12.8781 18.575 12.8731 18.505L12.6629 16.295C12.4478 16.33 12.2277 16.345 12.0025 16.345C11.8224 16.345 11.6473 16.335 11.4721 16.31ZM15.8851 3.965C15.9152 3.9 15.8851 3.83 15.8201 3.805L14.6693 3.385C14.6043 3.36 14.5342 3.4 14.5142 3.465L13.9188 5.63L13.5636 5.5C13.4985 5.475 13.4285 5.515 13.4085 5.58L12.8481 7.73C13.2483 7.81 13.6236 7.945 13.9738 8.12L15.8851 3.965ZM18.3968 5.78L15.1797 9.035C14.9095 8.745 14.5993 8.49 14.254 8.28L15.5149 6.45C15.5549 6.395 15.635 6.38 15.69 6.425L15.9802 6.67L17.2811 4.84C17.3211 4.785 17.4012 4.775 17.4512 4.82L18.3918 5.605C18.4469 5.65 18.4469 5.73 18.4018 5.78H18.3968ZM20.138 8.34C20.2031 8.31 20.2231 8.235 20.1881 8.175L19.5726 7.115C19.5376 7.055 19.4576 7.04 19.4025 7.075L17.5563 8.35L17.3661 8.025C17.3311 7.965 17.2511 7.945 17.196 7.99L15.3848 9.28C15.635 9.59 15.8401 9.935 16.0002 10.305L20.133 8.345L20.138 8.34ZM20.7885 10L20.9986 11.205C21.0086 11.275 20.9636 11.335 20.8935 11.345L16.3354 11.77C16.3154 11.36 16.2354 10.97 16.1103 10.6L18.2517 10.01C18.3168 9.99 18.3868 10.035 18.3968 10.105L18.4619 10.475L20.6334 9.91C20.6984 9.895 20.7685 9.935 20.7785 10.005L20.7885 10ZM20.5833 14.425C20.6484 14.44 20.7184 14.4 20.7284 14.33L20.9386 13.125C20.9486 13.055 20.9035 12.995 20.8335 12.985L18.597 12.775L18.662 12.405C18.672 12.335 18.627 12.275 18.557 12.265L16.3404 12.085C16.3304 12.495 16.2654 12.89 16.1503 13.265L20.5783 14.42L20.5833 14.425ZM19.4025 17.175C19.3675 17.235 19.2875 17.25 19.2324 17.215L15.4649 14.615C15.705 14.3 15.9001 13.95 16.0452 13.575L18.0666 14.5C18.1317 14.53 18.1567 14.605 18.1217 14.665L17.9315 14.99L19.9629 15.95C20.0229 15.98 20.048 16.055 20.0129 16.115L19.4025 17.175ZM14.3641 15.64L17.0109 19.37C17.0509 19.425 17.131 19.435 17.181 19.39L18.1167 18.605C18.1717 18.56 18.1717 18.48 18.1267 18.43L16.5506 16.835L16.8408 16.595C16.8958 16.55 16.8958 16.47 16.8458 16.42L15.2597 14.86C14.9945 15.16 14.6943 15.425 14.3591 15.64H14.3641ZM14.3391 20.72C14.274 20.745 14.204 20.705 14.184 20.64L12.9732 16.23C13.3684 16.14 13.7437 15.995 14.0889 15.805L15.0446 17.81C15.0746 17.875 15.0446 17.95 14.9795 17.97L14.6243 18.1L15.5599 20.14C15.5899 20.205 15.5599 20.275 15.4949 20.3L14.3441 20.72H14.3391Z",
    fill: "black"
  })), /*#__PURE__*/wn.createElement("defs", null, /*#__PURE__*/wn.createElement("clipPath", {
    id: "clip0_239_1214"
  }, /*#__PURE__*/wn.createElement("rect", {
    width: "18",
    height: "18",
    fill: "white",
    transform: "translate(3 3)"
  }))));
};
var OktaIcon$1 = CreateIcon(OktaIcon);
var SSOIconSvg = function SSOIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("rect", {
    width: "24",
    height: "24",
    rx: "12",
    fill: "white"
  }), /*#__PURE__*/wn.createElement("g", {
    clipPath: "url(#clip0_221_1596)"
  }, /*#__PURE__*/wn.createElement("rect", {
    width: "18",
    height: "18",
    transform: "translate(3 3)",
    fill: "white"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M17.5125 10.53C17.0025 7.9425 14.73 6 12 6C9.8325 6 7.95 7.23 7.0125 9.03C4.755 9.27 3 11.1825 3 13.5C3 15.9825 5.0175 18 7.5 18H17.25C19.32 18 21 16.32 21 14.25C21 12.27 19.4625 10.665 17.5125 10.53Z",
    fill: "black"
  })), /*#__PURE__*/wn.createElement("g", {
    clipPath: "url(#clip1_221_1596)"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M15.9684 13.1139L14.9987 14.0933L14.5152 13.6098L14.2501 13.3446L13.9849 13.6098L13.5001 14.0946L13.0152 13.6098L12.9054 13.4999H12.7501H12.6188H12.3532L12.2651 13.7504C12.0087 14.4788 11.3147 14.9999 10.5001 14.9999C9.46592 14.9999 8.62506 14.1591 8.62506 13.1249C8.62506 12.0908 9.46592 11.2499 10.5001 11.2499C11.3147 11.2499 12.0087 11.7711 12.2651 12.4994L12.3532 12.7499H12.6188H15.5969L15.9684 13.1139ZM9.00006 13.1249C9.00006 13.9508 9.6742 14.6249 10.5001 14.6249C11.3259 14.6249 12.0001 13.9508 12.0001 13.1249C12.0001 12.2991 11.3259 11.6249 10.5001 11.6249C9.6742 11.6249 9.00006 12.2991 9.00006 13.1249Z",
    fill: "white",
    stroke: "white",
    strokeWidth: "0.75"
  })), /*#__PURE__*/wn.createElement("defs", null, /*#__PURE__*/wn.createElement("clipPath", {
    id: "clip0_221_1596"
  }, /*#__PURE__*/wn.createElement("rect", {
    width: "18",
    height: "18",
    fill: "white",
    transform: "translate(3 3)"
  })), /*#__PURE__*/wn.createElement("clipPath", {
    id: "clip1_221_1596"
  }, /*#__PURE__*/wn.createElement("rect", {
    width: "8.25",
    height: "6",
    fill: "white",
    transform: "translate(8.25006 10.1251)"
  }))));
};
var SSOIcon = CreateIcon(SSOIconSvg);
var ButtonInnerContainer = He(Flex)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n  margin: 8px;\n"])));
var StyledButton$2 = He(Button)(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n  height: auto;\n  min-height: 45px;\n"])));
var OutlinedButton = function OutlinedButton(_ref54) {
  var onClick = _ref54.onClick,
    id = _ref54.id,
    children = _ref54.children,
    icon = _ref54.icon;
  return /*#__PURE__*/y(StyledButton$2, {
    type: "button",
    onClick: onClick,
    variant: "outlined",
    id: id
  }, /*#__PURE__*/y(ButtonInnerContainer, {
    justifyContent: "center",
    alignItems: "center",
    gap: 4
  }, icon, /*#__PURE__*/y("span", {
    style: {
      verticalAlign: 'middle'
    }
  }, children)));
};
var iconMap = {
  'google-workspace': GoogleIcon,
  'microsoft-entra': MicrosoftIcon,
  okta: OktaIcon$1
};
var IdentityProviderIcon = function IdentityProviderIcon(_ref55) {
  var identityProvider = _ref55.identityProvider;
  var _a;
  var Icon = (_a = iconMap[identityProvider]) !== null && _a !== void 0 ? _a : SSOIcon;
  return /*#__PURE__*/y(Icon, null);
};
var SSOButton = function SSOButton(_ref56) {
  var displayName = _ref56.display_name,
    connection_id = _ref56.connection_id,
    identity_provider = _ref56.identity_provider;
  var stytchClient = useStytch();
  var config = useConfig();
  var _useLingui0 = useLingui(),
    _t = _useLingui0._;
  var onButtonClick = function onButtonClick() {
    var _a, _b;
    return stytchClient.sso.start({
      connection_id: connection_id,
      signup_redirect_url: (_a = config.ssoOptions) === null || _a === void 0 ? void 0 : _a.signupRedirectURL,
      login_redirect_url: (_b = config.ssoOptions) === null || _b === void 0 ? void 0 : _b.loginRedirectURL
    });
  };
  var icon = /*#__PURE__*/y(IdentityProviderIcon, {
    identityProvider: identity_provider
  });
  return /*#__PURE__*/y(OutlinedButton, {
    id: "sso-".concat(displayName),
    onClick: onButtonClick,
    icon: icon
  }, _t({
    id: 'provider.continueWith',
    message: "Continue with {displayName}",
    values: {
      displayName: displayName
    }
  }));
};
var SSOButtons = function SSOButtons() {
  var _a;
  var _useGlobalReducer23 = useGlobalReducer(),
    _useGlobalReducer24 = _slicedToArray(_useGlobalReducer23, 2),
    state = _useGlobalReducer24[0],
    dispatch = _useGlobalReducer24[1];
  var _useLingui1 = useLingui(),
    _t2 = _useLingui1._;
  if (state.flowState.type === AuthFlowType.Discovery) {
    return /*#__PURE__*/y(OutlinedButton, {
      icon: /*#__PURE__*/y(SSOIcon, null),
      onClick: function onClick() {
        dispatch({
          type: 'transition',
          screen: AppScreens$1.SSODiscoveryEmail,
          history: 'push'
        });
      },
      id: "sso-discovery"
    }, _t2({
      id: 'provider.continueWithSSO',
      message: "Continue with SSO"
    }));
  }
  return /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 8,
    className: "oauth-buttons"
  }, (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.sso_active_connections.map(function (provider) {
    return /*#__PURE__*/y(SSOButton, {
      key: "oauth-".concat(provider.display_name),
      display_name: provider.display_name,
      connection_id: provider.connection_id,
      identity_provider: provider.identity_provider
    });
  }));
};
var DividerContainer = He(Flex)(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n  color: ", ";\n"])), function (props) {
  return props.theme.colors.secondary;
});
var DividerBar = He.div(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["\n  ", "\n  ", "\n  border-bottom: 1px solid ", ";\n  flex-grow: 1;\n"])), function (props) {
  return props.$placement === 'left' && 'margin-right: 6px;';
}, function (props) {
  return props.$placement === 'right' && 'margin-left: 6px;';
}, function (props) {
  return props.theme.colors.secondary;
});
var StyledText = He(Text)(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["\n  color: ", ";\n"])), function (props) {
  return props.theme.colors.secondary;
});
var Divider = function Divider() {
  var _useLingui10 = useLingui(),
    _t = _useLingui10._;
  return /*#__PURE__*/wn.createElement(DividerContainer, {
    alignItems: "center"
  }, /*#__PURE__*/wn.createElement(DividerBar, {
    "$placement": "left"
  }), /*#__PURE__*/wn.createElement(StyledText, null, _t({
    id: 'methodDivider.text',
    message: "or"
  })), /*#__PURE__*/wn.createElement(DividerBar, {
    "$placement": "right"
  }));
};
var LoggingInScreen = function LoggingInScreen() {
  var _useLingui11 = useLingui(),
    _t = _useLingui11._;
  return /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 36,
    alignItems: "center"
  }, /*#__PURE__*/y(Text, {
    size: "header"
  }, _t({
    id: 'login.loading',
    message: "Logging in..."
  })), /*#__PURE__*/y(CircularProgress, {
    size: 100,
    thickness: 8
  }));
};
var LoadingScreen = function LoadingScreen() {
  return /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 36,
    alignItems: "center"
  }, /*#__PURE__*/y(CircularProgress, {
    size: 100,
    thickness: 8
  }));
};
var PasswordIconSvg = function PasswordIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M12 6.5c3.79 0 7.17 2.13 8.82 5.5-1.65 3.37-5.02 5.5-8.82 5.5S4.83 15.37 3.18 12C4.83 8.63 8.21 6.5 12 6.5m0-2C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5m0 5c1.38 0 2.5 1.12 2.5 2.5s-1.12 2.5-2.5 2.5-2.5-1.12-2.5-2.5 1.12-2.5 2.5-2.5m0-2c-2.48 0-4.5 2.02-4.5 4.5s2.02 4.5 4.5 4.5 4.5-2.02 4.5-4.5-2.02-4.5-4.5-4.5",
    fill: "currentColor"
  }));
};
var PasswordIconVisibleSvg = function PasswordIconVisibleSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M12 6c3.79 0 7.17 2.13 8.82 5.5-.59 1.22-1.42 2.27-2.41 3.12l1.41 1.41c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l1.65 1.65C10.66 6.09 11.32 6 12 6m-1.07 1.14L13 9.21c.57.25 1.03.71 1.28 1.28l2.07 2.07c.08-.34.14-.7.14-1.07C16.5 9.01 14.48 7 12 7c-.37 0-.72.05-1.07.14M2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.98-.29 4.32-.82l3.42 3.42 1.41-1.41L3.42 2.45zm7.5 7.5 2.61 2.61c-.04.01-.08.02-.12.02-1.38 0-2.5-1.12-2.5-2.5 0-.05.01-.08.01-.13m-3.4-3.4 1.75 1.75c-.23.55-.36 1.15-.36 1.78 0 2.48 2.02 4.5 4.5 4.5.63 0 1.23-.13 1.77-.36l.98.98c-.88.24-1.8.38-2.75.38-3.79 0-7.17-2.13-8.82-5.5.7-1.43 1.72-2.61 2.93-3.53",
    fill: "currentColor"
  }));
};
var BaseInput = He.input(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["\n  border: 0;\n  padding: 0;\n  width: 100%;\n\n  background-color: transparent;\n  height: 45px;\n  color: ", ";\n  font-family: ", ";\n  font-size: 18px;\n\n  &::placeholder: {\n    color: ", ";\n  }\n\n  &:disabled {\n    color: ", ";\n    background-color: ", ";\n  }\n\n  &:focus {\n    outline: none;\n  }\n"])), function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  return props.theme.inputs.placeholderColor;
}, function (props) {
  return props.theme.colors.disabledText;
}, function (props) {
  return props.theme.colors.disabled;
});
var InputContainer = He(Flex)(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  height: 45px;\n  padding-left: 8px;\n  padding-right: 8px;\n  border: 1px solid ", ";\n  border-radius: ", ";\n  color: ", ";\n  font-family: ", ";\n  font-size: 18px;\n  width: calc(100% - 18px);\n  & input::placeholder: {\n    color: ", ";\n  }\n"])), function (props) {
  return props.theme.inputs.backgroundColor;
}, function (props) {
  return props.theme.inputs.borderColor;
}, function (props) {
  return props.theme.inputs.borderRadius;
}, function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  return props.theme.inputs.placeholderColor;
});
var PasswordIconButton = He.button(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["\n  all: unset;\n  cursor: pointer;\n  color: ", ";\n\n  &:disabled {\n    cursor: default;\n  }\n"])), function (props) {
  return props.passwordEntered ? props.theme.inputs.textColor : props.theme.colors.disabledText;
});
var PasswordIcon = function PasswordIcon(_ref57) {
  var onClick = _ref57.onClick,
    passwordEntered = _ref57.passwordEntered,
    visible = _ref57.visible;
  return /*#__PURE__*/wn.createElement(PasswordIconButton, {
    onClick: onClick,
    type: "button",
    passwordEntered: passwordEntered
  }, visible ? /*#__PURE__*/wn.createElement(PasswordIconVisibleSvg, null) : /*#__PURE__*/wn.createElement(PasswordIconSvg, null));
};
var PasswordInput = function PasswordInput(_ref58) {
  var password = _ref58.password,
    setPassword = _ref58.setPassword,
    type = _ref58.type;
  var _useLingui12 = useLingui(),
    _t = _useLingui12._;
  var _h$15 = h$2(false),
    _h$16 = _slicedToArray(_h$15, 2),
    visible = _h$16[0],
    setVisible = _h$16[1];
  return /*#__PURE__*/wn.createElement(InputContainer, {
    gap: 2,
    alignItems: "center"
  }, /*#__PURE__*/wn.createElement(BaseInput, {
    name: "password",
    "aria-label": _t({
      id: 'formField.password.ariaLabel',
      message: "Password"
    }),
    id: "".concat(type, "-password"),
    autoComplete: "".concat(type, "-password"),
    type: visible ? 'text' : 'password',
    value: password,
    onChange: function onChange(e) {
      return setPassword(e.target.value);
    },
    required: true
  }), /*#__PURE__*/wn.createElement(PasswordIcon, {
    onClick: function onClick() {
      return setVisible(function (visible) {
        return !visible;
      });
    },
    passwordEntered: !!password,
    visible: visible
  }));
};
var GetHelpText = He(Text)(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["\n  font-weight: bold !important;\n  cursor: pointer;\n"])));
var PasswordsAuthenticate = function PasswordsAuthenticate() {
  var _useGlobalReducer25 = useGlobalReducer(),
    _useGlobalReducer26 = _slicedToArray(_useGlobalReducer25, 2),
    dispatch = _useGlobalReducer26[1];
  var _useLingui13 = useLingui(),
    _t = _useLingui13._;
  var _usePasswordInput = usePasswordInput(),
    email = _usePasswordInput.email,
    setEmail = _usePasswordInput.setEmail,
    password = _usePasswordInput.password,
    setPassword = _usePasswordInput.setPassword,
    organization = _usePasswordInput.organization,
    errorMessage = _usePasswordInput.errorMessage,
    setErrorMessage = _usePasswordInput.setErrorMessage,
    isSubmitting = _usePasswordInput.isSubmitting,
    submitPassword = _usePasswordInput.submitPassword,
    submitDiscoveryPassword = _usePasswordInput.submitDiscoveryPassword;
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            e.preventDefault();
            if (!email.match(EMAIL_REGEX)) {
              setErrorMessage(_t({
                id: 'error.invalidEmailAddress',
                message: "Invalid email address"
              }));
            } else {
              if (!organization) {
                submitDiscoveryPassword();
              } else {
                submitPassword(organization.organization_id);
              }
            }
          case 2:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
  };
  var onGetHelp = function onGetHelp() {
    dispatch({
      type: 'set_password_state',
      email: email
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.PasswordForgotForm
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 28
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'password.login.title',
    message: "Log in with email and password"
  })), /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t({
    id: 'formField.email.label',
    message: "Email"
  })), /*#__PURE__*/wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t({
    id: 'formField.password.label',
    message: "Password"
  })), /*#__PURE__*/wn.createElement(PasswordInput, {
    password: password,
    setPassword: setPassword,
    type: "current"
  }), /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: errorMessage
  })), /*#__PURE__*/wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: _t({
      id: 'button.continue',
      message: "Continue"
    })
  }), /*#__PURE__*/wn.createElement(Flex, {
    onClick: onGetHelp,
    justifyContent: "center"
  }, /*#__PURE__*/wn.createElement(GetHelpText, {
    color: "secondary"
  }, _t({
    id: 'link.signupResetPassword',
    message: "Sign up or reset password"
  }))))));
};
var PasswordsEmailForm = function PasswordsEmailForm() {
  var _useGlobalReducer27 = useGlobalReducer(),
    _useGlobalReducer28 = _slicedToArray(_useGlobalReducer27, 2),
    dispatch = _useGlobalReducer28[1];
  var _useLingui14 = useLingui(),
    _t = _useLingui14._;
  var _usePasswordInput2 = usePasswordInput(),
    stytch = _usePasswordInput2.stytch,
    email = _usePasswordInput2.email,
    setEmail = _usePasswordInput2.setEmail,
    password = _usePasswordInput2.password,
    setPassword = _usePasswordInput2.setPassword,
    organization = _usePasswordInput2.organization,
    errorMessage = _usePasswordInput2.errorMessage,
    setErrorMessage = _usePasswordInput2.setErrorMessage,
    isSubmitting = _usePasswordInput2.isSubmitting,
    setIsSubmitting = _usePasswordInput2.setIsSubmitting,
    submitPassword = _usePasswordInput2.submitPassword,
    submitDiscoveryPassword = _usePasswordInput2.submitDiscoveryPassword,
    handleNonMemberReset = _usePasswordInput2.handleNonMemberReset;
  var _h$17 = h$2(!!organization && !email),
    _h$18 = _slicedToArray(_h$17, 2),
    hideInput = _h$18[0],
    setHideInput = _h$18[1];
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
      var organization_id;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            e.preventDefault();
            if (!organization) {
              _context5.next = 14;
              break;
            }
            organization_id = organization.organization_id;
            if (hideInput) {
              _context5.next = 6;
              break;
            }
            submitPassword(organization_id);
            return _context5.abrupt("return");
          case 6:
            if (email.match(EMAIL_REGEX)) {
              _context5.next = 9;
              break;
            }
            setErrorMessage(_t({
              id: 'error.invalidEmailAddress',
              message: "Invalid email address"
            }));
            return _context5.abrupt("return");
          case 9:
            setErrorMessage('');
            setIsSubmitting(true);
            readB2BInternals(stytch).searchManager.searchMember(email, organization.organization_id).then(function (_ref59) {
              var member = _ref59.member;
              if (member) {
                setHideInput(false);
                setIsSubmitting(false);
                dispatch({
                  type: 'set_password_state',
                  email: email
                });
                return;
              }
              handleNonMemberReset();
            })["catch"](function (err) {
              setIsSubmitting(false);
              setErrorMessage(getTranslatedError(err, _t));
            });
            _context5.next = 15;
            break;
          case 14:
            submitDiscoveryPassword();
          case 15:
          case "end":
            return _context5.stop();
        }
      }, _callee5);
    }));
  };
  var onGetHelp = function onGetHelp() {
    dispatch({
      type: 'set_password_state',
      email: email
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.PasswordForgotForm
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 36
  }, /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t({
    id: 'formField.email.label',
    message: "Email"
  })), /*#__PURE__*/wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  })), !hideInput && (/*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t({
    id: 'formField.password.label',
    message: "Password"
  })), /*#__PURE__*/wn.createElement(PasswordInput, {
    password: password,
    setPassword: setPassword,
    type: "current"
  }))), /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: errorMessage
  }), /*#__PURE__*/wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: _t({
      id: 'button.continue',
      message: "Continue"
    })
  }), !hideInput && (/*#__PURE__*/wn.createElement(Flex, {
    onClick: onGetHelp,
    justifyContent: "center"
  }, /*#__PURE__*/wn.createElement(GetHelpText, {
    color: "secondary"
  }, _t({
    id: 'link.signupResetPassword',
    message: "Sign up or reset password"
  })))))));
};
var HubSpotIconSvg = function HubSpotIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    viewBox: "0 0 18 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.0762 13.9514C11.6819 13.9514 10.5516 12.8329 10.5516 11.4533C10.5516 10.0735 11.6819 8.95502 13.0762 8.95502C14.4704 8.95502 15.6007 10.0735 15.6007 11.4533C15.6007 12.8329 14.4704 13.9514 13.0762 13.9514ZM13.8319 6.64368V4.42127C14.4181 4.14728 14.8287 3.56045 14.8287 2.87942V2.82812C14.8287 1.8882 14.0516 1.11919 13.1018 1.11919H13.0502C12.1004 1.11919 11.3234 1.8882 11.3234 2.82812V2.87942C11.3234 3.56045 11.7339 4.14752 12.3201 4.42151V6.64368C11.4474 6.7772 10.65 7.13342 9.9923 7.65767L3.82629 2.91106C3.86699 2.75645 3.89557 2.59727 3.89581 2.42995C3.89678 1.36561 3.0262 0.50144 1.95021 0.500001C0.8747 0.498803 0.00121242 1.36058 1.2622e-06 2.42516C-0.0012099 3.48974 0.869371 4.35391 1.94536 4.35511C2.29587 4.35559 2.62046 4.25707 2.90484 4.09694L8.97009 8.76636C8.45437 9.53681 8.15207 10.4597 8.15207 11.4533C8.15207 12.4935 8.48417 13.4557 9.04518 14.247L7.20082 16.0724C7.055 16.029 6.90385 15.9988 6.74349 15.9988C5.85959 15.9988 5.14282 16.7079 5.14282 17.5826C5.14282 18.4576 5.85959 19.1667 6.74349 19.1667C7.62764 19.1667 8.34416 18.4576 8.34416 17.5826C8.34416 17.4244 8.31364 17.2746 8.26979 17.1303L10.0943 15.3247C10.9225 15.9502 11.9539 16.326 13.0762 16.326C15.7957 16.326 18 14.1444 18 11.4533C18 9.0171 16.1915 7.00445 13.8319 6.64368Z",
    fill: "#FF7A59"
  }));
};
var HubSpotIcon = CreateIcon(HubSpotIconSvg);
var SlackIconSvg = function SlackIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M6.78176 14.3746C6.78176 15.4153 5.9316 16.2655 4.89088 16.2655C3.85016 16.2655 3 15.4153 3 14.3746C3 13.3339 3.85016 12.4837 4.89088 12.4837H6.78176V14.3746Z",
    fill: "#E01E5A"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M7.73462 14.3746C7.73462 13.3339 8.58478 12.4837 9.6255 12.4837C10.6662 12.4837 11.5164 13.3339 11.5164 14.3746V19.1091C11.5164 20.1498 10.6662 21 9.6255 21C8.58478 21 7.73462 20.1498 7.73462 19.1091V14.3746Z",
    fill: "#E01E5A"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M9.6255 6.78176C8.58478 6.78176 7.73462 5.9316 7.73462 4.89088C7.73462 3.85016 8.58478 3 9.6255 3C10.6662 3 11.5164 3.85016 11.5164 4.89088V6.78176H9.6255Z",
    fill: "#36C5F0"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M9.62541 7.73453C10.6661 7.73453 11.5163 8.58469 11.5163 9.62541C11.5163 10.6661 10.6661 11.5163 9.62541 11.5163H4.89088C3.85016 11.5163 3 10.6661 3 9.62541C3 8.58469 3.85016 7.73453 4.89088 7.73453H9.62541Z",
    fill: "#36C5F0"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M17.2183 9.62541C17.2183 8.58469 18.0684 7.73453 19.1091 7.73453C20.1499 7.73453 21 8.58469 21 9.62541C21 10.6661 20.1499 11.5163 19.1091 11.5163H17.2183V9.62541Z",
    fill: "#2EB67D"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M16.2654 9.62541C16.2654 10.6661 15.4152 11.5163 14.3745 11.5163C13.3338 11.5163 12.4836 10.6661 12.4836 9.62541V4.89088C12.4836 3.85016 13.3338 3 14.3745 3C15.4152 3 16.2654 3.85016 16.2654 4.89088V9.62541Z",
    fill: "#2EB67D"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M14.3745 17.2182C15.4152 17.2182 16.2654 18.0684 16.2654 19.1091C16.2654 20.1498 15.4152 21 14.3745 21C13.3338 21 12.4836 20.1498 12.4836 19.1091V17.2182H14.3745Z",
    fill: "#ECB22E"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M14.3745 16.2655C13.3338 16.2655 12.4836 15.4153 12.4836 14.3746C12.4836 13.3339 13.3338 12.4837 14.3745 12.4837H19.109C20.1498 12.4837 20.9999 13.3339 20.9999 14.3746C20.9999 15.4153 20.1498 16.2655 19.109 16.2655H14.3745Z",
    fill: "#ECB22E"
  }));
};
var SlackIcon = CreateIcon(SlackIconSvg);
var GithubIconSvg = function GithubIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("rect", {
    width: "24",
    height: "24",
    rx: "12",
    fill: "white"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M12.0001 3.875C7.39828 3.875 3.66669 7.6059 3.66669 12.2084C3.66669 15.8903 6.05446 19.014 9.36558 20.1159C9.78205 20.1931 9.93495 19.9352 9.93495 19.7151C9.93495 19.5163 9.92723 18.8599 9.92364 18.1636C7.60528 18.6677 7.11608 17.1803 7.11608 17.1803C6.737 16.2171 6.1908 15.961 6.1908 15.961C5.43471 15.4438 6.2478 15.4544 6.2478 15.4544C7.08461 15.5132 7.52524 16.3131 7.52524 16.3131C8.2685 17.5871 9.47473 17.2188 9.95027 17.0059C10.0251 16.4673 10.241 16.0997 10.4794 15.8916C8.62839 15.6808 6.68263 14.9663 6.68263 11.7732C6.68263 10.8633 7.00816 10.1199 7.54125 9.53635C7.45472 9.32646 7.16948 8.47888 7.62198 7.33101C7.62198 7.33101 8.32176 7.10704 9.91426 8.18522C10.579 8.00058 11.2919 7.90798 12.0001 7.90481C12.7083 7.90798 13.4217 8.00058 14.0877 8.18522C15.6783 7.10704 16.3771 7.33101 16.3771 7.33101C16.8307 8.47888 16.5453 9.32646 16.4588 9.53635C16.9931 10.1199 17.3165 10.8633 17.3165 11.7732C17.3165 14.9739 15.367 15.6786 13.5113 15.8849C13.8102 16.1435 14.0765 16.6507 14.0765 17.4282C14.0765 18.5432 14.0669 19.4406 14.0669 19.7151C14.0669 19.9368 14.2169 20.1967 14.6393 20.1148C17.9486 19.0117 20.3334 15.8891 20.3334 12.2084C20.3334 7.6059 16.6023 3.875 12.0001 3.875ZM6.78782 15.7461C6.76946 15.7875 6.70433 15.7999 6.64499 15.7715C6.58455 15.7443 6.5506 15.6879 6.5702 15.6463C6.58813 15.6037 6.65341 15.5918 6.71371 15.6204C6.77429 15.6476 6.80879 15.7046 6.78782 15.7461ZM7.19773 16.1119C7.15798 16.1487 7.08029 16.1316 7.02758 16.0734C6.97307 16.0153 6.96286 15.9376 7.00315 15.9002C7.04414 15.8633 7.11948 15.8806 7.17413 15.9387C7.22864 15.9975 7.23927 16.0746 7.19773 16.1119ZM7.47894 16.5798C7.42788 16.6153 7.34439 16.582 7.29278 16.5079C7.24172 16.4338 7.24172 16.345 7.29389 16.3094C7.34564 16.2738 7.42788 16.3058 7.48018 16.3793C7.53111 16.4547 7.53111 16.5435 7.47894 16.5798ZM7.95454 17.1218C7.90886 17.1722 7.81157 17.1587 7.74036 17.0899C7.6675 17.0227 7.64722 16.9274 7.69303 16.877C7.73926 16.8265 7.8371 16.8407 7.90886 16.9089C7.98117 16.976 8.00325 17.072 7.95454 17.1218ZM8.56919 17.3048C8.54905 17.3701 8.45535 17.3997 8.36096 17.372C8.2667 17.3434 8.20502 17.267 8.22406 17.201C8.24366 17.1353 8.33777 17.1044 8.43285 17.1341C8.52697 17.1625 8.58879 17.2384 8.56919 17.3048ZM9.2687 17.3824C9.27105 17.4511 9.19101 17.5081 9.09193 17.5094C8.99229 17.5116 8.9117 17.4559 8.9106 17.3883C8.9106 17.3189 8.98884 17.2625 9.08848 17.2608C9.18756 17.2589 9.2687 17.3141 9.2687 17.3824ZM9.95589 17.3561C9.96776 17.4231 9.8989 17.492 9.8005 17.5103C9.70377 17.528 9.61421 17.4866 9.60193 17.4201C9.58992 17.3514 9.66002 17.2825 9.75662 17.2647C9.85515 17.2476 9.94333 17.2879 9.95589 17.3561Z",
    fill: "#161614"
  }));
};
var GitHubIcon = CreateIcon(GithubIconSvg);
var useIsOnlyFloatingOneTap = function useIsOnlyFloatingOneTap() {
  var config = useConfig();
  var isOnlyFloatingOneTap = F$1(function () {
    var _a, _b;
    var oauthProvider = config.oauthOptions ? getParamsFromB2BOAuthProviderConfig((_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.providers[0]) : undefined;
    var isGoogleOneTap = (oauthProvider === null || oauthProvider === void 0 ? void 0 : oauthProvider.type) === B2BOAuthProviders.Google && (oauthProvider === null || oauthProvider === void 0 ? void 0 : oauthProvider.one_tap) === true;
    return config.products.length === 1 && config.products.includes(B2BProducts.oauth) && ((_b = config.oauthOptions) === null || _b === void 0 ? void 0 : _b.providers.length) === 1 && isGoogleOneTap;
  }, [config]);
  return isOnlyFloatingOneTap;
};
var useIsUnmounted = function useIsUnmounted() {
  var isUnmounted = _$1(false);
  p$1(function () {
    return function () {
      isUnmounted.current = true;
    };
  }, []);
  return isUnmounted;
};
var OAuthB2BButton = function OAuthB2BButton(props) {
  var stytchClient = useStytch();
  var _useGlobalReducer29 = useGlobalReducer(),
    _useGlobalReducer30 = _slicedToArray(_useGlobalReducer29, 1),
    state = _useGlobalReducer30[0];
  var onButtonClick = function onButtonClick() {
    if (state.flowState.organization) {
      return stytchClient.oauth[props.providerType].start({
        login_redirect_url: props.loginRedirectUrl,
        signup_redirect_url: props.signupRedirectUrl,
        custom_scopes: props.customScopes,
        organization_id: state.flowState.organization.organization_id,
        provider_params: props.providerParams
      });
    }
    return stytchClient.oauth[props.providerType].discovery.start({
      discovery_redirect_url: props.discoveryRedirectUrl,
      custom_scopes: props.customScopes,
      provider_params: props.providerParams
    });
  };
  return /*#__PURE__*/wn.createElement(Button, {
    id: "oauth-".concat(props.providerType),
    type: "button",
    onClick: onButtonClick,
    variant: "outlined"
  }, /*#__PURE__*/wn.createElement(Flex, {
    justifyContent: "center",
    alignItems: "center",
    gap: 4
  }, props.icon, /*#__PURE__*/wn.createElement("span", {
    style: {
      verticalAlign: 'middle'
    }
  }, props.label)));
};
var OAuthErrorMessage = function OAuthErrorMessage(_ref60) {
  var children = _ref60.children;
  return /*#__PURE__*/wn.createElement("div", {
    key: "oauth-error-message"
  }, /*#__PURE__*/wn.createElement(Text, {
    color: "error"
  }, children));
};
var OneTapNoConfiguredClientsErrorMessage = function OneTapNoConfiguredClientsErrorMessage() {
  return /*#__PURE__*/wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because no Google OAuth client configuration could be found for this project. Please make sure a client is configured in the\xA0", /*#__PURE__*/wn.createElement("a", {
    href: "https://stytch.com/dashboard/oauth"
  }, "dashboard."));
};
var RedirectUrlsErrorMessage = function RedirectUrlsErrorMessage(_ref61) {
  var niceName = _ref61.niceName,
    variableName = _ref61.variableName;
  return /*#__PURE__*/wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because there are no ", niceName, " set for this project so we are unable to verify the", ' ', /*#__PURE__*/wn.createElement("code", null, variableName), "\xA0 provided in the configuration. To set ", niceName, " for this project please visit\xA0", /*#__PURE__*/wn.createElement("a", {
    href: "https://stytch.com/dashboard/redirect-urls"
  }, "the Stytch dashboard."), "\xA0 For more information on why this validation is necessary please visit\xA0", /*#__PURE__*/wn.createElement("a", {
    href: "https://stytch.com/docs/api/url-validation"
  }, "https://stytch.com/docs/api/url-validation."));
};
var OneTapNoConfiguredLoginRedirectUrlsErrorMessage = function OneTapNoConfiguredLoginRedirectUrlsErrorMessage() {
  return /*#__PURE__*/wn.createElement(RedirectUrlsErrorMessage, {
    niceName: "login redirect URLs",
    variableName: "oauthOptions.loginRedirectURL"
  });
};
var OneTapNoConfiguredSignupRedirectUrlsErrorMessage = function OneTapNoConfiguredSignupRedirectUrlsErrorMessage() {
  return /*#__PURE__*/wn.createElement(RedirectUrlsErrorMessage, {
    niceName: "signup redirect URLs",
    variableName: "oauthOptions.signupRedirectURL"
  });
};
var OneTapJSOriginErrorMessage = function OneTapJSOriginErrorMessage() {
  return /*#__PURE__*/wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because the current host\xA0", /*#__PURE__*/wn.createElement("code", null, "\"".concat(window.location.host, "\"")), " is not allowed for this project. Make sure to put your project's host into the Google API console. When using localhost for development, you must add both\xA0", /*#__PURE__*/wn.createElement("code", null, "http://localhost"), " and\xA0", /*#__PURE__*/wn.createElement("code", null, "http://localhost:<port_number>"), "\xA0 to the Authorized JavaScript origins box. You can learn more\xA0", /*#__PURE__*/wn.createElement("a", {
    href: "https://stytch.com/docs/sdks"
  }, "here."));
};
var OneTapInvalidOAuthClient = function OneTapInvalidOAuthClient() {
  return /*#__PURE__*/wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because the client ID configured for your project is not recognized by Google. \xA0 Please check that the client ID saved in ", /*#__PURE__*/wn.createElement("a", {
    href: "https://stytch.com/dashboard/oauth/google"
  }, "the Stytch Dashboard"), "\xA0 matches the client ID in your Google Cloud Console.");
};
var OneTapNoDefaultProviderAllowedErrorMessage = function OneTapNoDefaultProviderAllowedErrorMessage() {
  return /*#__PURE__*/wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because the Stytch Default OAuth Provider is not compatible with One Tap. Please configure your own Google client in the\xA0", /*#__PURE__*/wn.createElement("a", {
    href: "https://stytch.com/dashboard/oauth"
  }, "dashboard."));
};
var OneTapErrors;
(function (OneTapErrors) {
  OneTapErrors["None"] = "none";
  OneTapErrors["OriginNotAllowedForClient"] = "origin_not_allowed_for_client";
  OneTapErrors["InvalidOAuthClient"] = "invalid_client";
  OneTapErrors["NoConfiguredOAuthClient"] = "oauth_config_not_found";
  OneTapErrors["NoConfiguredLoginRedirectUrls"] = "no_login_redirect_urls_set";
  OneTapErrors["NoConfiguredSignupRedirectUrls"] = "no_signup_redirect_urls_set";
  OneTapErrors["DefaultProviderNotAllowed"] = "default_provider_not_allowed";
})(OneTapErrors || (OneTapErrors = {}));
var ErrorMessages = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, OneTapErrors.None, /*#__PURE__*/wn.createElement(wn.Fragment, null)), OneTapErrors.OriginNotAllowedForClient, /*#__PURE__*/wn.createElement(OneTapJSOriginErrorMessage, null)), OneTapErrors.InvalidOAuthClient, /*#__PURE__*/wn.createElement(OneTapInvalidOAuthClient, null)), OneTapErrors.NoConfiguredOAuthClient, /*#__PURE__*/wn.createElement(OneTapNoConfiguredClientsErrorMessage, null)), OneTapErrors.NoConfiguredLoginRedirectUrls, /*#__PURE__*/wn.createElement(OneTapNoConfiguredLoginRedirectUrlsErrorMessage, null)), OneTapErrors.NoConfiguredSignupRedirectUrls, /*#__PURE__*/wn.createElement(OneTapNoConfiguredSignupRedirectUrlsErrorMessage, null)), OneTapErrors.DefaultProviderNotAllowed, /*#__PURE__*/wn.createElement(OneTapNoDefaultProviderAllowedErrorMessage, null));
He.div(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["\n  height: ", ";\n  display: ", ";\n  transition: all 0.5s ease-out;\n  justify-content: center;\n  align-items: center;\n"])), function (props) {
  return "".concat(props.$height, "px");
}, function (props) {
  return props.pending ? 'flex' : 'block';
});
var B2BGoogleOneTap = function B2BGoogleOneTap(_ref62) {
  var customScopes = _ref62.customScopes,
    providerParams = _ref62.providerParams,
    cancelOnTapOutside = _ref62.cancelOnTapOutside;
  var _a, _b, _c, _d, _e, _f;
  var _useLingui15 = useLingui(),
    _t = _useLingui15._;
  var stytch = useStytch();
  var config = useConfig();
  var isOnlyFloatingOneTap = useIsOnlyFloatingOneTap();
  var _h$19 = h$2(OneTapErrors.None),
    _h$20 = _slicedToArray(_h$19, 2),
    oneTapError = _h$20[0],
    setOneTapError = _h$20[1];
  var isUnmounted = useIsUnmounted();
  var _useGlobalReducer31 = useGlobalReducer(),
    _useGlobalReducer32 = _slicedToArray(_useGlobalReducer31, 2),
    state = _useGlobalReducer32[0],
    dispatch = _useGlobalReducer32[1];
  var attemptToLoadOneTap = T$1(function () {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
      var _g, _h, _j, _readB2BInternals, oneTap, clientResult, client, oneTapCallback, renderResult;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            _readB2BInternals = readB2BInternals(stytch), oneTap = _readB2BInternals.oneTap;
            _context6.next = 3;
            return oneTap.createOneTapClient();
          case 3:
            clientResult = _context6.sent;
            if (clientResult.success) {
              _context6.next = 7;
              break;
            }
            if (clientResult.reason === 'oauth_config_not_found') {
              setOneTapError(OneTapErrors.NoConfiguredOAuthClient);
            } else if (clientResult.reason === 'default_provider_not_allowed') {
              setOneTapError(OneTapErrors.DefaultProviderNotAllowed);
            } else {
              logger.error('Unable to load One Tap settings for project', clientResult);
            }
            return _context6.abrupt("return");
          case 7:
            client = clientResult.client;
            if (!isUnmounted.current) {
              _context6.next = 10;
              break;
            }
            return _context6.abrupt("return");
          case 10:
            if (state.flowState.organization) {
              oneTapCallback = oneTap.createOnSuccessHandler({
                organizationId: state.flowState.organization.organization_id,
                signupRedirectUrl: (_g = config.oauthOptions) === null || _g === void 0 ? void 0 : _g.signupRedirectURL,
                loginRedirectUrl: (_h = config.oauthOptions) === null || _h === void 0 ? void 0 : _h.loginRedirectURL,
                onSuccess: oneTap.RedirectOnSuccess,
                onError: function onError() {
                  return dispatch({
                    type: 'transition',
                    screen: AppScreens$1.Error
                  });
                }
              });
            } else {
              oneTapCallback = oneTap.createOnDiscoverySuccessHandler({
                discoveryRedirectUrl: (_j = config.oauthOptions) === null || _j === void 0 ? void 0 : _j.discoveryRedirectURL,
                onSuccess: oneTap.RedirectOnSuccess,
                onError: function onError() {
                  return dispatch({
                    type: 'transition',
                    screen: AppScreens$1.Error
                  });
                }
              });
            }
            _context6.next = 13;
            return client.render({
              callback: oneTapCallback,
              style: {
                position: OneTapPositions.floating
              },
              cancelOnTapOutside: cancelOnTapOutside
            });
          case 13:
            renderResult = _context6.sent;
            if (!isUnmounted.current) {
              _context6.next = 17;
              break;
            }
            client.cancel();
            return _context6.abrupt("return");
          case 17:
            if (!renderResult.success) {
              if (renderResult.reason === 'unregistered_origin') {
                setOneTapError(OneTapErrors.OriginNotAllowedForClient);
              }
              if (renderResult.reason === 'invalid_client') {
                setOneTapError(OneTapErrors.InvalidOAuthClient);
              }
              logger.error('Unable to render One Tap prompt', renderResult);
            }
            return _context6.abrupt("return", client);
          case 19:
          case "end":
            return _context6.stop();
        }
      }, _callee6);
    }));
  }, [stytch, isUnmounted, state.flowState.organization, (_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.signupRedirectURL, (_b = config.oauthOptions) === null || _b === void 0 ? void 0 : _b.loginRedirectURL, (_c = config.oauthOptions) === null || _c === void 0 ? void 0 : _c.discoveryRedirectURL, dispatch, cancelOnTapOutside]);
  p$1(function () {
    var client;
    attemptToLoadOneTap().then(function ($client) {
      return client = $client;
    })["catch"](function (err) {
      logger.error('Unable to render One Tap prompt', err);
    });
    return function () {
      return client === null || client === void 0 ? void 0 : client.cancel();
    };
  }, [attemptToLoadOneTap]);
  if (isOnlyFloatingOneTap) {
    return null;
  }
  var googleAuthButton = /*#__PURE__*/wn.createElement(OAuthB2BButton, {
    key: "oauth-".concat(B2BOAuthProviders.Google),
    providerType: B2BOAuthProviders.Google,
    icon: /*#__PURE__*/wn.createElement(GoogleIcon, null),
    label: _t({
      id: 'oauth.continueWithGoogle',
      message: "Continue with Google"
    }),
    loginRedirectUrl: (_d = config.oauthOptions) === null || _d === void 0 ? void 0 : _d.loginRedirectURL,
    signupRedirectUrl: (_e = config.oauthOptions) === null || _e === void 0 ? void 0 : _e.signupRedirectURL,
    discoveryRedirectUrl: (_f = config.oauthOptions) === null || _f === void 0 ? void 0 : _f.discoveryRedirectURL,
    customScopes: customScopes,
    providerParams: providerParams
  });
  var _readB2BInternals2 = readB2BInternals(stytch),
    publicToken = _readB2BInternals2.publicToken;
  if (oneTapError !== OneTapErrors.None) {
    return /*#__PURE__*/wn.createElement(wn.Fragment, null, isTestPublicToken(publicToken) ? ErrorMessages[oneTapError] : null, googleAuthButton);
  }
  return googleAuthButton;
};
var providerInfo = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, B2BOAuthProviders.Google, {
  messageDescriptor: {
    id: 'oauth.continueWithGoogle',
    message: "Continue with Google"
  },
  icon: /*#__PURE__*/y(GoogleIcon, null)
}), B2BOAuthProviders.Microsoft, {
  messageDescriptor: {
    id: 'oauth.continueWithMicrosoft',
    message: "Continue with Microsoft"
  },
  icon: /*#__PURE__*/y(MicrosoftIcon, null)
}), B2BOAuthProviders.HubSpot, {
  messageDescriptor: {
    id: 'oauth.continueWithHubSpot',
    message: "Continue with HubSpot"
  },
  icon: /*#__PURE__*/y(HubSpotIcon, null)
}), B2BOAuthProviders.Slack, {
  messageDescriptor: {
    id: 'oauth.continueWithSlack',
    message: "Continue with Slack"
  },
  icon: /*#__PURE__*/y(SlackIcon, null)
}), B2BOAuthProviders.GitHub, {
  messageDescriptor: {
    id: 'oauth.continueWithGitHub',
    message: "Continue with GitHub"
  },
  icon: /*#__PURE__*/y(GitHubIcon, null)
});
var defaultProviderInfo = {
  messageDescriptor: null,
  icon: /*#__PURE__*/y(g$1, null)
};
var getCustomScopesForProvider = function getCustomScopesForProvider(oauthProvider, oauthOptionsCustomScopes) {
  var currentCustomScopes = oauthProvider.customScopes;
  if (Object.keys(currentCustomScopes).length == 0) {
    currentCustomScopes = oauthOptionsCustomScopes;
  }
  return currentCustomScopes;
};
var getProviderParamsForProvider = function getProviderParamsForProvider(oauthProvider, oauthOptionsProviderParams, email) {
  var currentProviderParams = oauthProvider.providerParams;
  if (Object.keys(currentProviderParams).length == 0) {
    currentProviderParams = oauthOptionsProviderParams !== null && oauthOptionsProviderParams !== void 0 ? oauthOptionsProviderParams : {};
  }
  if (email && (oauthProvider.type === B2BOAuthProviders.Google || oauthProvider.type === B2BOAuthProviders.Microsoft) && !('login_hint' in currentProviderParams)) {
    currentProviderParams = Object.assign(Object.assign({}, currentProviderParams), {
      login_hint: email
    });
  }
  return currentProviderParams;
};
var OAuthButtons = function OAuthButtons() {
  var _a;
  var _useLingui16 = useLingui(),
    _t = _useLingui16._;
  var _useGlobalReducer33 = useGlobalReducer(),
    _useGlobalReducer34 = _slicedToArray(_useGlobalReducer33, 1),
    state = _useGlobalReducer34[0];
  var _useEffectiveAuthConf3 = useEffectiveAuthConfig(),
    oauthProviderSettings = _useEffectiveAuthConf3.oauthProviderSettings;
  var config = useConfig();
  var _ref63 = (_a = config.oauthOptions) !== null && _a !== void 0 ? _a : {},
    loginRedirectURL = _ref63.loginRedirectURL,
    signupRedirectURL = _ref63.signupRedirectURL,
    discoveryRedirectURL = _ref63.discoveryRedirectURL,
    customScopes = _ref63.customScopes,
    providerParams = _ref63.providerParams;
  var mappedProviders = oauthProviderSettings.map(function (oauthProvider) {
    var _a;
    var info = (_a = providerInfo[oauthProvider.type]) !== null && _a !== void 0 ? _a : defaultProviderInfo;
    var providerProps = {
      customScopes: getCustomScopesForProvider(oauthProvider, customScopes),
      providerParams: getProviderParamsForProvider(oauthProvider, providerParams, state.primary.email)
    };
    if (oauthProvider.one_tap) {
      return /*#__PURE__*/y(B2BGoogleOneTap, Object.assign({
        key: "oauth-".concat(oauthProvider.type)
      }, providerProps, {
        cancelOnTapOutside: oauthProvider.cancel_on_tap_outside
      }));
    }
    return /*#__PURE__*/y(OAuthB2BButton, Object.assign({
      key: "oauth-".concat(oauthProvider.type),
      providerType: oauthProvider.type,
      icon: info.icon,
      label: info.messageDescriptor ? _t(info.messageDescriptor) : '',
      loginRedirectUrl: loginRedirectURL,
      signupRedirectUrl: signupRedirectURL,
      discoveryRedirectUrl: discoveryRedirectURL
    }, providerProps));
  });
  return /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 8,
    className: "oauth-buttons"
  }, mappedProviders);
};
var Component;
(function (Component) {
  Component["EmailForm"] = "EmailForm";
  Component["EmailDiscoveryForm"] = "EmailDiscoveryForm";
  Component["OAuthButtons"] = "OAuthButtons";
  Component["SSOButtons"] = "SSOButtons";
  Component["PasswordsEmailForm"] = "PasswordsEmailForm";
  Component["PasswordEmailCombined"] = "PasswordEmailCombined";
  Component["PasswordEmailCombinedDiscovery"] = "PasswordEmailCombinedDiscovery";
  Component["Divider"] = "Divider";
})(Component || (Component = {}));
var isButtonsComponent = function isButtonsComponent(component) {
  return component === Component.OAuthButtons || component === Component.SSOButtons;
};
var generateProductComponentsOrdering = function generateProductComponentsOrdering(products, flowState) {
  var flowStateType = flowState.type;
  var productsSet = new Set(products);
  var displayEmailAndPasswordsTogether = (productsSet.has(B2BProducts.emailMagicLinks) || productsSet.has(B2BProducts.emailOtp)) && productsSet.has(B2BProducts.passwords);
  var emailPasswordCombinedComponent = flowStateType === AuthFlowType.Organization ? Component.PasswordEmailCombined : Component.PasswordEmailCombinedDiscovery;
  var productComponentsSet = products.reduce(function (components, product) {
    var _a, _b, _c;
    switch (product) {
      case B2BProducts.emailMagicLinks:
      case B2BProducts.emailOtp:
        if (displayEmailAndPasswordsTogether) {
          components.add(emailPasswordCombinedComponent);
        } else {
          components.add(flowStateType === AuthFlowType.Organization ? Component.EmailForm : Component.EmailDiscoveryForm);
        }
        break;
      case B2BProducts.oauth:
        components.add(Component.OAuthButtons);
        break;
      case B2BProducts.sso:
        var isSsoValid = flowStateType === AuthFlowType.Discovery || flowStateType === AuthFlowType.Organization && ((_c = (_b = (_a = flowState.organization) === null || _a === void 0 ? void 0 : _a.sso_active_connections) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0) > 0;
        if (isSsoValid) {
          components.add(Component.SSOButtons);
        }
        break;
      case B2BProducts.passwords:
        components.add(displayEmailAndPasswordsTogether ? emailPasswordCombinedComponent : Component.PasswordsEmailForm);
        break;
    }
    return components;
  }, new Set());
  return Array.from(productComponentsSet).reduce(function (groups, component, i, arr) {
    var prevComponent = i > 0 ? arr[i - 1] : undefined;
    var shouldJoinPreviousGroup = prevComponent && isButtonsComponent(component) && isButtonsComponent(prevComponent);
    if (shouldJoinPreviousGroup) {
      groups[groups.length - 1].push(component);
    } else {
      var prevGroup = groups.length > 0 ? groups[groups.length - 1] : undefined;
      if (prevGroup && isButtonsComponent(prevGroup[0]) !== isButtonsComponent(component)) {
        groups.push([Component.Divider]);
      }
      groups.push([component]);
    }
    return groups;
  }, []);
};
var LogoImage$1 = He.img(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["\n  max-height: 50px;\n  max-width: 100px;\n"])));
var Header = He(Text)(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["\n  text-align: center;\n"])));
var Logo$2 = function Logo$2(_ref64) {
  var orgLogo = _ref64.orgLogo,
    appLogo = _ref64.appLogo;
  if (!orgLogo && !appLogo) return /*#__PURE__*/wn.createElement(wn.Fragment, null);
  return /*#__PURE__*/wn.createElement(Flex, {
    justifyContent: "center",
    gap: 8
  }, !!orgLogo && /*#__PURE__*/wn.createElement(LogoImage$1, {
    src: orgLogo
  }), !!appLogo && /*#__PURE__*/wn.createElement(LogoImage$1, {
    src: appLogo
  }));
};
var ProductComponents = function ProductComponents(_ref65) {
  var components = _ref65.components;
  var renderedComponents = components.map(function (group) {
    return /*#__PURE__*/wn.createElement(Flex, {
      key: group.join('-'),
      direction: "column",
      gap: 8
    }, group.map(function (component) {
      switch (component) {
        case Component.EmailForm:
          return /*#__PURE__*/wn.createElement(EmailForm, {
            key: component,
            showPasswordButton: false
          });
        case Component.EmailDiscoveryForm:
          return /*#__PURE__*/wn.createElement(EmailDiscoveryForm, {
            key: component,
            showPasswordButton: false
          });
        case Component.OAuthButtons:
          return /*#__PURE__*/wn.createElement(OAuthButtons, {
            key: component
          });
        case Component.SSOButtons:
          return /*#__PURE__*/wn.createElement(SSOButtons, {
            key: component
          });
        case Component.PasswordsEmailForm:
          return /*#__PURE__*/wn.createElement(PasswordsEmailForm, {
            key: component
          });
        case Component.PasswordEmailCombined:
          return /*#__PURE__*/wn.createElement(EmailForm, {
            key: component,
            showPasswordButton: true
          });
        case Component.PasswordEmailCombinedDiscovery:
          return /*#__PURE__*/wn.createElement(EmailDiscoveryForm, {
            key: component,
            showPasswordButton: true
          });
        case Component.Divider:
          return /*#__PURE__*/wn.createElement(Divider, {
            key: "divider"
          });
      }
    }));
  });
  return /*#__PURE__*/wn.createElement(wn.Fragment, null, renderedComponents);
};
var MainScreen = function MainScreen() {
  var _a, _b, _c;
  var _Ze = Ze(),
    displayHeader = _Ze.displayHeader,
    logo = _Ze.logo;
  var _useGlobalReducer35 = useGlobalReducer(),
    _useGlobalReducer36 = _slicedToArray(_useGlobalReducer35, 1),
    state = _useGlobalReducer36[0];
  var _useLingui17 = useLingui(),
    _t = _useLingui17._;
  var _state$primary = state.primary,
    primaryAuthMethods = _state$primary.primaryAuthMethods,
    email = _state$primary.email,
    emailVerified = _state$primary.emailVerified;
  var _useEffectiveAuthConf4 = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf4.products;
  var isLoading = state.flowState.type === AuthFlowType.Organization && !state.flowState.organization;
  var ProductComponentsOrdering = generateProductComponentsOrdering(products, state.flowState);
  var organizationName = (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.organization_name;
  var title;
  switch (state.flowState.type) {
    case AuthFlowType.Discovery:
      title = _t({
        id: 'login.title',
        message: "Sign up or log in"
      });
      break;
    case AuthFlowType.PasswordReset:
      title = '';
      break;
    default:
      title = organizationName ? _t({
        id: 'organizationLogin.title',
        message: "Continue to {organizationName}",
        values: {
          organizationName: organizationName
        }
      }) : _t({
        id: 'organizationLogin.titleUnknown',
        message: "Continue to ...",
        comment: 'Used instead of organizationLogin.title when the organization name is not available'
      });
      break;
  }
  var showVerifyEmailCopy = email && emailVerified === false && primaryAuthMethods;
  if (isLoading) {
    return /*#__PURE__*/wn.createElement(LoadingScreen, null);
  }
  return /*#__PURE__*/wn.createElement(Flex, {
    gap: 24,
    direction: "column"
  }, /*#__PURE__*/wn.createElement(Logo$2, {
    appLogo: logo.logoImageUrl,
    orgLogo: (_c = (_b = state.flowState.organization) === null || _b === void 0 ? void 0 : _b.organization_logo_url) !== null && _c !== void 0 ? _c : ''
  }), displayHeader && (showVerifyEmailCopy ? (/*#__PURE__*/wn.createElement(Flex, {
    justifyContent: "center",
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'emailVerification.title',
    message: "Verify your email"
  })), /*#__PURE__*/wn.createElement(Text, null, _t({
    id: 'emailVerification.content',
    message: "Confirm your email address with one of the following:"
  })))) : title && (/*#__PURE__*/wn.createElement(Flex, {
    justifyContent: "center"
  }, /*#__PURE__*/wn.createElement(Header, {
    size: "header"
  }, title)))), /*#__PURE__*/wn.createElement(ProductComponents, {
    components: ProductComponentsOrdering
  }));
};
var GmailIconSvg = function GmailIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 48 48"
  }, /*#__PURE__*/wn.createElement("path", {
    fill: "#4caf50",
    d: "M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z"
  }), /*#__PURE__*/wn.createElement("path", {
    fill: "#1e88e5",
    d: "M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z"
  }), /*#__PURE__*/wn.createElement("polygon", {
    fill: "#e53935",
    points: "35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17"
  }), /*#__PURE__*/wn.createElement("path", {
    fill: "#c62828",
    d: "M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z"
  }), /*#__PURE__*/wn.createElement("path", {
    fill: "#fbc02d",
    d: "M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z"
  }));
};
var GmailIcon = CreateIcon(GmailIconSvg);
var OutlookIconSvg = function OutlookIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    version: "1.1",
    id: "Layer_1",
    viewBox: "0 0 103.17322 104.31332",
    xmlSpace: "preserve"
  }, /*#__PURE__*/wn.createElement("defs", {
    id: "defs43"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "m 64.566509,22.116383 v 20.404273 l 7.130526,4.489881 c 0.188058,0.05485 0.595516,0.05877 0.783574,0 L 103.16929,26.320259 c 0,-2.44867 -2.28412,-4.203876 -3.573094,-4.203876 H 64.566509 z",
    id: "path3",
    style: {
      fill: '#0072c6'
    }
  }), /*#__PURE__*/wn.createElement("path", {
    d: "m 64.566509,50.13308 6.507584,4.470291 c 0.916782,0.673874 2.021622,0 2.021622,0 -1.100922,0.673874 30.077495,-20.035993 30.077495,-20.035993 v 37.501863 c 0,4.082422 -2.61322,5.794531 -5.551621,5.794531 H 64.562591 V 50.13308 z",
    id: "path5",
    style: {
      fill: '#0072c6'
    }
  }), /*#__PURE__*/wn.createElement("g", {
    id: "g23",
    transform: "matrix(3.9178712,0,0,3.9178712,-13.481403,-41.384473)"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "m 11.321,20.958 c -0.566,0 -1.017,0.266 -1.35,0.797 -0.333,0.531 -0.5,1.234 -0.5,2.109 0,0.888 0.167,1.59 0.5,2.106 0.333,0.517 0.77,0.774 1.31,0.774 0.557,0 0.999,-0.251 1.325,-0.753 0.326,-0.502 0.49,-1.199 0.49,-2.09 0,-0.929 -0.158,-1.652 -0.475,-2.169 -0.317,-0.516 -0.75,-0.774 -1.3,-0.774 z",
    id: "path25",
    style: {
      fill: '#0072c6'
    }
  }), /*#__PURE__*/wn.createElement("path", {
    d: "m 3.441,13.563 v 20.375 l 15.5,3.25 V 10.563 l -15.5,3 z m 10.372,13.632 c -0.655,0.862 -1.509,1.294 -2.563,1.294 -1.027,0 -1.863,-0.418 -2.51,-1.253 C 8.094,26.4 7.77,25.312 7.77,23.97 c 0,-1.417 0.328,-2.563 0.985,-3.438 0.657,-0.875 1.527,-1.313 2.61,-1.313 1.023,0 1.851,0.418 2.482,1.256 0.632,0.838 0.948,1.942 0.948,3.313 10e-4,1.409 -0.327,2.545 -0.982,3.407 z",
    id: "path27",
    style: {
      fill: '#0072c6'
    }
  })));
};
var OutlookIcon = CreateIcon(OutlookIconSvg);
var YahooIconSvg = function YahooIconSvg() {
  return /*#__PURE__*/wn.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("rect", {
    x: "2",
    y: "2",
    width: "20",
    height: "20",
    rx: "1",
    fill: "#671BDF"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M5 8.7284H7.71407L9.29444 12.7716L10.8953 8.7284H13.5379L9.55876 18.3H6.89942L7.98865 15.7637L5 8.7284Z",
    fill: "white"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M14.2 16.2028C15.108 16.2028 15.8441 15.4667 15.8441 14.5587C15.8441 13.6507 15.108 12.9146 14.2 12.9146C13.292 12.9146 12.5559 13.6507 12.5559 14.5587C12.5559 15.4667 13.292 16.2028 14.2 16.2028Z",
    fill: "white"
  }), /*#__PURE__*/wn.createElement("path", {
    d: "M16.3842 12.3106H13.4243L16.0512 6H19L16.3842 12.3106Z",
    fill: "white"
  }));
};
var YahooIcon = CreateIcon(YahooIconSvg);
var emailProviderInfo = {
  gmail: {
    messageDescriptor: {
      id: 'link.openInGmail',
      message: "Open in Gmail"
    },
    icon: /*#__PURE__*/wn.createElement(GmailIcon, null),
    getUrl: function getUrl(emailDomain) {
      var gmailQuery = encodeURIComponent(emailDomain ? "from:@".concat(emailDomain, " in:anywhere") : 'in:anywhere');
      return "https://mail.google.com/mail/u/0/#search/".concat(gmailQuery);
    }
  },
  yahoo: {
    messageDescriptor: {
      id: 'link.openInYahoo',
      message: "Open in Yahoo"
    },
    icon: /*#__PURE__*/wn.createElement(YahooIcon, null),
    getUrl: function getUrl(emailDomain) {
      return !emailDomain ? 'https://mail.yahoo.com/d/search/referrer=unread' : "https://mail.yahoo.com/d/search/keyword=".concat(emailDomain);
    }
  },
  outlook: {
    messageDescriptor: {
      id: 'link.openInOutlook',
      message: "Open in Outlook"
    },
    icon: /*#__PURE__*/wn.createElement(OutlookIcon, null),
    getUrl: function getUrl() {
      return "https://outlook.office.com/mail/0/inbox";
    }
  }
};
var Link = He.a(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["\n  all: unset;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n    text-decoration-color: ", ";\n  }\n"])), function (props) {
  return props.theme.colors.primary;
});
var EmailProviderLink = function EmailProviderLink(_ref66) {
  var _ref66$providerInfo = _ref66.providerInfo,
    icon = _ref66$providerInfo.icon,
    messageDescriptor = _ref66$providerInfo.messageDescriptor,
    getUrl = _ref66$providerInfo.getUrl,
    emailDomain = _ref66.emailDomain;
  var _useLingui18 = useLingui(),
    _t = _useLingui18._;
  var href = getUrl(emailDomain);
  return /*#__PURE__*/wn.createElement(Flex, {
    gap: 4
  }, icon, /*#__PURE__*/wn.createElement(Link, {
    href: href,
    target: "_blank",
    rel: "noopener noreferrer"
  }, /*#__PURE__*/wn.createElement(Text, null, _t(messageDescriptor))));
};
var EmailConfirmation$1 = function EmailConfirmation$1(_ref67) {
  var emailDomain = _ref67.emailDomain,
    reset = _ref67.reset,
    email = _ref67.email;
  var _useLingui19 = useLingui(),
    _t = _useLingui19._;
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'emailConfirmation.title',
    message: "Check your email"
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 12
  }, /*#__PURE__*/wn.createElement(Text, null, /*#__PURE__*/wn.createElement(Trans, {
    id: "emailConfirmation.content",
    message: "An email was sent to <bold>{email}</bold>.",
    components: {
      bold: /*#__PURE__*/wn.createElement("b", null)
    },
    values: {
      email: email
    }
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(EmailProviderLink, {
    emailDomain: emailDomain,
    providerInfo: emailProviderInfo.gmail
  }), /*#__PURE__*/wn.createElement(EmailProviderLink, {
    emailDomain: emailDomain,
    providerInfo: emailProviderInfo.yahoo
  }), /*#__PURE__*/wn.createElement(EmailProviderLink, {
    emailDomain: emailDomain,
    providerInfo: emailProviderInfo.outlook
  }))), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: reset
  }, _t({
    id: 'button.retry',
    message: "Try again"
  })));
};
var useEmailDomain$1 = function useEmailDomain$1() {
  var _a, _b;
  var stytch = useStytch();
  var config = useConfig();
  var _h$21 = h$2(function () {
      var _readB2BInternals$boo = readB2BInternals(stytch).bootstrap.getSync(),
        emailDomains = _readB2BInternals$boo.emailDomains;
      return emailDomains;
    }),
    _h$22 = _slicedToArray(_h$21, 2),
    emailDomains = _h$22[0],
    setEmailDomains = _h$22[1];
  p$1(function () {
    readB2BInternals(stytch).bootstrap.getAsync().then(function (_ref68) {
      var emailDomains = _ref68.emailDomains;
      setEmailDomains(emailDomains);
    });
  }, [stytch]);
  if ((_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.domainHint) {
    return (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.domainHint;
  }
  if (emailDomains.length === 1) {
    return emailDomains[0];
  }
  return null;
};
var EmailConfirmation = function EmailConfirmation() {
  var _useGlobalReducer37 = useGlobalReducer(),
    _useGlobalReducer38 = _slicedToArray(_useGlobalReducer37, 2),
    state = _useGlobalReducer38[0],
    dispatch = _useGlobalReducer38[1];
  var emailDomain = useEmailDomain$1();
  var reset = function reset() {
    dispatch({
      type: 'set_user_supplied_email',
      email: ''
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.Main
    });
  };
  return /*#__PURE__*/wn.createElement(EmailConfirmation$1, {
    emailDomain: emailDomain,
    reset: reset,
    email: state.formState.emailState.userSuppliedEmail
  });
};
var isJoinViaJitType = function isJoinViaJitType(type) {
  return type === 'eligible_to_join_by_email_domain' || type === 'eligible_to_join_by_oauth_tenant';
};
var OrganizationsRow = He(Flex)(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["\n  cursor: pointer;\n  gap: 8px;\n  border: ", ";\n  border-radius: ", ";\n  background-color: ", ";\n  color: ", ";\n"])), function (_ref69) {
  var theme = _ref69.theme;
  return theme.buttons.secondary.border;
}, function (_ref70) {
  var theme = _ref70.theme;
  return theme.buttons.secondary.borderRadius;
}, function (_ref71) {
  var theme = _ref71.theme;
  return theme.buttons.secondary.backgroundColor;
}, function (_ref72) {
  var theme = _ref72.theme;
  return theme.buttons.secondary.textColor;
});
var LogoImage = He.img(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral(["\n  height: 40px;\n  width: 40px;\n  flex-shrink: 0;\n  border-radius: 4px;\n"])));
var LogoText = He(Flex)(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["\n  height: 40px;\n  width: 40px;\n  flex-shrink: 0;\n  background-color: ", ";\n  color: ", ";\n  border-radius: 4px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 25px;\n"])), function (_ref73) {
  var theme = _ref73.theme;
  return theme.buttons.secondary.textColor;
}, function (_ref74) {
  var theme = _ref74.theme;
  return theme.buttons.secondary.backgroundColor;
});
var OrganizationName = He.div(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["\n  overflow-wrap: break-word;\n  word-break: break-word;\n  hyphens: auto;\n"])));
var ArrowText = He.div(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["\n  ", ";\n  text-align: right;\n"])), function (_ref75) {
  var theme = _ref75.theme;
  return theme.typography.body;
});
var SvgNoShrink = He.svg(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["\n  flex-shrink: 0;\n"])));
var RightArrowSVG = function RightArrowSVG() {
  return /*#__PURE__*/y(SvgNoShrink, {
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/y("path", {
    d: "M7 0.333313L5.825 1.50831L10.475 6.16665H0.333334V7.83331H10.475L5.825 12.4916L7 13.6666L13.6667 6.99998L7 0.333313Z",
    fill: "currentColor"
  }));
};
var Logo$1 = function Logo$1(_ref76) {
  var name = _ref76.name,
    logo = _ref76.logo;
  if (logo !== '') {
    return /*#__PURE__*/y(LogoImage, {
      src: logo
    });
  }
  return /*#__PURE__*/y(LogoText, {
    alignItems: "center",
    justifyContent: "center"
  }, name[0]);
};
var ActionText = function ActionText(_ref77) {
  var type = _ref77.type;
  var _useLingui20 = useLingui(),
    _t = _useLingui20._;
  if (isJoinViaJitType(type) || type === 'pending_member') return /*#__PURE__*/y(ArrowText, null, _t({
    id: 'organizationDiscovery.join',
    message: "Join"
  }));
  if (type === 'invited_member') return /*#__PURE__*/y(ArrowText, null, _t({
    id: 'organizationDiscovery.acceptInvite',
    message: "Accept Invite"
  }));
  return /*#__PURE__*/y(g$1, null);
};
var DiscoverNoOrganizations = function DiscoverNoOrganizations() {
  var _useGlobalReducer39 = useGlobalReducer(),
    _useGlobalReducer40 = _slicedToArray(_useGlobalReducer39, 2),
    state = _useGlobalReducer40[0],
    dispatch = _useGlobalReducer40[1];
  var stytchClient = useStytch();
  var config = useConfig();
  var _useBootstrap = useBootstrap(),
    createOrganizationEnabled = _useBootstrap.createOrganizationEnabled;
  var _useLingui21 = useLingui(),
    _t2 = _useLingui21._;
  var goBack = function goBack() {
    return dispatch({
      type: 'transition',
      screen: AppScreens$1.Main
    });
  };
  var _useMutate2 = useMutate('stytch.discovery.organizations.create', function () {
      return stytchClient.discovery.organizations.create({
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      },
      onError: function onError(error) {
        dispatch({
          type: 'set_error_message_and_transition',
          errorType: error.error_type === 'action_not_allowed_email_domain_is_claimed' ? ErrorType.OrganizationDiscoveryClaimedDomain : ErrorType.Default,
          canGoBack: true
        });
      }
    }),
    stytchCreateOrganization = _useMutate2.trigger,
    isCreateLoading = _useMutate2.isMutating;
  var shouldAutomaticallyCreateOrganization = createOrganizationEnabled && config.directCreateOrganizationForNoMembership;
  p$1(function () {
    if (shouldAutomaticallyCreateOrganization) {
      stytchCreateOrganization();
    }
  }, [shouldAutomaticallyCreateOrganization, stytchCreateOrganization]);
  if (shouldAutomaticallyCreateOrganization || isCreateLoading) {
    return /*#__PURE__*/y(LoadingScreen, null);
  }
  var email = state.formState.discoveryState.email;
  if (createOrganizationEnabled && !config.disableCreateOrganization) {
    return /*#__PURE__*/y(Flex, {
      direction: "column",
      gap: 24
    }, /*#__PURE__*/y(BackArrow, {
      onClick: goBack
    }), /*#__PURE__*/y(Text, {
      size: "header"
    }, _t2({
      id: 'organizationDiscovery.noOrgs.create.title',
      message: "Create an organization to get started"
    })), /*#__PURE__*/y(Button, {
      type: "button",
      onClick: function onClick() {
        return stytchCreateOrganization();
      }
    }, _t2({
      id: 'button.createAnOrganization',
      message: "Create an organization"
    })), /*#__PURE__*/y(Text, null, _t2({
      id: 'organizationDiscovery.noOrgs.create.content',
      message: "{email} does not have an account. Think this is a mistake? Try a different email address, or contact your admin.",
      values: {
        email: email
      }
    })));
  }
  return /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/y(BackArrow, {
    onClick: goBack
  }), /*#__PURE__*/y(Text, {
    size: "header"
  }, _t2({
    id: 'organizationDiscovery.noOrgs.title',
    message: "{email} does not belong to any organizations.",
    values: {
      email: email
    }
  })), /*#__PURE__*/y(Text, null, _t2({
    id: 'organizationDiscovery.noOrgs.content',
    message: "Make sure your email address is correct. Otherwise, you might need to be invited by your admin."
  })), /*#__PURE__*/y(Button, {
    type: "button",
    variant: "outlined",
    onClick: goBack
  }, _t2({
    id: 'button.tryDifferentEmailAddress',
    message: "Try a different email address"
  })));
};
var shouldAllowDirectLoginToOrganization = function shouldAllowDirectLoginToOrganization(organizations, config) {
  if (!(config === null || config === void 0 ? void 0 : config.status)) {
    return null;
  }
  var activeOrganizations = organizations.filter(function (org) {
    return org.membership.type === 'active_member';
  });
  var hasBlockingConditions = organizations.some(function (org) {
    return (org.membership.type === 'pending_member' || org.membership.type === 'invited_member') && !config.ignoreInvites || isJoinViaJitType(org.membership.type) && !config.ignoreJitProvisioning;
  });
  return activeOrganizations.length === 1 && !hasBlockingConditions ? activeOrganizations[0] : null;
};
var Discovery = function Discovery() {
  var _a;
  var _useGlobalReducer41 = useGlobalReducer(),
    _useGlobalReducer42 = _slicedToArray(_useGlobalReducer41, 2),
    state = _useGlobalReducer42[0],
    dispatch = _useGlobalReducer42[1];
  var stytchClient = useStytch();
  var config = useConfig();
  var _useLingui22 = useLingui(),
    _t3 = _useLingui22._;
  var shouldDirectLoginConfigEnabled = !!((_a = config.directLoginForSingleMembership) === null || _a === void 0 ? void 0 : _a.status);
  var _useBootstrap2 = useBootstrap(),
    createOrganizationEnabled = _useBootstrap2.createOrganizationEnabled;
  p$1(function () {
    if (isExchangeInProgress) {
      return;
    }
    var directLoginOrganization = shouldAllowDirectLoginToOrganization(state.formState.discoveryState.discoveredOrganizations, config.directLoginForSingleMembership);
    if (shouldDirectLoginConfigEnabled && directLoginOrganization !== null) {
      handleDiscoveryOrganizationStart(directLoginOrganization);
    }
  }, [shouldDirectLoginConfigEnabled, state.formState.discoveryState.discoveredOrganizations, config.directLoginForSingleMembership]);
  var handleDiscoveryOrganizationStart = function handleDiscoveryOrganizationStart(discoveredOrganization) {
    var organization = discoveredOrganization.organization;
    if (discoveredOrganization.primary_required) {
      var allowedAuthMethods = discoveredOrganization.primary_required.allowed_auth_methods;
      if (allowedAuthMethods && allowedAuthMethods.length === 1 && allowedAuthMethods[0] === 'sso' && organization.sso_default_connection_id) {
        startSso(organization.sso_default_connection_id);
      } else {
        dispatch({
          type: 'select_discovered_organization',
          discoveredOrganization: discoveredOrganization
        });
      }
    } else {
      stytchDiscoveryExchange({
        organizationId: organization.organization_id
      });
    }
  };
  var startSso = T$1(function (connectionId) {
    var _a, _b;
    stytchClient.sso.start({
      connection_id: connectionId,
      login_redirect_url: (_a = config.ssoOptions) === null || _a === void 0 ? void 0 : _a.loginRedirectURL,
      signup_redirect_url: (_b = config.ssoOptions) === null || _b === void 0 ? void 0 : _b.signupRedirectURL
    });
  }, [stytchClient, config.ssoOptions]);
  var _useMutate3 = useMutate("stytch.discovery.intermediateSessions.exchange", function (_, _ref78) {
      var organizationId = _ref78.arg.organizationId;
      return stytchClient.discovery.intermediateSessions.exchange({
        organization_id: organizationId,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      },
      onError: function onError(error) {
        dispatch({
          type: 'set_error_message_and_transition',
          errorType: error.error_type === 'action_not_allowed_email_domain_is_claimed' ? ErrorType.OrganizationDiscoveryClaimedDomain : ErrorType.Default,
          canGoBack: true
        });
      }
    }),
    stytchDiscoveryExchange = _useMutate3.trigger,
    isExchangeInProgress = _useMutate3.isMutating;
  var _useMutate4 = useMutate('stytch.discovery.organizations.create', function () {
      return stytchClient.discovery.organizations.create({
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      },
      onError: function onError(error) {
        dispatch({
          type: 'set_error_message_and_transition',
          errorType: error.error_type === 'action_not_allowed_email_domain_is_claimed' ? ErrorType.OrganizationDiscoveryClaimedDomain : ErrorType.Default,
          canGoBack: true
        });
      }
    }),
    stytchCreateOrganization = _useMutate4.trigger,
    isCreateLoading = _useMutate4.isMutating;
  if (isExchangeInProgress) {
    return /*#__PURE__*/y(LoggingInScreen, null);
  }
  if (isCreateLoading) {
    return /*#__PURE__*/y(LoadingScreen, null);
  }
  if (state.formState.discoveryState.discoveredOrganizations.length === 0) {
    return /*#__PURE__*/y(DiscoverNoOrganizations, null);
  }
  var showCreateOrganization = createOrganizationEnabled && !config.disableCreateOrganization;
  return /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/y(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/y(Text, {
    size: "header"
  }, _t3({
    id: 'organizationDiscovery.title',
    message: "Select an organization to continue"
  })), /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 8
  }, state.formState.discoveryState.discoveredOrganizations.map(function (discoveredOrganization) {
    var organization = discoveredOrganization.organization,
      membership = discoveredOrganization.membership;
    return /*#__PURE__*/y(OrganizationsRow, {
      padding: 8,
      justifyContent: "space-between",
      key: organization.organization_id,
      alignItems: "center",
      onClick: function onClick() {
        return handleDiscoveryOrganizationStart(discoveredOrganization);
      }
    }, /*#__PURE__*/y(Flex, {
      gap: 8,
      alignItems: "center"
    }, /*#__PURE__*/y(Logo$1, {
      name: organization.organization_name,
      logo: organization.organization_logo_url
    }), /*#__PURE__*/y(OrganizationName, null, organization.organization_name)), /*#__PURE__*/y(Flex, {
      gap: 8,
      alignItems: "center"
    }, /*#__PURE__*/y(ActionText, {
      type: membership.type
    }), /*#__PURE__*/y(RightArrowSVG, null)));
  })), showCreateOrganization && (/*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/y(Divider, null), /*#__PURE__*/y(Button, {
    type: "button",
    variant: "outlined",
    onClick: function onClick() {
      return stytchCreateOrganization();
    }
  }, _t3({
    id: 'button.createAnOrganization',
    message: "Create an organization"
  })))));
};
var ConfirmationSVG = function ConfirmationSVG() {
  return /*#__PURE__*/y("svg", {
    width: "201",
    height: "200",
    viewBox: "0 0 201 200",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/y("g", {
    opacity: "0.1"
  }, /*#__PURE__*/y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.5 0C155.729 0 200.5 44.7715 200.5 99.9999C200.5 155.229 155.729 200 100.5 200C45.2715 200 0.5 155.229 0.5 99.9999C0.5 44.7715 45.2715 0 100.5 0Z",
    fill: "url(#paint0_linear_1356_5135)"
  })), /*#__PURE__*/y("g", {
    opacity: "0.3"
  }, /*#__PURE__*/y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.5 17.5728C146.023 17.5728 182.927 54.4767 182.927 99.9998C182.927 145.523 146.023 182.427 100.5 182.427C54.9768 182.427 18.0729 145.523 18.0729 99.9998C18.0729 54.4767 54.9768 17.5728 100.5 17.5728Z",
    fill: "url(#paint1_linear_1356_5135)"
  })), /*#__PURE__*/y("g", {
    opacity: "0.7"
  }, /*#__PURE__*/y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.5 32.231C137.988 32.231 168.378 62.6208 168.378 100.109C168.378 137.597 137.988 167.987 100.5 167.987C63.012 167.987 32.6222 137.597 32.6222 100.109C32.6222 62.6208 63.012 32.231 100.5 32.231Z",
    fill: "url(#paint2_linear_1356_5135)"
  })), /*#__PURE__*/y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.605 48.7734C128.955 48.7734 151.937 71.7553 151.937 100.105C151.937 128.455 128.955 151.437 100.605 151.437C72.255 151.437 49.2731 128.455 49.2731 100.105C49.2731 71.7553 72.255 48.7734 100.605 48.7734Z",
    fill: "#00AC26",
    fillOpacity: "0.12"
  }), /*#__PURE__*/y("mask", {
    id: "mask0_1356_5135",
    style: {
      maskType: 'alpha'
    },
    maskUnits: "userSpaceOnUse",
    x: "49",
    y: "48",
    width: "103",
    height: "104"
  }, /*#__PURE__*/y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.605 48.7734C128.955 48.7734 151.937 71.7553 151.937 100.105C151.937 128.455 128.955 151.437 100.605 151.437C72.255 151.437 49.2731 128.455 49.2731 100.105C49.2731 71.7553 72.255 48.7734 100.605 48.7734Z",
    fill: "white"
  })), /*#__PURE__*/y("g", {
    mask: "url(#mask0_1356_5135)"
  }), /*#__PURE__*/y("path", {
    d: "M88 117.5L70.5 100L64.6667 105.833L88 129.167L138 79.1666L132.167 73.3333L88 117.5Z",
    fill: "white"
  }), /*#__PURE__*/y("defs", null, /*#__PURE__*/y("linearGradient", {
    id: "paint0_linear_1356_5135",
    x1: "-86.6375",
    y1: "160.384",
    x2: "170.169",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/y("stop", {
    stopColor: "white"
  }), /*#__PURE__*/y("stop", {
    offset: "1",
    stopColor: "#09F33D"
  })), /*#__PURE__*/y("linearGradient", {
    id: "paint1_linear_1356_5135",
    x1: "-86.6374",
    y1: "160.384",
    x2: "170.169",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/y("stop", {
    stopColor: "#00AC26",
    stopOpacity: "0.4"
  }), /*#__PURE__*/y("stop", {
    offset: "1",
    stopColor: "#BDFFBC",
    stopOpacity: "0.58"
  })), /*#__PURE__*/y("linearGradient", {
    id: "paint2_linear_1356_5135",
    x1: "-86.6375",
    y1: "160.493",
    x2: "170.169",
    y2: "338.406",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/y("stop", {
    stopColor: "#F8FFF5"
  }), /*#__PURE__*/y("stop", {
    offset: "1",
    stopColor: "#00AC26",
    stopOpacity: "0.26"
  }))));
};
var Confirmation = function Confirmation(_ref79) {
  var header = _ref79.header,
    text = _ref79.text;
  var _useLingui23 = useLingui(),
    _t = _useLingui23._;
  var defaultHeader = _t({
    id: 'success.title',
    message: "Success!"
  });
  var defaultText = _t({
    id: 'login.success.content',
    message: "You have successfully logged in."
  });
  return /*#__PURE__*/y(Flex, {
    direction: "column",
    gap: 24,
    alignItems: "center"
  }, /*#__PURE__*/y(Text, {
    size: "header"
  }, header !== null && header !== void 0 ? header : defaultHeader), /*#__PURE__*/y(Text, null, text !== null && text !== void 0 ? text : defaultText), /*#__PURE__*/y(ConfirmationSVG, null));
};
var useMountEffect = function useMountEffect(effect) {
  var effectRef = _$1(effect);
  p$1(function () {
    return effectRef.current();
  }, []);
};
var ConfirmationScreen = function ConfirmationScreen() {
  var onEvent = useEventCallback();
  useMountEffect(function () {
    onEvent({
      type: StytchEventType.AuthenticateFlowComplete,
      data: {}
    });
  });
  return /*#__PURE__*/y(Confirmation, null);
};
var assertUnreachable = function assertUnreachable() {
  throw new Error('Assertion failure');
};
var Chevron = function Chevron() {
  return /*#__PURE__*/wn.createElement("svg", {
    viewBox: "0 0 25 25",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M9.09 7.91L13.67 12.5L9.09 17.09L10.5 18.5L16.5 12.5L10.5 6.5L9.09 7.91Z",
    fill: "currentColor"
  }));
};
var Chevron$1 = CreateIcon(Chevron);
var StyledButton$1 = He.button(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["\n  all: unset;\n  color: ", ";\n  cursor: pointer;\n  padding: 20px 0;\n  border-bottom: 1px solid #e5e8eb;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n"])), function (props) {
  return props.theme.colors.primary;
});
var MenuText = He.div(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["\n  flex: 1 1 auto;\n"])));
var ChevronContainer = He.span(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["\n  flex: 0 0 auto;\n"])));
var MenuButton = function MenuButton(_ref80) {
  var children = _ref80.children,
    disabled = _ref80.disabled,
    onClick = _ref80.onClick;
  return /*#__PURE__*/wn.createElement(StyledButton$1, {
    type: "button",
    onClick: onClick,
    disabled: disabled
  }, /*#__PURE__*/wn.createElement(MenuText, null, children), /*#__PURE__*/wn.createElement(ChevronContainer, {
    "aria-hidden": true
  }, /*#__PURE__*/wn.createElement(Chevron$1, null)));
};
var options = _defineProperty(_defineProperty({}, B2BProducts.emailMagicLinks, {
  messageDescriptor: {
    id: 'emailMethodSelection.link',
    message: "Email me a log in link"
  }
}), B2BProducts.emailOtp, {
  messageDescriptor: {
    id: 'emailMethodSelection.code',
    message: "Email me a log in code"
  }
});
var EmailMethodSelectionScreen = function EmailMethodSelectionScreen() {
  var _useEffectiveAuthConf5 = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf5.products;
  var _useLingui24 = useLingui(),
    _t = _useLingui24._;
  var _useGlobalReducer43 = useGlobalReducer(),
    _useGlobalReducer44 = _slicedToArray(_useGlobalReducer43, 2),
    state = _useGlobalReducer44[0],
    dispatch = _useGlobalReducer44[1];
  var _useEmlDiscoverySend2 = useEmlDiscoverySend(),
    sendDiscoveryEml = _useEmlDiscoverySend2.trigger,
    isSendingDiscoveryEml = _useEmlDiscoverySend2.isMutating,
    sendDiscoveryEmlError = _useEmlDiscoverySend2.error,
    resetSendDiscoveryEml = _useEmlDiscoverySend2.reset;
  var _useEmailOtpDiscovery2 = useEmailOtpDiscoverySend(),
    sendDiscoveryOtp = _useEmailOtpDiscovery2.trigger,
    isSendingDiscoveryOtp = _useEmailOtpDiscovery2.isMutating,
    sendDiscoveryOtpError = _useEmailOtpDiscovery2.error,
    resetSendDiscoveryOtp = _useEmailOtpDiscovery2.reset;
  var _useEmlLoginOrSignup2 = useEmlLoginOrSignup(),
    sendLoginOrSignupEml = _useEmlLoginOrSignup2.trigger,
    isSendingLoginOrSignupEml = _useEmlLoginOrSignup2.isMutating,
    sendLoginOrSignupEmlError = _useEmlLoginOrSignup2.error,
    resetSendLoginOrSignupEml = _useEmlLoginOrSignup2.reset;
  var _useEmailOtpLoginOrSi2 = useEmailOtpLoginOrSignup(),
    sendLoginOrSignupOtp = _useEmailOtpLoginOrSi2.trigger,
    isSendingLoginOrSignupOtp = _useEmailOtpLoginOrSi2.isMutating,
    sendLoginOrSignupOtpError = _useEmailOtpLoginOrSi2.error,
    resetSendLoginOrSignupOtp = _useEmailOtpLoginOrSi2.reset;
  var isSending = isSendingDiscoveryEml || isSendingDiscoveryOtp || isSendingLoginOrSignupEml || isSendingLoginOrSignupOtp;
  var error = sendDiscoveryEmlError || sendDiscoveryOtpError || sendLoginOrSignupEmlError || sendLoginOrSignupOtpError;
  var handleChooseMethod = function handleChooseMethod(method) {
    resetSendDiscoveryEml();
    resetSendDiscoveryOtp();
    resetSendLoginOrSignupEml();
    resetSendLoginOrSignupOtp();
    switch (method) {
      case B2BProducts.emailMagicLinks:
        if (state.flowState.type === AuthFlowType.Discovery) {
          sendDiscoveryEml({
            email: state.formState.emailState.userSuppliedEmail
          });
        } else if (state.flowState.type === AuthFlowType.Organization && state.flowState.organization) {
          sendLoginOrSignupEml({
            email: state.formState.emailState.userSuppliedEmail,
            organization_id: state.flowState.organization.organization_id
          });
        }
        break;
      case B2BProducts.emailOtp:
        if (state.flowState.type === AuthFlowType.Discovery) {
          sendDiscoveryOtp({
            email: state.formState.emailState.userSuppliedEmail
          });
        } else if (state.flowState.type === AuthFlowType.Organization && state.flowState.organization) {
          sendLoginOrSignupOtp({
            email: state.formState.emailState.userSuppliedEmail,
            organization_id: state.flowState.organization.organization_id
          });
        }
        break;
    }
  };
  var displayOptions = F$1(function () {
    return products.filter(function (product) {
      return product in options;
    }).map(function (product) {
      var option = options[product];
      return {
        option: product,
        messageDescriptor: option.messageDescriptor
      };
    });
  }, [products]);
  var handleBack = function handleBack() {
    dispatch({
      type: 'navigate_back'
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleBack
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'emailMethodSelection.title',
    message: "Select how you\u2019d like to continue."
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column"
  }, displayOptions.map(function (_ref81) {
    var option = _ref81.option,
      messageDescriptor = _ref81.messageDescriptor;
    return /*#__PURE__*/wn.createElement(MenuButton, {
      key: option,
      disabled: isSending,
      onClick: function onClick() {
        handleChooseMethod(option);
      }
    }, _t(messageDescriptor));
  })), error && /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: getTranslatedError(error, _t)
  }));
};
var StyledButton = He.button(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["\n  all: unset;\n\n  b {\n    cursor: pointer;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    pointer-events: none;\n  }\n"])));
var InlineButton = function InlineButton(_ref82) {
  var onClick = _ref82.onClick,
    children = _ref82.children,
    disabled = _ref82.disabled,
    className = _ref82.className;
  return /*#__PURE__*/wn.createElement(StyledButton, {
    onClick: onClick,
    disabled: disabled,
    className: className
  }, /*#__PURE__*/wn.createElement("b", null, children));
};
var Wrapper = He.div(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["\n  display: grid;\n  grid-template-rows: ", ";\n  transition: grid-template-rows 0.15s ease-out;\n"])), function (_ref83) {
  var isOpen = _ref83.isOpen;
  return isOpen ? '1fr' : '0fr';
});
var Inner = He.div(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["\n  overflow: hidden;\n"])));
var AnimatedContainer = function AnimatedContainer(_ref84) {
  var isOpen = _ref84.isOpen,
    children = _ref84.children;
  return /*#__PURE__*/wn.createElement(Wrapper, {
    isOpen: isOpen
  }, /*#__PURE__*/wn.createElement(Inner, null, children));
};
var Container = He.div(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["\n  height: 4px;\n  background-color: ", ";\n  border-radius: 3px;\n  overflow: hidden;\n"])), function (_ref85) {
  var theme = _ref85.theme;
  return theme.colors.disabled;
});
var loading = Ue(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral(["\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(-1%);\n  }\n"])));
var Progress = He.div(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral(["\n  height: 100%;\n  width: 100%;\n  background-color: ", ";\n  animation: ", " 10s cubic-bezier(0.22, 1, 0.36, 1);\n"])), function (_ref86) {
  var theme = _ref86.theme;
  return theme.colors.primary;
}, loading);
var LoadingBar = function LoadingBar(_ref87) {
  var isLoading = _ref87.isLoading;
  return /*#__PURE__*/wn.createElement(Container, null, isLoading && /*#__PURE__*/wn.createElement(Progress, null));
};
var OTP_LENGTH = 6;
var GAP = '8px';
var WIDTH = '46px';
var INPUT_HEIGHT = '46px';
var Digit = He.div(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral(["\n  border: 1px solid ", ";\n  border-radius: 4px;\n  align-items: center;\n  display: flex;\n  font-size: 18px;\n  justify-content: center;\n  height: ", ";\n  width: ", ";\n  background: ", ";\n  color: ", ";\n"])), function (_ref88) {
  var disabled = _ref88.disabled,
    theme = _ref88.theme;
  return disabled ? theme.colors.disabled : '#ADBCC5';
}, INPUT_HEIGHT, WIDTH, function (_ref89) {
  var disabled = _ref89.disabled,
    theme = _ref89.theme;
  return disabled ? theme.colors.disabled : theme.inputs.backgroundColor;
}, function (_ref90) {
  var disabled = _ref90.disabled,
    theme = _ref90.theme;
  return disabled ? theme.colors.disabledText : theme.inputs.textColor;
});
var digitsContainerStyles = {
  display: 'flex',
  justifyContent: 'space-between',
  gap: GAP,
  position: 'relative',
  zIndex: -1
};
var otpContainerStyles = {
  overflow: 'hidden',
  position: 'relative',
  textAlign: 'initial',
  zIndex: 1
};
var invisibleInputStyles = {
  background: 'transparent',
  border: 'none',
  color: 'transparent',
  height: INPUT_HEIGHT,
  margin: 0,
  outline: 'none',
  position: 'absolute',
  width: "calc(100% - (0.5 * ".concat(WIDTH, "))"),
  caretColor: '#ADBCC5',
  letterSpacing: "calc(".concat(WIDTH, " - 1ch + ").concat(GAP, ")"),
  paddingLeft: "calc(0.5 * ".concat(WIDTH, ")"),
  zIndex: 10
};
var DigitAtIndex = function DigitAtIndex(_ref91) {
  var index = _ref91.index,
    disabled = _ref91.disabled,
    otp = _ref91.otp;
  var fill = otp ? otp[index] : '';
  return /*#__PURE__*/wn.createElement(Digit, {
    disabled: disabled,
    "data-testid": "otp-".concat(index)
  }, fill);
};
var OTPInput = function OTPInput(_ref92) {
  var otp = _ref92.otp,
    setOtp = _ref92.setOtp,
    disabled = _ref92.disabled;
  var _useLingui25 = useLingui(),
    _t = _useLingui25._;
  var ref = _$1(null);
  p$1(function () {
    var _a;
    if (!disabled) {
      (_a = ref.current) === null || _a === void 0 ? void 0 : _a.focus();
    }
  }, [disabled, ref]);
  var handleInput = function handleInput(e) {
    var target = e.target;
    var newValue = target.value.replace(/\D/g, '').slice(0, OTP_LENGTH);
    target.value = newValue;
    if (newValue !== otp) {
      setOtp(newValue);
    }
  };
  return /*#__PURE__*/wn.createElement("div", {
    style: otpContainerStyles
  }, /*#__PURE__*/wn.createElement("input", Object.assign({
    ref: ref,
    "aria-label": _t({
      id: 'formField.otp.ariaLabel',
      message: "One-time passcode"
    }),
    autoComplete: "one-time-code",
    autoFocus: true,
    disabled: disabled,
    style: invisibleInputStyles,
    onInput: handleInput,
    type: "text",
    inputMode: "numeric",
    value: otp
  }, passwordManagerDisableAutofillProps)), /*#__PURE__*/wn.createElement("div", {
    style: digitsContainerStyles
  }, _toConsumableArray(Array(OTP_LENGTH).keys()).map(function (i) {
    return /*#__PURE__*/wn.createElement(DigitAtIndex, {
      key: "digit-".concat(i),
      index: i,
      otp: otp,
      disabled: !!disabled
    });
  })));
};
var OTP_CODE_LENGTH = 6;
var OTPControl = function OTPControl(_ref93) {
  var isSubmitting = _ref93.isSubmitting,
    onSubmit = _ref93.onSubmit,
    errorMessage = _ref93.errorMessage;
  var _useLingui26 = useLingui(),
    _t = _useLingui26._;
  var _h$23 = h$2(''),
    _h$24 = _slicedToArray(_h$23, 2),
    otp = _h$24[0],
    setOtp = _h$24[1];
  var handleOtpChange = function handleOtpChange(otp) {
    setOtp(otp);
    if (otp.length === OTP_CODE_LENGTH) {
      onSubmit(otp);
    }
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    maxWidth: 316
  }, /*#__PURE__*/wn.createElement(OTPInput, {
    otp: otp,
    setOtp: handleOtpChange,
    disabled: isSubmitting
  }), /*#__PURE__*/wn.createElement(AnimatedContainer, {
    isOpen: isSubmitting
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8,
    marginTop: 8
  }, /*#__PURE__*/wn.createElement(Text, {
    color: "secondary",
    size: "helper"
  }, _t({
    id: 'formField.passcode.status.verifying',
    message: "Verifying passcode..."
  })), /*#__PURE__*/wn.createElement(LoadingBar, {
    isLoading: isSubmitting
  }))), !isSubmitting && /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: errorMessage !== null && errorMessage !== void 0 ? errorMessage : ''
  }));
};
var OTPEntry = function OTPEntry(_ref94) {
  var header = _ref94.header,
    helperContent = _ref94.helperContent,
    instruction = _ref94.instruction,
    isSubmitting = _ref94.isSubmitting,
    onSubmit = _ref94.onSubmit,
    errorMessage = _ref94.errorMessage;
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, header), /*#__PURE__*/wn.createElement(Text, null, instruction), /*#__PURE__*/wn.createElement(OTPControl, {
    isSubmitting: isSubmitting,
    onSubmit: onSubmit,
    errorMessage: errorMessage
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, helperContent));
};
var getSecondsRemaining = function getSecondsRemaining(expiration) {
  var now = new Date();
  return Math.ceil((expiration.getTime() - now.getTime()) / 1000);
};
var rollToSuccess = Ue(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral(["\n  from {\n    transform: translateY(0%);\n  }\n  to {\n    transform: translateY(-50%);\n  }\n"])));
var rollToDefault = Ue(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral(["\n  from {\n    transform: translateY(-50%);\n  }\n  to {\n    transform: translateY(0%);\n  }\n"])));
var AnimatedWrapper = He.div(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral(["\n  position: relative;\n  overflow: hidden;\n  /* Set an explicit height to create the \"window\" the animation will be displayed in.  We match to the line height to ensure it looks inline with the text */\n  height: ", ";\n"])), function (_ref95) {
  var theme = _ref95.theme;
  return theme.typography.helper.lineHeight;
});
var RollingContainer = He.div(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral(["\n  display: flex;\n  flex-direction: column;\n  animation: ", "\n    0.3s ease-out;\n  transform: ", ";\n"])), function (_ref96) {
  var displayCodeSent = _ref96.displayCodeSent,
    shouldAnimate = _ref96.shouldAnimate;
  if (!shouldAnimate) return 'none';
  return displayCodeSent ? rollToSuccess : rollToDefault;
}, function (_ref97) {
  var displayCodeSent = _ref97.displayCodeSent;
  return displayCodeSent ? 'translateY(-50%)' : 'translateY(0%)';
});
var StyledInlineButton = He(InlineButton)(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral(["\n  color: ", ";\n"])), function (_ref98) {
  var theme = _ref98.theme,
    isCodeSending = _ref98.isCodeSending;
  return isCodeSending ? theme.colors.success : 'inherit';
});
var ExpirationMessage = function ExpirationMessage(_ref99) {
  var expiration = _ref99.expiration,
    resendOTP = _ref99.resendOTP,
    errorMessage = _ref99.errorMessage;
  var _useLingui27 = useLingui(),
    _t = _useLingui27._;
  var _h$25 = h$2(function () {
      return getSecondsRemaining(expiration);
    }),
    _h$26 = _slicedToArray(_h$25, 2),
    seconds = _h$26[0],
    setSeconds = _h$26[1];
  var _h$27 = h$2('initial'),
    _h$28 = _slicedToArray(_h$27, 2),
    resendState = _h$28[0],
    setResendState = _h$28[1];
  var codeExpired = seconds <= 0;
  p$1(function () {
    if (!codeExpired) {
      var updateSeconds = function updateSeconds() {
        return setSeconds(getSecondsRemaining(expiration));
      };
      var interval = setInterval(updateSeconds, 1000);
      updateSeconds();
      return function () {
        return clearInterval(interval);
      };
    }
  }, [codeExpired, expiration]);
  var handleResendClick = function handleResendClick() {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            _context7.prev = 0;
            setResendState('sending');
            _context7.next = 4;
            return resendOTP();
          case 4:
            setResendState('sent');
            setTimeout(function () {
              setResendState('waiting');
            }, 2000);
            _context7.next = 11;
            break;
          case 8:
            _context7.prev = 8;
            _context7.t0 = _context7["catch"](0);
            setResendState('initial');
          case 11:
          case "end":
            return _context7.stop();
        }
      }, _callee7, null, [[0, 8]]);
    }));
  };
  var displayMinutes = Math.floor(Number(seconds / 60));
  var displaySeconds = seconds - displayMinutes * 60;
  var timeRemaining = "".concat(displayMinutes, ":").concat(displaySeconds < 10 ? "0".concat(displaySeconds) : displaySeconds);
  var formattedText = seconds > 0 ? _t({
    id: 'passcode.expirationCountdown',
    message: "Your code expires in {timeRemaining}.",
    values: {
      timeRemaining: timeRemaining
    }
  }) : _t({
    id: 'passcode.expired',
    message: "Your code has expired."
  });
  return /*#__PURE__*/wn.createElement(wn.Fragment, null, formattedText, /*#__PURE__*/wn.createElement(Flex, {
    direction: "row",
    gap: 8,
    alignItems: "center"
  }, _t({
    id: 'passcode.didntGetIt',
    message: "Didn't get it?"
  }), /*#__PURE__*/wn.createElement(AnimatedWrapper, null, /*#__PURE__*/wn.createElement(RollingContainer, {
    displayCodeSent: resendState === 'sent',
    shouldAnimate: resendState === 'sent' || resendState === 'waiting'
  }, /*#__PURE__*/wn.createElement(StyledInlineButton, {
    onClick: handleResendClick,
    isCodeSending: false,
    disabled: resendState === 'sending' || resendState === 'sent'
  }, _t({
    id: 'passcode.resendCode',
    message: "Resend code"
  })), /*#__PURE__*/wn.createElement(StyledInlineButton, {
    onClick: handleResendClick,
    isCodeSending: true,
    disabled: true
  }, _t({
    id: 'passcode.codeSent',
    message: "Code sent"
  }))))), /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: errorMessage !== null && errorMessage !== void 0 ? errorMessage : ''
  }));
};
var SentOTPEntry = function SentOTPEntry(_ref100) {
  var expiration = _ref100.expiration,
    formattedDestination = _ref100.formattedDestination,
    isSubmitting = _ref100.isSubmitting,
    onSubmit = _ref100.onSubmit,
    errorMessage = _ref100.errorMessage,
    resendOTP = _ref100.resendOTP,
    resendErrorMessage = _ref100.resendErrorMessage;
  var _useLingui28 = useLingui(),
    _t2 = _useLingui28._;
  var helperContent = /*#__PURE__*/wn.createElement(ExpirationMessage, {
    expiration: expiration,
    resendOTP: resendOTP,
    errorMessage: resendErrorMessage
  });
  return /*#__PURE__*/wn.createElement(OTPEntry, {
    header: _t2({
      id: 'passcode.title',
      message: "Enter passcode"
    }),
    helperContent: helperContent,
    instruction: /*#__PURE__*/wn.createElement(Trans, {
      id: "passcode.sentConfirmation",
      message: "A 6-digit passcode was sent to you at <bold>{destination}</bold>.",
      components: {
        bold: /*#__PURE__*/wn.createElement("b", null)
      },
      values: {
        destination: formattedDestination
      }
    }),
    isSubmitting: isSubmitting,
    onSubmit: onSubmit,
    errorMessage: errorMessage
  });
};
var EmailOTPEntryScreen = function EmailOTPEntryScreen() {
  var stytchClient = useStytch();
  var config = useConfig();
  var _useLingui29 = useLingui(),
    _t = _useLingui29._;
  var _useGlobalReducer45 = useGlobalReducer(),
    _useGlobalReducer46 = _slicedToArray(_useGlobalReducer45, 2),
    state = _useGlobalReducer46[0],
    dispatch = _useGlobalReducer46[1];
  var codeExpiration = state.formState.otpState.codeExpiration;
  var userSuppliedEmail = state.formState.emailState.userSuppliedEmail;
  var _useEmailOtpLoginOrSi3 = useEmailOtpLoginOrSignup({
      throwOnError: true
    }),
    sendOtp = _useEmailOtpLoginOrSi3.trigger,
    isSendingOtp = _useEmailOtpLoginOrSi3.isMutating,
    sendOtpError = _useEmailOtpLoginOrSi3.error;
  var _useEmailOtpDiscovery3 = useEmailOtpDiscoverySend({
      throwOnError: true
    }),
    sendOtpDiscovery = _useEmailOtpDiscovery3.trigger,
    isSendingDiscovery = _useEmailOtpDiscovery3.isMutating,
    sendDiscoveryError = _useEmailOtpDiscovery3.error,
    resetSendDiscovery = _useEmailOtpDiscovery3.reset;
  var isSending = isSendingDiscovery || isSendingOtp;
  var sendError = sendDiscoveryError || sendOtpError;
  var _useMutate5 = useMutate('stytch.otps.email.discovery.authenticate', function (_, _ref101) {
      var _ref101$arg = _ref101.arg,
        otp = _ref101$arg.otp,
        email = _ref101$arg.email;
      return stytchClient.otps.email.discovery.authenticate({
        code: otp,
        email_address: email
      });
    }, {
      onSuccess: function onSuccess(data) {
        onDiscoveryAuthenticateSuccess(data, dispatch);
      }
    }),
    discoveryAuthenticate = _useMutate5.trigger,
    isDiscoveryAuthenticating = _useMutate5.isMutating,
    discoveryAuthenticateError = _useMutate5.error,
    resetDiscoveryAuthenticate = _useMutate5.reset;
  var _useMutate6 = useMutate('stytch.otps.email.authenticate', function (_, _ref102) {
      var _ref102$arg = _ref102.arg,
        otp = _ref102$arg.otp,
        emailAddress = _ref102$arg.emailAddress,
        organizationId = _ref102$arg.organizationId,
        sessionDurationMinutes = _ref102$arg.sessionDurationMinutes;
      return stytchClient.otps.email.authenticate({
        code: otp,
        email_address: emailAddress,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      }
    }),
    authenticate = _useMutate6.trigger,
    isAuthenticating = _useMutate6.isMutating,
    authenticateError = _useMutate6.error,
    resetAuthenticate = _useMutate6.reset;
  var isAuthenticatingAny = isDiscoveryAuthenticating || isAuthenticating;
  var error = discoveryAuthenticateError || authenticateError || sendError;
  var errorMessage = error ? getTranslatedError(error, _t) : undefined;
  var resetAll = function resetAll() {
    resetDiscoveryAuthenticate();
    resetAuthenticate();
    resetSendDiscovery();
  };
  var handleSubmit = function handleSubmit(otp) {
    resetAll();
    if (state.flowState.type === AuthFlowType.Discovery) {
      discoveryAuthenticate({
        otp: otp,
        email: userSuppliedEmail
      });
    } else if (state.flowState.type === AuthFlowType.Organization && state.flowState.organization && state.formState.emailState.userSuppliedEmail) {
      authenticate({
        otp: otp,
        emailAddress: state.formState.emailState.userSuppliedEmail,
        organizationId: state.flowState.organization.organization_id,
        sessionDurationMinutes: config.sessionOptions.sessionDurationMinutes
      });
    }
  };
  var handleResendOTP = function handleResendOTP() {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            resetAll();
            if (isSending) {
              _context8.next = 10;
              break;
            }
            if (!(state.flowState.type === AuthFlowType.Discovery)) {
              _context8.next = 7;
              break;
            }
            _context8.next = 5;
            return sendOtpDiscovery({
              email: userSuppliedEmail
            });
          case 5:
            _context8.next = 10;
            break;
          case 7:
            if (!(state.flowState.type === AuthFlowType.Organization && state.flowState.organization)) {
              _context8.next = 10;
              break;
            }
            _context8.next = 10;
            return sendOtp({
              email: userSuppliedEmail,
              organization_id: state.flowState.organization.organization_id
            });
          case 10:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    }));
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'navigate_back'
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleBack
  }), codeExpiration !== null ? (/*#__PURE__*/wn.createElement(SentOTPEntry, {
    isSubmitting: isAuthenticatingAny,
    onSubmit: handleSubmit,
    errorMessage: errorMessage,
    expiration: codeExpiration,
    formattedDestination: userSuppliedEmail,
    resendOTP: handleResendOTP
  })) : (/*#__PURE__*/wn.createElement(LoadingScreen, null)));
};
var mfaOptions = _defineProperty(_defineProperty({}, B2BMFAProducts.totp, {
  messageDescriptor: {
    id: 'mfa.enrollment.option.totp',
    message: "Use an authenticator app"
  }
}), B2BMFAProducts.smsOtp, {
  messageDescriptor: {
    id: 'mfa.enrollment.option.sms',
    message: "Text me a code"
  }
});
var MFAEnrollmentSelectionScreen = function MFAEnrollmentSelectionScreen() {
  var _useLingui30 = useLingui(),
    _t = _useLingui30._;
  var _useConfig = useConfig(),
    mfaProductInclude = _useConfig.mfaProductInclude,
    mfaProductOrder = _useConfig.mfaProductOrder;
  var _useGlobalReducer47 = useGlobalReducer(),
    _useGlobalReducer48 = _slicedToArray(_useGlobalReducer47, 2),
    state = _useGlobalReducer48[0],
    dispatch = _useGlobalReducer48[1];
  var organizationMfaOptionsSupported = state.mfa.primaryInfo.organizationMfaOptionsSupported;
  var handleChooseMethod = function handleChooseMethod(method) {
    dispatch({
      type: 'mfa/start_enrollment',
      method: method
    });
  };
  var displayOptions = F$1(function () {
    var optionsToDisplay = getEnabledMethods({
      allMethods: B2B_MFA_METHODS,
      orgSupportedMethods: organizationMfaOptionsSupported,
      uiIncludedMethods: mfaProductInclude
    });
    var sortedOptions = (mfaProductOrder !== null && mfaProductOrder !== void 0 ? mfaProductOrder : B2B_MFA_METHODS).reduce(function (acc, cur) {
      if (optionsToDisplay.has(cur)) {
        acc.push({
          option: cur,
          messageDescriptor: mfaOptions[cur].messageDescriptor
        });
        optionsToDisplay["delete"](cur);
      }
      return acc;
    }, []);
    optionsToDisplay.forEach(function (option) {
      sortedOptions.push({
        option: option,
        messageDescriptor: mfaOptions[option].messageDescriptor
      });
    });
    return sortedOptions;
  }, [mfaProductInclude, mfaProductOrder, organizationMfaOptionsSupported]);
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'mfa.enrollment.title',
    message: "Set up Multi-Factor Authentication"
  })), /*#__PURE__*/wn.createElement(Text, null, _t({
    id: 'mfa.enrollment.content',
    message: "Your organization requires an additional form of verification to make your account more secure."
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column"
  }, displayOptions.map(function (_ref103) {
    var option = _ref103.option,
      messageDescriptor = _ref103.messageDescriptor;
    return /*#__PURE__*/wn.createElement(MenuButton, {
      key: option,
      onClick: function onClick() {
        handleChooseMethod(option);
      }
    }, _t(messageDescriptor));
  })));
};
var VerifyEmailConfirmation = function VerifyEmailConfirmation(_ref104) {
  var emailDomain = _ref104.emailDomain,
    reset = _ref104.reset,
    email = _ref104.email;
  var _useLingui31 = useLingui(),
    _t = _useLingui31._;
  var _useGlobalReducer49 = useGlobalReducer(),
    _useGlobalReducer50 = _slicedToArray(_useGlobalReducer49, 2),
    dispatch = _useGlobalReducer50[1];
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'password.verification.title',
    message: "Verify your email first."
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 12
  }, /*#__PURE__*/wn.createElement(Text, null, /*#__PURE__*/wn.createElement(Trans, {
    id: "password.verification.content",
    message: "A login link was sent to you at <bold>{email}</bold>.",
    components: {
      bold: /*#__PURE__*/wn.createElement("b", null)
    },
    values: {
      email: email
    }
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(EmailProviderLink, {
    emailDomain: emailDomain,
    providerInfo: emailProviderInfo.gmail
  }), /*#__PURE__*/wn.createElement(EmailProviderLink, {
    emailDomain: emailDomain,
    providerInfo: emailProviderInfo.outlook
  }))), /*#__PURE__*/wn.createElement(Flex, {
    direction: "row"
  }, /*#__PURE__*/wn.createElement(Text, {
    color: "secondary"
  }, /*#__PURE__*/wn.createElement(Trans, {
    id: "password.verification.resendEmail",
    message: "Didn't get it? <resendButton>Resend email</resendButton>",
    components: {
      resendButton: /*#__PURE__*/wn.createElement(GetHelpText, {
        color: "secondary",
        onClick: reset
      })
    }
  }))));
};
var useEmailDomain = function useEmailDomain() {
  var _a, _b;
  var stytch = useStytch();
  var config = useConfig();
  var _h$29 = h$2(function () {
      var _readB2BInternals$boo2 = readB2BInternals(stytch).bootstrap.getSync(),
        emailDomains = _readB2BInternals$boo2.emailDomains;
      return emailDomains;
    }),
    _h$30 = _slicedToArray(_h$29, 2),
    emailDomains = _h$30[0],
    setEmailDomains = _h$30[1];
  p$1(function () {
    readB2BInternals(stytch).bootstrap.getAsync().then(function (_ref105) {
      var emailDomains = _ref105.emailDomains;
      setEmailDomains(emailDomains);
    });
  }, [stytch]);
  if ((_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.domainHint) {
    return (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.domainHint;
  }
  if (emailDomains.length === 1) {
    return emailDomains[0];
  }
  return null;
};
var PasswordResetConfirmation = function PasswordResetConfirmation() {
  var _useGlobalReducer51 = useGlobalReducer(),
    _useGlobalReducer52 = _slicedToArray(_useGlobalReducer51, 2),
    state = _useGlobalReducer52[0],
    dispatch = _useGlobalReducer52[1];
  var emailDomain = useEmailDomain();
  var reset = function reset() {
    dispatch({
      type: 'set_user_supplied_email',
      email: ''
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.Main
    });
  };
  return /*#__PURE__*/wn.createElement(VerifyEmailConfirmation, {
    emailDomain: emailDomain,
    reset: reset,
    email: state.formState.passwordState.email
  });
};
var Block = He.div(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral(["\n  height: 4px;\n  width: 25%;\n  background-color: ", ";\n"])), function (props) {
  return props.$bgColor;
});
var PasswordStrengthCheck = function PasswordStrengthCheck(_ref106) {
  var score = _ref106.score;
  var blocks = [];
  switch (score) {
    case 0:
    case 1:
      blocks = ['#8B1214', '#ADBCC5', '#ADBCC5', '#ADBCC5'];
      break;
    case 2:
      blocks = ['#8B1214', '#8B1214', '#ADBCC5', '#ADBCC5'];
      break;
    case 3:
      blocks = ['#0C5A56', '#0C5A56', '#0C5A56', '#ADBCC5'];
      break;
    case 4:
      blocks = ['#0C5A56', '#0C5A56', '#0C5A56', '#0C5A56'];
      break;
    default:
      blocks = ['#ADBCC5', '#ADBCC5', '#ADBCC5', '#ADBCC5'];
      break;
  }
  return /*#__PURE__*/wn.createElement(Flex, {
    gap: 2
  }, blocks.map(function (block, i) {
    return /*#__PURE__*/wn.createElement(Block, {
      key: "".concat(block, "-").concat(i),
      "$bgColor": block
    });
  }));
};
var CheckIcon = function CheckIcon() {
  return /*#__PURE__*/y(Flex, {
    height: 16,
    width: 16
  }, /*#__PURE__*/y("svg", {
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/y("path", {
    d: "M5.86332 10.5833L3.08332 7.80333L2.13666 8.74333L5.86332 12.47L13.8633 4.47L12.9233 3.53L5.86332 10.5833Z",
    fill: "#0C5A56"
  })));
};
var CrossIcon = function CrossIcon() {
  return /*#__PURE__*/y(Flex, {
    height: 16,
    width: 16
  }, /*#__PURE__*/y("svg", {
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/y("path", {
    d: "M12.6667 4.27334L11.7267 3.33334L8.00001 7.06001L4.27334 3.33334L3.33334 4.27334L7.06001 8.00001L3.33334 11.7267L4.27334 12.6667L8.00001 8.94001L11.7267 12.6667L12.6667 11.7267L8.94001 8.00001L12.6667 4.27334Z",
    fill: "#8B1214"
  })));
};
var warnings = {
  'Short keyboard patterns are easy to guess.': {
    id: 'password.zxcvbn.warning.shortKeyboardPatterns',
    message: "Short keyboard patterns are easy to guess."
  },
  'Straight rows of keys are easy to guess.': {
    id: 'password.zxcvbn.warning.straightRows',
    message: "Straight rows of keys are easy to guess."
  },
  'Repeats like "aaa" are easy to guess.': {
    id: 'password.zxcvbn.warning.repeats',
    message: "Repeats like \"aaa\" are easy to guess."
  },
  'Repeats like "abcabcabc" are only slightly harder to guess than "abc".': {
    id: 'password.zxcvbn.warning.longerRepeats',
    message: "Repeats like \"abcabcabc\" are only slightly harder to guess than \"abc\"."
  },
  'Sequences like "abc" or "6543" are easy to guess.': {
    id: 'password.zxcvbn.warning.sequences',
    message: "Sequences like \"abc\" or \"6543\" are easy to guess."
  },
  'Recent years are easy to guess.': {
    id: 'password.zxcvbn.warning.recentYears',
    message: "Recent years are easy to guess."
  },
  'Dates are often easy to guess.': {
    id: 'password.zxcvbn.warning.dates',
    message: "Dates are often easy to guess."
  },
  'This is a top-10 common password.': {
    id: 'password.zxcvbn.warning.top10CommonPassword',
    message: "This is a top-10 common password."
  },
  'This is a top-100 common password.': {
    id: 'password.zxcvbn.warning.top100CommonPassword',
    message: "This is a top-100 common password."
  },
  'This is a very common password.': {
    id: 'password.zxcvbn.warning.veryCommonPassword',
    message: "This is a very common password."
  },
  'This is similar to a commonly used password.': {
    id: 'password.zxcvbn.warning.similarToCommonPassword',
    message: "This is similar to a commonly used password."
  },
  'A word by itself is easy to guess.': {
    id: 'password.zxcvbn.warning.wordByItself',
    message: "A word by itself is easy to guess."
  },
  'Names and surnames by themselves are easy to guess.': {
    id: 'password.zxcvbn.warning.names',
    message: "Names and surnames by themselves are easy to guess."
  },
  'Common names and surnames are easy to guess.': {
    id: 'password.zxcvbn.warning.commonNames',
    message: "Common names and surnames are easy to guess."
  }
};
var suggestions = {
  'Use a few words, avoid common phrases.': {
    id: 'password.zxcvbn.suggestion.useAFewWords',
    message: "Use a few words, avoid common phrases."
  },
  'No need for symbols, digits, or uppercase letters.': {
    id: 'password.zxcvbn.suggestion.noSymbolsDigitsUppercase',
    message: "No need for symbols, digits, or uppercase letters."
  },
  'Add another word or two. Uncommon words are better.': {
    id: 'password.zxcvbn.suggestion.addWords',
    message: "Add another word or two. Uncommon words are better."
  },
  'Use a longer keyboard pattern with more turns.': {
    id: 'password.zxcvbn.suggestion.longerKeyboardPattern',
    message: "Use a longer keyboard pattern with more turns."
  },
  'Avoid repeated words and characters.': {
    id: 'password.zxcvbn.suggestion.avoidRepeats',
    message: "Avoid repeated words and characters."
  },
  'Avoid sequences.': {
    id: 'password.zxcvbn.suggestion.avoidSequences',
    message: "Avoid sequences."
  },
  'Avoid recent years.': {
    id: 'password.zxcvbn.suggestion.avoidRecentYears',
    message: "Avoid recent years."
  },
  'Avoid years that are associated with you.': {
    id: 'password.zxcvbn.suggestion.avoidYearsAssociatedWithYou',
    message: "Avoid years that are associated with you."
  },
  'Avoid dates and years that are associated with you.': {
    id: 'password.zxcvbn.suggestion.avoidDatesAndYearsAssociatedWithYou',
    message: "Avoid dates and years that are associated with you."
  },
  "Capitalization doesn't help very much.": {
    id: 'password.zxcvbn.suggestion.capitalization',
    message: "Capitalization doesn't help very much."
  },
  'All-uppercase is almost as easy to guess as all-lowercase.': {
    id: 'password.zxcvbn.suggestion.allUppercase',
    message: "All-uppercase is almost as easy to guess as all-lowercase."
  },
  "Reversed words aren't much harder to guess.": {
    id: 'password.zxcvbn.suggestion.reversed',
    message: "Reversed words aren't much harder to guess."
  },
  "Predictable substitutions like '@' instead of 'a' don't help very much.": {
    id: 'password.zxcvbn.suggestion.predictableSubstitutions',
    message: "Predictable substitutions like '@' instead of 'a' don't help very much."
  }
};
var BulletPoint = He.div(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: center;\n  width: 16px;\n  flex-shrink: 0;\n\n  &::before {\n    content: '\u2022';\n    font-size: ", ";\n    line-height: ", ";\n    color: ", ";\n  }\n"])), function (_ref107) {
  var theme = _ref107.theme;
  return theme.typography.helper.fontSize;
}, function (_ref108) {
  var theme = _ref108.theme;
  return theme.typography.helper.lineHeight;
}, function (_ref109) {
  var theme = _ref109.theme;
  return theme.colors.secondary;
});
var CrossIconContainer = He.div(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral(["\n  flex-shrink: 0;\n  padding-top: 2px;\n"])));
var PasswordError = function PasswordError(_a) {
  var _b, _c, _d, _e, _f;
  var bootstrap = _a.bootstrap,
    props = __rest(_a, ["bootstrap"]);
  var _useLingui32 = useLingui(),
    _t = _useLingui32._;
  var complexity = (_c = (_b = bootstrap.passwordConfig) === null || _b === void 0 ? void 0 : _b.ludsComplexity) !== null && _c !== void 0 ? _c : 0;
  var characterLength = (_e = (_d = bootstrap.passwordConfig) === null || _d === void 0 ? void 0 : _d.ludsMinimumCount) !== null && _e !== void 0 ? _e : 0;
  if (props.passwordPolicy === 'none') {
    return null;
  }
  if (props.passwordPolicy === 'zxcvbn') {
    var translatedWarning = props.passwordWarning ? (_f = warnings[props.passwordWarning]) !== null && _f !== void 0 ? _f : props.passwordWarning : null;
    var uniqueSuggestions = _toConsumableArray(new Set(props.passwordSuggestions));
    var translatedSuggestions = uniqueSuggestions.map(function (suggestion) {
      var _a;
      return (_a = suggestions[suggestion]) !== null && _a !== void 0 ? _a : suggestion;
    });
    return /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/wn.createElement(PasswordStrengthCheck, {
      score: props.passwordScore
    }), props.errorMessage && /*#__PURE__*/wn.createElement(ErrorText, {
      errorMessage: props.errorMessage
    }), translatedWarning && (/*#__PURE__*/wn.createElement(Flex, {
      gap: 1,
      alignItems: "flex-start"
    }, /*#__PURE__*/wn.createElement(CrossIconContainer, null, /*#__PURE__*/wn.createElement(CrossIcon, null)), /*#__PURE__*/wn.createElement(Text, {
      size: "helper",
      color: "error"
    }, _t(translatedWarning)))), translatedSuggestions.map(function (suggestion, index) {
      return /*#__PURE__*/wn.createElement(Flex, {
        key: index,
        gap: 1,
        alignItems: "flex-start"
      }, /*#__PURE__*/wn.createElement(BulletPoint, null), ' ', /*#__PURE__*/wn.createElement(Text, {
        size: "helper",
        color: "secondary"
      }, _t(suggestion)));
    }));
  }
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 4
  }, /*#__PURE__*/wn.createElement(Flex, {
    gap: 4
  }, props.missingCharacters === 0 ? /*#__PURE__*/wn.createElement(CheckIcon, null) : /*#__PURE__*/wn.createElement(CrossIcon, null), /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: props.missingCharacters === 0 ? 'success' : 'error'
  }, _t({
    id: 'password.strengthError.minimumLength',
    message: "{characterLength, plural, one {Must be at least # character long} other {Must be at least # characters long}}",
    values: {
      characterLength: characterLength
    }
  }))), /*#__PURE__*/wn.createElement(Flex, {
    gap: 4
  }, props.missingComplexity === 0 ? /*#__PURE__*/wn.createElement(CheckIcon, null) : /*#__PURE__*/wn.createElement(CrossIcon, null), /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: props.missingComplexity === 0 ? 'success' : 'error'
  }, _t({
    id: 'password.strengthError.complexity',
    message: "{complexity, plural, one {Must contain # of the following: uppercase letter, lowercase letter, number, symbol} other {Must contain # of the following: uppercase letter, lowercase letter, number, symbol}}",
    values: {
      complexity: complexity
    }
  }))), props.isPasswordBreached && (/*#__PURE__*/wn.createElement(Flex, {
    gap: 4
  }, /*#__PURE__*/wn.createElement(CrossIcon, null), /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "error"
  }, _t({
    id: 'password.strengthError.breached',
    message: "This password may have been used on a different site that experienced a security issue. Please choose another password."
  })))));
};
var PasswordB2BError = function PasswordB2BError(props) {
  var bootstrap = useBootstrap();
  return /*#__PURE__*/wn.createElement(PasswordError, Object.assign({}, props, {
    bootstrap: bootstrap
  }));
};
var clearStytchSearchParams = function clearStytchSearchParams() {
  var url = removeStytchParams(window.location.toString());
  window.history.replaceState(null, document.title, url);
};
var removeStytchParams = function removeStytchParams(value) {
  var url = new URL(value);
  var params = url.searchParams;
  params["delete"]('token');
  params["delete"]('stytch_token_type');
  return url;
};
var Form = He.form(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral(["\n  width: 100%;\n"])));
var PasswordResetForm = function PasswordResetForm() {
  var stytchClient = useStytch();
  var config = useConfig();
  var _useGlobalReducer53 = useGlobalReducer(),
    _useGlobalReducer54 = _slicedToArray(_useGlobalReducer53, 2),
    dispatch = _useGlobalReducer54[1];
  var _useLingui33 = useLingui(),
    _t = _useLingui33._;
  var onEvent = useEventCallback();
  var onError = useErrorCallback();
  var _h$31 = h$2(''),
    _h$32 = _slicedToArray(_h$31, 2),
    resetTokenType = _h$32[0],
    setResetTokenType = _h$32[1];
  var _h$33 = h$2(''),
    _h$34 = _slicedToArray(_h$33, 2),
    resetToken = _h$34[0],
    setResetToken = _h$34[1];
  var dataLayer = readB2BInternals(stytchClient).dataLayer;
  var email = dataLayer.getItem('reset-email-value');
  var _h$35 = h$2(''),
    _h$36 = _slicedToArray(_h$35, 2),
    password = _h$36[0],
    setPassword = _h$36[1];
  var _h$37 = h$2(''),
    _h$38 = _slicedToArray(_h$37, 2),
    errorMessage = _h$38[0],
    setErrorMessage = _h$38[1];
  var _h$39 = h$2(0),
    _h$40 = _slicedToArray(_h$39, 2),
    passwordScore = _h$40[0],
    setPasswordScore = _h$40[1];
  var _h$41 = h$2(''),
    _h$42 = _slicedToArray(_h$41, 2),
    passwordWarning = _h$42[0],
    setPasswordWarning = _h$42[1];
  var _h$43 = h$2([]),
    _h$44 = _slicedToArray(_h$43, 2),
    passwordSuggestions = _h$44[0],
    setPasswordSuggestions = _h$44[1];
  var _h$45 = h$2(true),
    _h$46 = _slicedToArray(_h$45, 2),
    invalidPassword = _h$46[0],
    setInvalidPassword = _h$46[1];
  var _h$47 = h$2(false),
    _h$48 = _slicedToArray(_h$47, 2),
    isSubmitting = _h$48[0],
    setIsSubmitting = _h$48[1];
  var _h$49 = h$2('none'),
    _h$50 = _slicedToArray(_h$49, 2),
    strengthPolicy = _h$50[0],
    setStrengthPolicy = _h$50[1];
  var _h$51 = h$2(0),
    _h$52 = _slicedToArray(_h$51, 2),
    missingCharacters = _h$52[0],
    setMissingCharacters = _h$52[1];
  var _h$53 = h$2(0),
    _h$54 = _slicedToArray(_h$53, 2),
    missingComplexity = _h$54[0],
    setMissingComplexity = _h$54[1];
  var _h$55 = h$2(false),
    _h$56 = _slicedToArray(_h$55, 2),
    isPasswordBreached = _h$56[0],
    setIsPasswordBreached = _h$56[1];
  var updateStrengthCheck = F$1(function () {
    return debounce(function (password) {
      return stytchClient.passwords.strengthCheck({
        password: password
      }).then(function (_ref110) {
        var score = _ref110.score,
          valid_password = _ref110.valid_password,
          zxcvbn_feedback = _ref110.zxcvbn_feedback,
          luds_feedback = _ref110.luds_feedback,
          strength_policy = _ref110.strength_policy,
          breached_password = _ref110.breached_password;
        setStrengthPolicy(strength_policy);
        setInvalidPassword(!valid_password);
        if (strength_policy === 'zxcvbn') {
          setPasswordScore(score);
          setPasswordWarning(zxcvbn_feedback.warning);
          setPasswordSuggestions(zxcvbn_feedback.suggestions);
        } else if (strength_policy === 'luds') {
          setMissingCharacters(luds_feedback.missing_characters);
          setMissingComplexity(luds_feedback.missing_complexity);
          setIsPasswordBreached(breached_password);
        }
      });
    });
  }, [stytchClient.passwords]);
  p$1(function () {
    var _a, _b;
    var params = new URLSearchParams(window.location.search);
    var token = (_a = params.get('token')) !== null && _a !== void 0 ? _a : '';
    var tokenType = (_b = params.get('stytch_token_type')) !== null && _b !== void 0 ? _b : '';
    setResetToken(token);
    setResetTokenType(tokenType);
  }, []);
  p$1(function () {
    var _a, _b, _c;
    if (resetTokenType === 'multi_tenant_magic_links') {
      stytchClient.magicLinks.authenticate({
        magic_links_token: resetToken,
        session_duration_minutes: (_b = (_a = config.sessionOptions) === null || _a === void 0 ? void 0 : _a.sessionDurationMinutes) !== null && _b !== void 0 ? _b : DEFAULT_SESSION_DURATION_MINUTES,
        locale: (_c = config.emailMagicLinksOptions) === null || _c === void 0 ? void 0 : _c.locale
      }).then(function (data) {
        clearStytchSearchParams();
        dispatch({
          type: 'primary_authenticate_success',
          response: data,
          includedMfaMethods: config.mfaProductInclude,
          resetTokenType: resetTokenType
        });
      })["catch"](function (e) {
        setErrorMessage(getTranslatedError(e, _t));
        onError(e);
      });
      return;
    }
  }, [resetTokenType]);
  var onPasswordChange = function onPasswordChange(password) {
    setPassword(password);
    updateStrengthCheck(password);
  };
  var handleSubmit = function handleSubmit(e) {
    var _a, _b, _c;
    e.preventDefault();
    setErrorMessage('');
    setIsSubmitting(true);
    if (resetTokenType == 'multi_tenant_passwords') {
      stytchClient.passwords.resetByEmail({
        password_reset_token: resetToken,
        password: password,
        session_duration_minutes: (_b = (_a = config.sessionOptions) === null || _a === void 0 ? void 0 : _a.sessionDurationMinutes) !== null && _b !== void 0 ? _b : DEFAULT_SESSION_DURATION_MINUTES,
        locale: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.locale
      }).then(function (data) {
        setIsSubmitting(false);
        onEvent({
          type: StytchEventType.B2BPasswordResetByEmail,
          data: data
        });
        onAuthenticateSuccess(data, dispatch, config);
      })["catch"](function (e) {
        onError(e);
        setErrorMessage(getTranslatedError(e, _t));
        setIsSubmitting(false);
      });
    } else if (resetTokenType == 'discovery') {
      stytchClient.passwords.discovery.resetByEmail({
        password_reset_token: resetToken,
        password: password
      }).then(function (data) {
        setIsSubmitting(false);
        onEvent({
          type: StytchEventType.B2BDiscoveryPasswordReset,
          data: data
        });
        dispatch({
          type: 'transition',
          screen: AppScreens$1.Discovery
        });
        dispatch({
          type: 'set_discovery_state',
          email: data.email_address,
          discoveredOrganizations: data.discovered_organizations
        });
      })["catch"](function (e) {
        onError(e);
        setErrorMessage(getTranslatedError(e, _t));
        setIsSubmitting(false);
      });
    } else {
      stytchClient.passwords.resetBySession({
        password: password
      }).then(function (data) {
        setIsSubmitting(false);
        onEvent({
          type: StytchEventType.B2BPasswordResetBySession,
          data: data
        });
        dispatch({
          type: 'transition',
          screen: AppScreens$1.LoggedIn
        });
      })["catch"](function (e) {
        onError(e);
        setErrorMessage(getTranslatedError(e, _t));
        setIsSubmitting(false);
      });
    }
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 36,
    className: 'resetPasswordContainer'
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'password.setNew.title',
    message: "Set a new password"
  })), /*#__PURE__*/wn.createElement(Form, {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, email ? (/*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t({
    id: 'formField.email.label',
    message: "Email"
  })), /*#__PURE__*/wn.createElement(Input, {
    disabled: true,
    name: "email",
    id: "email-input",
    value: email
  }))) : (/*#__PURE__*/wn.createElement(wn.Fragment, null)), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t({
    id: 'formField.password.label',
    message: "Password"
  })), /*#__PURE__*/wn.createElement(PasswordInput, {
    password: password,
    setPassword: onPasswordChange,
    type: "new"
  }), /*#__PURE__*/wn.createElement(PasswordB2BError, {
    passwordPolicy: strengthPolicy,
    passwordScore: passwordScore,
    errorMessage: errorMessage,
    passwordWarning: passwordWarning,
    passwordSuggestions: passwordSuggestions,
    missingCharacters: missingCharacters,
    missingComplexity: missingComplexity,
    isPasswordBreached: isPasswordBreached
  })), /*#__PURE__*/wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: _t({
      id: 'button.continue',
      message: "Continue"
    }),
    disabled: invalidPassword
  }))));
};
var e = {
    data: ""
  },
  t = function t(_t4) {
    return "object" == (typeof window === "undefined" ? "undefined" : _typeof(window)) ? ((_t4 ? _t4.querySelector("#_goober") : window._goober) || Object.assign((_t4 || document.head).appendChild(document.createElement("style")), {
      innerHTML: " ",
      id: "_goober"
    })).firstChild : _t4 || e;
  },
  l = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,
  a = /\/\*[^]*?\*\/|  +/g,
  n$1 = /\n+/g,
  _o2 = function o(e, t) {
    var r = "",
      l = "",
      a = "";
    var _loop = function _loop(_n) {
      var c = e[_n];
      "@" == _n[0] ? "i" == _n[1] ? r = _n + " " + c + ";" : l += "f" == _n[1] ? _o2(c, _n) : _n + "{" + _o2(c, "k" == _n[1] ? "" : t) + "}" : "object" == _typeof(c) ? l += _o2(c, t ? t.replace(/([^,])+/g, function (e) {
        return _n.replace(/(^:.*)|([^,])+/g, function (t) {
          return /&/.test(t) ? t.replace(/&/g, e) : e ? e + " " + t : t;
        });
      }) : _n) : null != c && (_n = /^--/.test(_n) ? _n : _n.replace(/[A-Z]/g, "-$&").toLowerCase(), a += _o2.p ? _o2.p(_n, c) : _n + ":" + c + ";");
    };
    for (var _n in e) {
      _loop(_n);
    }
    return r + (t && a ? t + "{" + a + "}" : a) + l;
  },
  c = {},
  _s2 = function s(e) {
    if ("object" == _typeof(e)) {
      var _t5 = "";
      for (var r in e) _t5 += r + _s2(e[r]);
      return _t5;
    }
    return e;
  },
  i = function i(e, t, r, _i, p) {
    var u = _s2(e),
      d = c[u] || (c[u] = function (e) {
        var t = 0,
          r = 11;
        for (; t < e.length;) r = 101 * r + e.charCodeAt(t++) >>> 0;
        return "go" + r;
      }(u));
    if (!c[d]) {
      var _t6 = u !== e ? e : function (e) {
        var t,
          r,
          o = [{}];
        for (; t = l.exec(e.replace(a, ""));) t[4] ? o.shift() : t[3] ? (r = t[3].replace(n$1, " ").trim(), o.unshift(o[0][r] = o[0][r] || {})) : o[0][t[1]] = t[2].replace(n$1, " ").trim();
        return o[0];
      }(e);
      c[d] = _o2(p ? _defineProperty({}, "@keyframes " + d, _t6) : _t6, r ? "" : "." + d);
    }
    var f = r && c.g ? c.g : null;
    return r && (c.g = c[d]), function (e, t, r, l) {
      l ? t.data = t.data.replace(l, e) : -1 === t.data.indexOf(e) && (t.data = r ? e + t.data : t.data + e);
    }(c[d], t, _i, f), d;
  },
  p = function p(e, t, r) {
    return e.reduce(function (e, l, a) {
      var n = t[a];
      if (n && n.call) {
        var _e2 = n(r),
          _t7 = _e2 && _e2.props && _e2.props.className || /^go/.test(_e2) && _e2;
        n = _t7 ? "." + _t7 : _e2 && "object" == _typeof(_e2) ? _e2.props ? "" : _o2(_e2, "") : !1 === _e2 ? "" : _e2;
      }
      return e + l + (null == n ? "" : n);
    }, "");
  };
function u$1(e) {
  var r = this || {},
    l = e.call ? e(r.p) : e;
  return i(l.unshift ? l.raw ? p(l, [].slice.call(arguments, 1), r.p) : l.reduce(function (e, t) {
    return Object.assign(e, t && t.call ? t(r.p) : t);
  }, {}) : l, t(r.target), r.g, r.o, r.k);
}
var d, f, g;
u$1.bind({
  g: 1
});
var h$1 = u$1.bind({
  k: 1
});
function m(e, t, r, l) {
  _o2.p = t, d = e, f = r, g = l;
}
function j(e, t) {
  var r = this || {};
  return function () {
    var l = arguments;
    function a(n, o) {
      var c = Object.assign({}, n),
        s = c.className || a.className;
      r.p = Object.assign({
        theme: f && f()
      }, c), r.o = / *go\d+/.test(s), c.className = u$1.apply(r, l) + (s ? " " + s : "");
      var i = e;
      return e[0] && (i = c.as || e, delete c.as), g && i[0] && g(c), d(i, c);
    }
    return a;
  };
}
var W = function W(e) {
    return typeof e == "function";
  },
  T = function T(e, t) {
    return W(e) ? e(t) : e;
  };
var U = function () {
    var e = 0;
    return function () {
      return (++e).toString();
    };
  }(),
  b = function () {
    var e;
    return function () {
      if (e === void 0 && (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u") {
        var _t8 = matchMedia("(prefers-reduced-motion: reduce)");
        e = !_t8 || _t8.matches;
      }
      return e;
    };
  }();
var Q = 20;
var S = new Map(),
  X = 1e3,
  $ = function $(e) {
    if (S.has(e)) return;
    var t = setTimeout(function () {
      S["delete"](e), u({
        type: 4,
        toastId: e
      });
    }, X);
    S.set(e, t);
  },
  J = function J(e) {
    var t = S.get(e);
    t && clearTimeout(t);
  },
  _v = function v(e, t) {
    switch (t.type) {
      case 0:
        return _objectSpread(_objectSpread({}, e), {}, {
          toasts: [t.toast].concat(_toConsumableArray(e.toasts)).slice(0, Q)
        });
      case 1:
        return t.toast.id && J(t.toast.id), _objectSpread(_objectSpread({}, e), {}, {
          toasts: e.toasts.map(function (r) {
            return r.id === t.toast.id ? _objectSpread(_objectSpread({}, r), t.toast) : r;
          })
        });
      case 2:
        var o = t.toast;
        return e.toasts.find(function (r) {
          return r.id === o.id;
        }) ? _v(e, {
          type: 1,
          toast: o
        }) : _v(e, {
          type: 0,
          toast: o
        });
      case 3:
        var s = t.toastId;
        return s ? $(s) : e.toasts.forEach(function (r) {
          $(r.id);
        }), _objectSpread(_objectSpread({}, e), {}, {
          toasts: e.toasts.map(function (r) {
            return r.id === s || s === void 0 ? _objectSpread(_objectSpread({}, r), {}, {
              visible: !1
            }) : r;
          })
        });
      case 4:
        return t.toastId === void 0 ? _objectSpread(_objectSpread({}, e), {}, {
          toasts: []
        }) : _objectSpread(_objectSpread({}, e), {}, {
          toasts: e.toasts.filter(function (r) {
            return r.id !== t.toastId;
          })
        });
      case 5:
        return _objectSpread(_objectSpread({}, e), {}, {
          pausedAt: t.time
        });
      case 6:
        var _a2 = t.time - (e.pausedAt || 0);
        return _objectSpread(_objectSpread({}, e), {}, {
          pausedAt: void 0,
          toasts: e.toasts.map(function (r) {
            return _objectSpread(_objectSpread({}, r), {}, {
              pauseDuration: r.pauseDuration + _a2
            });
          })
        });
    }
  },
  A = [],
  P = {
    toasts: [],
    pausedAt: void 0
  },
  u = function u(e) {
    P = _v(P, e), A.forEach(function (t) {
      t(P);
    });
  },
  Y = {
    blank: 4e3,
    error: 4e3,
    success: 2e3,
    loading: 1 / 0,
    custom: 4e3
  },
  I = function I() {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _h$57 = h$2(P),
      _h$58 = _slicedToArray(_h$57, 2),
      t = _h$58[0],
      o = _h$58[1];
    p$1(function () {
      return A.push(o), function () {
        var a = A.indexOf(o);
        a > -1 && A.splice(a, 1);
      };
    }, [t]);
    var s = t.toasts.map(function (a) {
      var r, c;
      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, e), e[a.type]), a), {}, {
        duration: a.duration || ((r = e[a.type]) == null ? void 0 : r.duration) || (e == null ? void 0 : e.duration) || Y[a.type],
        style: _objectSpread(_objectSpread(_objectSpread({}, e.style), (c = e[a.type]) == null ? void 0 : c.style), a.style)
      });
    });
    return _objectSpread(_objectSpread({}, t), {}, {
      toasts: s
    });
  };
var G = function G(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "blank";
    var o = arguments.length > 2 ? arguments[2] : undefined;
    return _objectSpread(_objectSpread({
      createdAt: Date.now(),
      visible: !0,
      type: t,
      ariaProps: {
        role: "status",
        "aria-live": "polite"
      },
      message: e,
      pauseDuration: 0
    }, o), {}, {
      id: (o == null ? void 0 : o.id) || U()
    });
  },
  h = function h(e) {
    return function (t, o) {
      var s = G(t, e, o);
      return u({
        type: 2,
        toast: s
      }), s.id;
    };
  },
  n = function n(e, t) {
    return h("blank")(e, t);
  };
n.error = h("error");
n.success = h("success");
n.loading = h("loading");
n.custom = h("custom");
n.dismiss = function (e) {
  u({
    type: 3,
    toastId: e
  });
};
n.remove = function (e) {
  return u({
    type: 4,
    toastId: e
  });
};
n.promise = function (e, t, o) {
  var s = n.loading(t.loading, _objectSpread(_objectSpread({}, o), o == null ? void 0 : o.loading));
  return e.then(function (a) {
    return n.success(T(t.success, a), _objectSpread(_objectSpread({
      id: s
    }, o), o == null ? void 0 : o.success)), a;
  })["catch"](function (a) {
    n.error(T(t.error, a), _objectSpread(_objectSpread({
      id: s
    }, o), o == null ? void 0 : o.error));
  }), e;
};
var Z = function Z(e, t) {
    u({
      type: 1,
      toast: {
        id: e,
        height: t
      }
    });
  },
  ee = function ee() {
    u({
      type: 5,
      time: Date.now()
    });
  },
  D = function D(e) {
    var _I = I(e),
      t = _I.toasts,
      o = _I.pausedAt;
    p$1(function () {
      if (o) return;
      var r = Date.now(),
        c = t.map(function (i) {
          if (i.duration === 1 / 0) return;
          var d = (i.duration || 0) + i.pauseDuration - (r - i.createdAt);
          if (d < 0) {
            i.visible && n.dismiss(i.id);
            return;
          }
          return setTimeout(function () {
            return n.dismiss(i.id);
          }, d);
        });
      return function () {
        c.forEach(function (i) {
          return i && clearTimeout(i);
        });
      };
    }, [t, o]);
    var s = T$1(function () {
        o && u({
          type: 6,
          time: Date.now()
        });
      }, [o]),
      a = T$1(function (r, c) {
        var _g$filter;
        var _ref112 = c || {},
          _ref112$reverseOrder = _ref112.reverseOrder,
          i = _ref112$reverseOrder === void 0 ? !1 : _ref112$reverseOrder,
          _ref112$gutter = _ref112.gutter,
          d = _ref112$gutter === void 0 ? 8 : _ref112$gutter,
          p = _ref112.defaultPosition,
          g = t.filter(function (m) {
            return (m.position || p) === (r.position || p) && m.height;
          }),
          E = g.findIndex(function (m) {
            return m.id === r.id;
          }),
          x = g.filter(function (m, R) {
            return R < E && m.visible;
          }).length;
        return (_g$filter = g.filter(function (m) {
          return m.visible;
        })).slice.apply(_g$filter, _toConsumableArray(i ? [x + 1] : [0, x])).reduce(function (m, R) {
          return m + (R.height || 0) + d;
        }, 0);
      }, [t]);
    return {
      toasts: t,
      handlers: {
        updateHeight: Z,
        startPause: ee,
        endPause: s,
        calculateOffset: a
      }
    };
  };
var oe = h$1(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"]))),
  re = h$1(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),
  se = h$1(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"]))),
  _ = j("div")(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ", ";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ", " 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ", " 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ", ";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ", " 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"])), function (e) {
    return e.primary || "#ff4b4b";
  }, oe, re, function (e) {
    return e.secondary || "#fff";
  }, se);
var ne = h$1(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral(["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"]))),
  V = j("div")(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral(["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ", ";\n  border-right-color: ", ";\n  animation: ", " 1s linear infinite;\n"])), function (e) {
    return e.secondary || "#e0e0e0";
  }, function (e) {
    return e.primary || "#616161";
  }, ne);
var pe = h$1(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"]))),
  de = h$1(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral(["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"]))),
  w = j("div")(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ", ";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ", " 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ", " 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ", ";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"])), function (e) {
    return e.primary || "#61d345";
  }, pe, de, function (e) {
    return e.secondary || "#fff";
  });
var ue = j("div")(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral(["\n  position: absolute;\n"]))),
  le = j("div")(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral(["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"]))),
  Te = h$1(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),
  fe = j("div")(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral(["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ", " 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"])), Te),
  M = function M(_ref113) {
    var e = _ref113.toast;
    var t = e.icon,
      o = e.type,
      s = e.iconTheme;
    return t !== void 0 ? typeof t == "string" ? y(fe, null, t) : t : o === "blank" ? null : y(le, null, y(V, _objectSpread({}, s)), o !== "loading" && y(ue, null, o === "error" ? y(_, _objectSpread({}, s)) : y(w, _objectSpread({}, s))));
  };
var ye = function ye(e) {
    return "\n0% {transform: translate3d(0,".concat(e * -200, "%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n");
  },
  ge = function ge(e) {
    return "\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,".concat(e * -150, "%,-1px) scale(.6); opacity:0;}\n");
  },
  he = "0%{opacity:0;} 100%{opacity:1;}",
  xe = "0%{opacity:1;} 100%{opacity:0;}",
  be = j("div")(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"]))),
  Se = j("div")(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"]))),
  Ae = function Ae(e, t) {
    var s = e.includes("top") ? 1 : -1,
      _ref114 = b() ? [he, xe] : [ye(s), ge(s)],
      _ref115 = _slicedToArray(_ref114, 2),
      a = _ref115[0],
      r = _ref115[1];
    return {
      animation: t ? "".concat(h$1(a), " 0.35s cubic-bezier(.21,1.02,.73,1) forwards") : "".concat(h$1(r), " 0.4s forwards cubic-bezier(.06,.71,.55,1)")
    };
  },
  F = w$1(function (_ref116) {
    var e = _ref116.toast,
      t = _ref116.position,
      o = _ref116.style,
      s = _ref116.children;
    var a = e.height ? Ae(e.position || t || "top-center", e.visible) : {
        opacity: 0
      },
      r = y(M, {
        toast: e
      }),
      c = y(Se, _objectSpread({}, e.ariaProps), T(e.message, e));
    return y(be, {
      className: e.className,
      style: _objectSpread(_objectSpread(_objectSpread({}, a), o), e.style)
    }, typeof s == "function" ? s({
      icon: r,
      message: c
    }) : y(g$1, null, r, c));
  });
m(y);
var Ee = function Ee(_ref117) {
    var e = _ref117.id,
      t = _ref117.className,
      o = _ref117.style,
      s = _ref117.onHeightUpdate,
      a = _ref117.children;
    var r = T$1(function (c) {
      if (c) {
        var _i2 = function _i2() {
          var d = c.getBoundingClientRect().height;
          s(e, d);
        };
        _i2(), new MutationObserver(_i2).observe(c, {
          subtree: !0,
          childList: !0,
          characterData: !0
        });
      }
    }, [e, s]);
    return y("div", {
      ref: r,
      className: t,
      style: o
    }, a);
  },
  Re = function Re(e, t) {
    var o = e.includes("top"),
      s = o ? {
        top: 0
      } : {
        bottom: 0
      },
      a = e.includes("center") ? {
        justifyContent: "center"
      } : e.includes("right") ? {
        justifyContent: "flex-end"
      } : {};
    return _objectSpread(_objectSpread({
      left: 0,
      right: 0,
      display: "flex",
      position: "absolute",
      transition: b() ? void 0 : "all 230ms cubic-bezier(.21,1.02,.73,1)",
      transform: "translateY(".concat(t * (o ? 1 : -1), "px)")
    }, s), a);
  },
  ve = u$1(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral(["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"]))),
  O = 16,
  Ie = function Ie(_ref118) {
    var e = _ref118.reverseOrder,
      _ref118$position = _ref118.position,
      t = _ref118$position === void 0 ? "top-center" : _ref118$position,
      o = _ref118.toastOptions,
      s = _ref118.gutter,
      a = _ref118.children,
      r = _ref118.containerStyle,
      c = _ref118.containerClassName;
    var _D = D(o),
      i = _D.toasts,
      d = _D.handlers;
    return y("div", {
      style: _objectSpread({
        position: "fixed",
        zIndex: 9999,
        top: O,
        left: O,
        right: O,
        bottom: O,
        pointerEvents: "none"
      }, r),
      className: c,
      onMouseEnter: d.startPause,
      onMouseLeave: d.endPause
    }, i.map(function (p) {
      var g = p.position || t,
        E = d.calculateOffset(p, {
          reverseOrder: e,
          gutter: s,
          defaultPosition: t
        }),
        x = Re(g, E);
      return y(Ee, {
        id: p.id,
        key: p.id,
        onHeightUpdate: d.updateHeight,
        className: p.visible ? ve : "",
        style: x
      }, p.type === "custom" ? T(p.message, p) : a ? a(p) : y(F, {
        toast: p,
        position: g
      }));
    }));
  };
var _t = n;
var ResendButton = function ResendButton(_ref119) {
  var onClick = _ref119.onClick,
    children = _ref119.children;
  return /*#__PURE__*/wn.createElement("button", {
    onClick: onClick,
    style: {
      all: 'unset'
    }
  }, /*#__PURE__*/wn.createElement("b", {
    style: {
      cursor: 'pointer'
    }
  }, children));
};
var PasswordSetNew = function PasswordSetNew() {
  var _useGlobalReducer55 = useGlobalReducer(),
    _useGlobalReducer56 = _slicedToArray(_useGlobalReducer55, 2),
    dispatch = _useGlobalReducer56[1];
  var onEvent = useEventCallback();
  var config = useConfig();
  var _useLingui34 = useLingui(),
    _t$1 = _useLingui34._;
  var _usePasswordInput3 = usePasswordInput(),
    stytch = _usePasswordInput3.stytch,
    onError = _usePasswordInput3.onError,
    email = _usePasswordInput3.email,
    organization = _usePasswordInput3.organization,
    setIsSubmitting = _usePasswordInput3.setIsSubmitting;
  var resendResetPassword = function resendResetPassword() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
    if (!organization) {
      stytch.passwords.discovery.resetByEmailStart({
        email_address: email,
        discovery_redirect_url: (_a = config.passwordOptions) === null || _a === void 0 ? void 0 : _a.discoveryRedirectURL,
        reset_password_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
        reset_password_expiration_minutes: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.resetPasswordExpirationMinutes,
        reset_password_template_id: (_d = config.passwordOptions) === null || _d === void 0 ? void 0 : _d.resetPasswordTemplateId,
        verify_email_template_id: (_e = config.passwordOptions) === null || _e === void 0 ? void 0 : _e.verifyEmailTemplateId,
        locale: (_f = config.passwordOptions) === null || _f === void 0 ? void 0 : _f.locale
      }).then(function (data) {
        _t.success(_t$1({
          id: 'password.reset.toast.emailResent',
          message: "Email resent"
        }));
        setIsSubmitting(false);
        onEvent({
          type: StytchEventType.B2BPasswordDiscoveryResetStart,
          data: data
        });
      });
    } else {
      stytch.passwords.resetByEmailStart({
        email_address: email,
        organization_id: organization.organization_id,
        login_redirect_url: (_g = config.passwordOptions) === null || _g === void 0 ? void 0 : _g.loginRedirectURL,
        reset_password_redirect_url: (_h = config.passwordOptions) === null || _h === void 0 ? void 0 : _h.resetPasswordRedirectURL,
        reset_password_expiration_minutes: (_j = config.passwordOptions) === null || _j === void 0 ? void 0 : _j.resetPasswordExpirationMinutes,
        reset_password_template_id: (_k = config.passwordOptions) === null || _k === void 0 ? void 0 : _k.resetPasswordTemplateId,
        verify_email_template_id: (_l = config.passwordOptions) === null || _l === void 0 ? void 0 : _l.verifyEmailTemplateId,
        locale: (_m = config.passwordOptions) === null || _m === void 0 ? void 0 : _m.locale
      }).then(function (data) {
        _t.success(_t$1({
          id: 'password.reset.toast.emailResent',
          message: "Email resent"
        }));
        setIsSubmitting(false);
        onEvent({
          type: StytchEventType.B2BPasswordResetByEmailStart,
          data: data
        });
      })["catch"](function (e) {
        onError(e);
      });
    }
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t$1({
    id: 'password.reset.emailSent.title',
    message: "Check your email!"
  })), /*#__PURE__*/wn.createElement(Text, null, /*#__PURE__*/wn.createElement(Trans, {
    id: "password.reset.emailSent.content",
    message: "A login link was sent to you at <bold>{email}</bold>.",
    components: {
      bold: /*#__PURE__*/wn.createElement("b", null)
    },
    values: {
      email: email
    }
  })), /*#__PURE__*/wn.createElement(Text, null, /*#__PURE__*/wn.createElement(Trans, {
    id: "password.reset.emailSent.resendText",
    message: "Didn't get it? <resendButton>Resend email</resendButton>",
    components: {
      resendButton: /*#__PURE__*/wn.createElement(ResendButton, {
        onClick: resendResetPassword
      })
    }
  })));
};
var PasswordsForgotForm = function PasswordsForgotForm() {
  var _useGlobalReducer57 = useGlobalReducer(),
    _useGlobalReducer58 = _slicedToArray(_useGlobalReducer57, 2),
    dispatch = _useGlobalReducer58[1];
  var config = useConfig();
  var onEvent = useEventCallback();
  var _useLingui35 = useLingui(),
    _t = _useLingui35._;
  var _usePasswordInput4 = usePasswordInput(),
    stytch = _usePasswordInput4.stytch,
    email = _usePasswordInput4.email,
    setEmail = _usePasswordInput4.setEmail,
    organization = _usePasswordInput4.organization,
    errorMessage = _usePasswordInput4.errorMessage,
    setErrorMessage = _usePasswordInput4.setErrorMessage,
    isSubmitting = _usePasswordInput4.isSubmitting,
    setIsSubmitting = _usePasswordInput4.setIsSubmitting,
    handleNonMemberReset = _usePasswordInput4.handleNonMemberReset;
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
      var _a, _b, _c, _d, _e, _f;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            e.preventDefault();
            if (email.match(EMAIL_REGEX)) {
              _context9.next = 4;
              break;
            }
            setErrorMessage(_t({
              id: 'error.invalidEmailAddress',
              message: "Invalid email address"
            }));
            return _context9.abrupt("return");
          case 4:
            setErrorMessage('');
            setIsSubmitting(true);
            if (organization) {
              readB2BInternals(stytch).searchManager.searchMember(email, organization.organization_id).then(function (_ref120) {
                var member = _ref120.member;
                var _a, _b, _c, _d, _e, _f;
                if (!member) {
                  handleNonMemberReset();
                  return;
                }
                stytch.passwords.resetByEmailStart({
                  email_address: email,
                  organization_id: organization.organization_id,
                  login_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.loginRedirectURL,
                  reset_password_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
                  reset_password_expiration_minutes: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.resetPasswordExpirationMinutes,
                  reset_password_template_id: (_d = config.passwordOptions) === null || _d === void 0 ? void 0 : _d.resetPasswordTemplateId,
                  verify_email_template_id: (_e = config.passwordOptions) === null || _e === void 0 ? void 0 : _e.verifyEmailTemplateId,
                  locale: (_f = config.passwordOptions) === null || _f === void 0 ? void 0 : _f.locale
                }).then(function (data) {
                  setIsSubmitting(false);
                  onEvent({
                    type: StytchEventType.B2BPasswordResetByEmailStart,
                    data: data
                  });
                  dispatch({
                    type: 'set_password_state',
                    email: email
                  });
                  dispatch({
                    type: 'transition',
                    screen: AppScreens$1.PasswordSetNewConfirmation
                  });
                })["catch"](function (err) {
                  setIsSubmitting(false);
                  setErrorMessage(getTranslatedError(err, _t));
                });
              })["catch"](function (err) {
                setIsSubmitting(false);
                setErrorMessage(getTranslatedError(err, _t));
              });
            } else {
              stytch.passwords.discovery.resetByEmailStart({
                email_address: email,
                discovery_redirect_url: (_a = config.passwordOptions) === null || _a === void 0 ? void 0 : _a.discoveryRedirectURL,
                reset_password_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
                reset_password_expiration_minutes: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.resetPasswordExpirationMinutes,
                reset_password_template_id: (_d = config.passwordOptions) === null || _d === void 0 ? void 0 : _d.resetPasswordTemplateId,
                verify_email_template_id: (_e = config.passwordOptions) === null || _e === void 0 ? void 0 : _e.verifyEmailTemplateId,
                locale: (_f = config.passwordOptions) === null || _f === void 0 ? void 0 : _f.locale
              }).then(function () {
                setIsSubmitting(false);
                dispatch({
                  type: 'set_password_state',
                  email: email
                });
                dispatch({
                  type: 'transition',
                  screen: AppScreens$1.PasswordSetNewConfirmation
                });
              })["catch"](function (err) {
                setIsSubmitting(false);
                setErrorMessage(getTranslatedError(err, _t));
              });
            }
          case 7:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    }));
  };
  return /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'password.forgot.title',
    message: "Check your email for help signing in!"
  })), /*#__PURE__*/wn.createElement(Text, null, !organization ? _t({
    id: 'password.forgot.content.discovery',
    message: "We'll email you a verification link to sign up for an account or reset your password if you have one."
  }) : _t({
    id: 'password.forgot.content.organization',
    message: "We'll email you a login link to sign in to your account directly or reset your password if you have one."
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 4
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t({
    id: 'formField.email.label',
    message: "Email"
  })), /*#__PURE__*/wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  }), /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: errorMessage
  }), /*#__PURE__*/wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: _t({
      id: 'button.continue',
      message: "Continue"
    })
  }))));
};
var RecoveryCodeEntryScreen = function RecoveryCodeEntryScreen() {
  var stytchClient = useStytch();
  var _useConfig2 = useConfig(),
    sessionDurationMinutes = _useConfig2.sessionOptions.sessionDurationMinutes;
  var _useLingui36 = useLingui(),
    _t = _useLingui36._;
  var _useGlobalReducer59 = useGlobalReducer(),
    _useGlobalReducer60 = _slicedToArray(_useGlobalReducer59, 2),
    state = _useGlobalReducer60[0],
    dispatch = _useGlobalReducer60[1];
  var _state$mfa$primaryInf = state.mfa.primaryInfo,
    memberId = _state$mfa$primaryInf.memberId,
    organizationId = _state$mfa$primaryInf.organizationId;
  var _h$59 = h$2(''),
    _h$60 = _slicedToArray(_h$59, 2),
    recoveryCode = _h$60[0],
    setRecoveryCode = _h$60[1];
  var _useMutate7 = useMutate('stytch.recoveryCodes.recover', function (_, _ref121) {
      var _ref121$arg = _ref121.arg,
        recoveryCode = _ref121$arg.recoveryCode,
        memberId = _ref121$arg.memberId,
        organizationId = _ref121$arg.organizationId,
        sessionDurationMinutes = _ref121$arg.sessionDurationMinutes;
      return stytchClient.recoveryCodes.recover({
        recovery_code: recoveryCode,
        member_id: memberId,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess() {
        dispatch({
          type: 'recovery_code/authenticate_success'
        });
      }
    }),
    authenticate = _useMutate7.trigger,
    isSubmitting = _useMutate7.isMutating,
    error = _useMutate7.error;
  var errorMessage = error ? _t({
    id: 'recoveryCodes.entry.error.invalidCode',
    message: "Invalid backup code, please try again."
  }) : undefined;
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee0() {
      return _regeneratorRuntime().wrap(function _callee0$(_context0) {
        while (1) switch (_context0.prev = _context0.next) {
          case 0:
            e.preventDefault();
            authenticate({
              recoveryCode: recoveryCode,
              memberId: memberId,
              organizationId: organizationId,
              sessionDurationMinutes: sessionDurationMinutes
            });
          case 2:
          case "end":
            return _context0.stop();
        }
      }, _callee0);
    }));
  };
  var handleSwitchToTotp = function handleSwitchToTotp() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  return /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleSwitchToTotp
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'recoveryCodes.entry.title',
    message: "Enter backup code"
  })), /*#__PURE__*/wn.createElement(Text, null, _t({
    id: 'recoveryCodes.entry.content',
    message: "Enter one of the backup codes you saved when setting up your authenticator app."
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column"
  }, /*#__PURE__*/wn.createElement(Input, {
    value: recoveryCode,
    onChange: function onChange(e) {
      setRecoveryCode(e.target.value);
    },
    placeholder: _t({
      id: 'formField.backupCode.placeholder',
      message: "Enter backup code"
    }),
    "aria-label": _t({
      id: 'formField.backupCode.ariaLabel',
      message: "Backup code"
    }),
    required: true,
    autoComplete: "off"
  }), errorMessage && /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: errorMessage
  })), /*#__PURE__*/wn.createElement(SubmitButton, {
    text: _t({
      id: 'button.continue',
      message: "Continue"
    }),
    disabled: !recoveryCode,
    isSubmitting: isSubmitting
  })));
};
var InsetContainer = He.div(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral(["\n  background-color: #f3f5f6;\n  color: #000;\n  font-size: 16px;\n  line-height: 28px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 8px;\n  padding: 16px 8px;\n"])));
var CodeList = He.ul(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral(["\n  list-style: none;\n  padding: 0;\n  margin: 0;\n"])));
var downloadFile = function downloadFile(content, filename) {
  var blob = new Blob([content], {
    type: 'text/plain'
  });
  var url = URL.createObjectURL(blob);
  var a = document.createElement('a');
  a.href = url;
  a.download = filename;
  a.click();
  URL.revokeObjectURL(url);
};
var RecoveryCodeSaveScreen = function RecoveryCodeSaveScreen() {
  var _useGlobalReducer61 = useGlobalReducer(),
    _useGlobalReducer62 = _slicedToArray(_useGlobalReducer61, 2),
    state = _useGlobalReducer62[0],
    dispatch = _useGlobalReducer62[1];
  var _useLingui37 = useLingui(),
    _t$1 = _useLingui37._;
  var recoveryCodes = state.mfa.totp.enrollment.recoveryCodes;
  var handleContinue = function handleContinue() {
    dispatch({
      type: 'recovery_code/save_acknowledge'
    });
  };
  var handleCodesDownload = function handleCodesDownload() {
    var _a;
    var organizationName = (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.organization_name;
    downloadFile(recoveryCodes.join('\n'), "".concat(!!organizationName ? organizationName + '-' : '', "backup-codes.txt"));
  };
  var handleCodesCopy = function handleCodesCopy() {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee1() {
      return _regeneratorRuntime().wrap(function _callee1$(_context1) {
        while (1) switch (_context1.prev = _context1.next) {
          case 0:
            _context1.prev = 0;
            _context1.next = 3;
            return navigator.clipboard.writeText(recoveryCodes.join('\n'));
          case 3:
            _t.success(_t$1({
              id: 'recoveryCodes.save.toast.copied',
              message: "Copied"
            }));
            _context1.next = 9;
            break;
          case 6:
            _context1.prev = 6;
            _context1.t0 = _context1["catch"](0);
            _t.error(_t$1({
              id: 'recoveryCodes.save.toast.copyFailed',
              message: "Couldn't copy codes to clipboard"
            }));
          case 9:
          case "end":
            return _context1.stop();
        }
      }, _callee1, null, [[0, 6]]);
    }));
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t$1({
    id: 'recoveryCodes.save.title',
    message: "Save your backup codes!"
  })), /*#__PURE__*/wn.createElement(Text, null, _t$1({
    id: 'recoveryCodes.save.content',
    message: "This is the only time you will be able to access and save your backup codes."
  })), /*#__PURE__*/wn.createElement(InsetContainer, null, /*#__PURE__*/wn.createElement(CodeList, null, recoveryCodes.map(function (code, i) {
    return /*#__PURE__*/wn.createElement("li", {
      key: i
    }, /*#__PURE__*/wn.createElement("code", null, code));
  }))), /*#__PURE__*/wn.createElement(Flex, {
    gap: 24
  }, /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: handleCodesDownload
  }, _t$1({
    id: 'recoveryCodes.save.button.download',
    message: "Download file"
  })), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: handleCodesCopy
  }, _t$1({
    id: 'recoveryCodes.save.button.copyAll',
    message: "Copy all"
  }))), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleContinue
  }, _t$1({
    id: 'recoveryCodes.save.button.done',
    message: "Done"
  })));
};
var Select = He.select(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n  height: 47px;\n  box-sizing: border-box;\n  padding: 0 8px;\n  color: ", ";\n  font-family: ", ";\n  width: 80px;\n  font-size: 18px;\n"])), function (props) {
  return props.theme.inputs.backgroundColor;
}, function (props) {
  return props.theme.inputs.borderColor;
}, function (props) {
  return props.theme.inputs.borderRadius;
}, function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
});
var CountrySelector = function CountrySelector(_ref122) {
  var country = _ref122.country,
    setCountry = _ref122.setCountry;
  var countryFormatter = new Intl.DisplayNames(['en'], {
    type: 'region'
  });
  return /*#__PURE__*/wn.createElement(Select, {
    "data-testid": "select-test-id",
    name: "country-select",
    value: country,
    onChange: function onChange(e) {
      setCountry(e.target.value);
    }
  }, Object.entries(COUNTRIES_LIST).map(function (_ref123) {
    var _ref124 = _slicedToArray(_ref123, 2),
      countryCode = _ref124[0],
      countryNumber = _ref124[1];
    return /*#__PURE__*/wn.createElement("option", {
      key: countryCode,
      value: countryCode
    }, countryCode !== country ? "+".concat(countryNumber, " ").concat(countryFormatter.of(countryCode)) : "+".concat(countryNumber));
  }));
};
var formatNumber = function formatNumber(_ref125) {
  var parsePhoneNumber = _ref125.parsePhoneNumber,
    phoneNumber = _ref125.phoneNumber,
    country = _ref125.country;
  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
    var parsedPhoneNumber;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          _context10.prev = 0;
          _context10.next = 3;
          return Promise.race([parsePhoneNumber(phoneNumber, country), new Promise(function (done) {
            return setTimeout(function () {
              return done(undefined);
            }, 10000);
          })]);
        case 3:
          parsedPhoneNumber = _context10.sent;
          if (parsedPhoneNumber) {
            _context10.next = 6;
            break;
          }
          return _context10.abrupt("return", phoneNumber);
        case 6:
          return _context10.abrupt("return", parsedPhoneNumber.national);
        case 9:
          _context10.prev = 9;
          _context10.t0 = _context10["catch"](0);
          return _context10.abrupt("return", phoneNumber);
        case 12:
        case "end":
          return _context10.stop();
      }
    }, _callee10, null, [[0, 9]]);
  }));
};
var formatNumberToIncludeCountryCode = function formatNumberToIncludeCountryCode(_ref126) {
  var parsePhoneNumber = _ref126.parsePhoneNumber,
    phoneNumber = _ref126.phoneNumber,
    country = _ref126.country;
  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
    var code, fallbackNumber, fallback, parsedPhoneNumber;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          code = COUNTRIES_LIST[country];
          fallbackNumber = "+".concat(code).concat(phoneNumber);
          fallback = {
            isValid: true,
            number: fallbackNumber
          };
          _context11.prev = 3;
          _context11.next = 6;
          return Promise.race([parsePhoneNumber(phoneNumber, country), new Promise(function (done) {
            return setTimeout(function () {
              return done(undefined);
            }, 2000);
          })]);
        case 6:
          parsedPhoneNumber = _context11.sent;
          if (parsedPhoneNumber) {
            _context11.next = 9;
            break;
          }
          return _context11.abrupt("return", fallback);
        case 9:
          return _context11.abrupt("return", parsedPhoneNumber);
        case 12:
          _context11.prev = 12;
          _context11.t0 = _context11["catch"](3);
          return _context11.abrupt("return", fallback);
        case 15:
        case "end":
          return _context11.stop();
      }
    }, _callee11, null, [[3, 12]]);
  }));
};
var PhoneStyledInput = He(Input)(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral(["\n  flex-grow: 1;\n  min-width: 100px;\n"])));
var PhoneInput = function PhoneInput(_ref127) {
  var phone = _ref127.phone,
    setPhone = _ref127.setPhone,
    country = _ref127.country,
    setCountry = _ref127.setCountry,
    parsePhoneNumber = _ref127.parsePhoneNumber,
    hasPasskeys = _ref127.hasPasskeys;
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "row",
    wrap: "nowrap",
    justifyContent: "flex-start",
    alignContent: "stretch",
    alignItems: "center",
    gap: 8
  }, /*#__PURE__*/wn.createElement(CountrySelector, {
    country: country,
    setCountry: setCountry
  }), /*#__PURE__*/wn.createElement(PhoneStyledInput, Object.assign({
    name: 'phoneNumber',
    placeholder: "(123) 456-7890",
    id: "phone-input",
    autoComplete: hasPasskeys ? 'username webauthn' : undefined,
    value: phone,
    type: 'text',
    onChange: function onChange(e) {
      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        var userInput, national;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              userInput = e.target.value;
              _context12.next = 3;
              return formatNumber({
                parsePhoneNumber: parsePhoneNumber,
                phoneNumber: userInput,
                country: country
              });
            case 3:
              national = _context12.sent;
              if (!(userInput !== e.target.value)) {
                _context12.next = 6;
                break;
              }
              return _context12.abrupt("return");
            case 6:
              setPhone(national);
            case 7:
            case "end":
              return _context12.stop();
          }
        }, _callee12);
      }));
    },
    required: true
  }, hasPasskeys ? passwordManagerDisableAutofillProps : {})));
};
var DEFAULT_COUNTRY_CODE = 'US';
var InvalidPhoneNumberError = /*#__PURE__*/function (_StytchSDKError) {
  function InvalidPhoneNumberError() {
    _classCallCheck(this, InvalidPhoneNumberError);
    return _callSuper(this, InvalidPhoneNumberError, ['InvalidPhoneNumberError', 'Invalid phone number']);
  }
  _inherits(InvalidPhoneNumberError, _StytchSDKError);
  return _createClass(InvalidPhoneNumberError);
}(StytchSDKError);
var SMSOTPEnrollScreen = function SMSOTPEnrollScreen() {
  var _a, _b;
  var stytchClient = useStytch();
  var _useGlobalReducer63 = useGlobalReducer(),
    _useGlobalReducer64 = _slicedToArray(_useGlobalReducer63, 2),
    state = _useGlobalReducer64[0],
    dispatch = _useGlobalReducer64[1];
  var _useLingui38 = useLingui(),
    _t = _useLingui38._;
  var _useConfig3 = useConfig(),
    smsOtpOptions = _useConfig3.smsOtpOptions;
  var _state$mfa$smsOtp = state.mfa.smsOtp,
    isSending = _state$mfa$smsOtp.isSending,
    sendError = _state$mfa$smsOtp.sendError,
    enrolledNumber = _state$mfa$smsOtp.enrolledNumber;
  var _state$mfa$primaryInf2 = state.mfa.primaryInfo,
    memberId = _state$mfa$primaryInf2.memberId,
    organizationId = _state$mfa$primaryInf2.organizationId;
  var _wn$useState = wn.useState((_a = enrolledNumber === null || enrolledNumber === void 0 ? void 0 : enrolledNumber.countryCode) !== null && _a !== void 0 ? _a : DEFAULT_COUNTRY_CODE),
    _wn$useState2 = _slicedToArray(_wn$useState, 2),
    countryCode = _wn$useState2[0],
    setCountryCode = _wn$useState2[1];
  var _wn$useState3 = wn.useState((_b = enrolledNumber === null || enrolledNumber === void 0 ? void 0 : enrolledNumber.phoneNumber) !== null && _b !== void 0 ? _b : ''),
    _wn$useState4 = _slicedToArray(_wn$useState3, 2),
    phoneNumber = _wn$useState4[0],
    setPhoneNumber = _wn$useState4[1];
  var errorMessage = wn.useMemo(function () {
    if (!sendError) return undefined;
    if (sendError instanceof InvalidPhoneNumberError) {
      return _t({
        id: 'error.invalidPhoneNumber',
        message: "Phone number format is invalid. Ensure the phone number is in the E.164 format."
      });
    }
    return getTranslatedError(sendError, _t);
  }, [sendError, _t]);
  var parsePhoneNumber = function parsePhoneNumber(phoneNumber, countryCode) {
    return readB2BInternals(stytchClient).clientsideServices.parsedPhoneNumber({
      phoneNumber: phoneNumber,
      regionCode: countryCode
    });
  };
  var _useMutate8 = useMutate('stytch.otps.sms.send', function (_, _ref128) {
      var _ref128$arg = _ref128.arg,
        parsedNumber = _ref128$arg.parsedNumber,
        locale = _ref128$arg.locale;
      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              return _context13.abrupt("return", stytchClient.otps.sms.send({
                mfa_phone_number: parsedNumber,
                member_id: memberId,
                organization_id: organizationId,
                locale: locale
              }));
            case 1:
            case "end":
              return _context13.stop();
          }
        }, _callee13);
      }));
    }, {
      onSuccess: function onSuccess(response) {
        dispatch({
          type: 'sms_otp/send_success',
          response: response,
          countryCode: countryCode,
          phoneNumber: phoneNumber,
          formattedPhoneNumber: "+".concat(COUNTRIES_LIST[countryCode], " ").concat(phoneNumber)
        });
      },
      onError: function onError(error) {
        dispatch({
          type: 'sms_otp/send_error',
          error: error
        });
      }
    }),
    sendSms = _useMutate8.trigger;
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
      var parsedNumber;
      return _regeneratorRuntime().wrap(function _callee14$(_context14) {
        while (1) switch (_context14.prev = _context14.next) {
          case 0:
            e.preventDefault();
            dispatch({
              type: 'sms_otp/send'
            });
            _context14.prev = 2;
            _context14.next = 5;
            return formatNumberToIncludeCountryCode({
              parsePhoneNumber: parsePhoneNumber,
              phoneNumber: phoneNumber,
              country: countryCode
            });
          case 5:
            parsedNumber = _context14.sent;
            if (parsedNumber.isValid) {
              _context14.next = 8;
              break;
            }
            throw new InvalidPhoneNumberError();
          case 8:
            _context14.next = 10;
            return sendSms({
              parsedNumber: parsedNumber.number,
              locale: smsOtpOptions === null || smsOtpOptions === void 0 ? void 0 : smsOtpOptions.locale
            });
          case 10:
            _context14.next = 15;
            break;
          case 12:
            _context14.prev = 12;
            _context14.t0 = _context14["catch"](2);
            dispatch({
              type: 'sms_otp/send_error',
              error: _context14.t0
            });
          case 15:
          case "end":
            return _context14.stop();
        }
      }, _callee14, null, [[2, 12]]);
    }));
  };
  return /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'mfa.smsEnrollment.title',
    message: "Enter your phone number to set up Multi-Factor Authentication"
  })), /*#__PURE__*/wn.createElement(Text, null, _t({
    id: 'mfa.smsEnrollment.content',
    message: "Your organization requires an additional form of verification to make your account more secure."
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column"
  }, /*#__PURE__*/wn.createElement(PhoneInput, {
    country: countryCode,
    setCountry: setCountryCode,
    phone: phoneNumber,
    setPhone: setPhoneNumber,
    parsePhoneNumber: parsePhoneNumber
  }), errorMessage && /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: errorMessage
  })), /*#__PURE__*/wn.createElement(SubmitButton, {
    text: _t({
      id: 'button.continue',
      message: "Continue"
    }),
    isSubmitting: isSending,
    disabled: !phoneNumber
  })));
};
var SMSOTPEntryScreen = function SMSOTPEntryScreen() {
  var _a;
  var stytchClient = useStytch();
  var _useConfig4 = useConfig(),
    sessionDurationMinutes = _useConfig4.sessionOptions.sessionDurationMinutes,
    smsOtpOptions = _useConfig4.smsOtpOptions;
  var _useLingui39 = useLingui(),
    _t$1 = _useLingui39._;
  var _useGlobalReducer65 = useGlobalReducer(),
    _useGlobalReducer66 = _slicedToArray(_useGlobalReducer65, 2),
    state = _useGlobalReducer66[0],
    dispatch = _useGlobalReducer66[1];
  var _state$mfa = state.mfa,
    isEnrolling = _state$mfa.isEnrolling,
    _state$mfa$smsOtp2 = _state$mfa.smsOtp,
    codeExpiration = _state$mfa$smsOtp2.codeExpiration,
    formattedDestination = _state$mfa$smsOtp2.formattedDestination;
  var _state$mfa$primaryInf3 = state.mfa.primaryInfo,
    enrolledMfaMethods = _state$mfa$primaryInf3.enrolledMfaMethods,
    memberId = _state$mfa$primaryInf3.memberId,
    memberPhoneNumber = _state$mfa$primaryInf3.memberPhoneNumber,
    organizationId = _state$mfa$primaryInf3.organizationId,
    organizationMfaOptionsSupported = _state$mfa$primaryInf3.organizationMfaOptionsSupported;
  var _useMutate9 = useMutate('stytch.otps.sms.send', function (_, _ref129) {
      var _ref129$arg = _ref129.arg,
        memberId = _ref129$arg.memberId,
        organizationId = _ref129$arg.organizationId,
        locale = _ref129$arg.locale;
      dispatch({
        type: 'sms_otp/send'
      });
      return stytchClient.otps.sms.send({
        member_id: memberId,
        organization_id: organizationId,
        locale: locale
      });
    }, {
      onSuccess: function onSuccess(response) {
        dispatch({
          type: 'sms_otp/send_success',
          response: response
        });
      },
      onError: function onError(error) {
        var message = getTranslatedError(error, _t$1);
        if (message) {
          _t.error(message);
        }
        dispatch({
          type: 'sms_otp/send_error',
          error: message
        });
      },
      throwOnError: true
    }),
    sendSms = _useMutate9.trigger,
    isSending = _useMutate9.isMutating,
    sendError = _useMutate9.error;
  var _useMutate0 = useMutate('stytch.otps.sms.authenticate', function (_, _ref130) {
      var _ref130$arg = _ref130.arg,
        otp = _ref130$arg.otp,
        memberId = _ref130$arg.memberId,
        organizationId = _ref130$arg.organizationId,
        sessionDurationMinutes = _ref130$arg.sessionDurationMinutes;
      return stytchClient.otps.sms.authenticate({
        code: otp,
        member_id: memberId,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess() {
        dispatch({
          type: 'sms_otp/authenticate_success'
        });
      }
    }),
    authenticate = _useMutate0.trigger,
    isAuthenticating = _useMutate0.isMutating,
    authenticateError = _useMutate0.error;
  var shouldCreate = codeExpiration === null && !isSending && !sendError;
  p$1(function () {
    if (shouldCreate) {
      sendSms({
        memberId: memberId,
        organizationId: organizationId,
        locale: smsOtpOptions === null || smsOtpOptions === void 0 ? void 0 : smsOtpOptions.locale
      });
    }
  }, [memberId, organizationId, sendSms, shouldCreate, smsOtpOptions === null || smsOtpOptions === void 0 ? void 0 : smsOtpOptions.locale]);
  p$1(function () {
    if (!formattedDestination && memberPhoneNumber) {
      var handleFormatNumber = function handleFormatNumber() {
        return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
          var parsePhoneNumber, national;
          return _regeneratorRuntime().wrap(function _callee15$(_context15) {
            while (1) switch (_context15.prev = _context15.next) {
              case 0:
                parsePhoneNumber = function parsePhoneNumber(phoneNumber) {
                  return readB2BInternals(stytchClient).clientsideServices.parsedPhoneNumber({
                    phoneNumber: phoneNumber
                  });
                };
                _context15.next = 3;
                return formatNumber({
                  parsePhoneNumber: parsePhoneNumber,
                  phoneNumber: memberPhoneNumber
                });
              case 3:
                national = _context15.sent;
                dispatch({
                  type: 'sms_otp/format_destination',
                  formattedPhoneNumber: national
                });
              case 5:
              case "end":
                return _context15.stop();
            }
          }, _callee15);
        }));
      };
      handleFormatNumber();
    }
  }, [dispatch, formattedDestination, stytchClient, memberPhoneNumber]);
  var isTotpAvailable = F$1(function () {
    return !isEnrolling && enrolledMfaMethods.includes(B2BMFAProducts.totp) && (organizationMfaOptionsSupported.length === 0 || organizationMfaOptionsSupported.includes(B2BMFAProducts.totp));
  }, [enrolledMfaMethods, isEnrolling, organizationMfaOptionsSupported]);
  var errorMessage = authenticateError ? _t$1({
    id: 'error.passcodeInvalid',
    message: "Invalid passcode, please try again."
  }) : undefined;
  var canGoBack = F$1(function () {
    return isEnrolling || enrolledMfaMethods.length === 0 || organizationMfaOptionsSupported.length > 0 && !enrolledMfaMethods.some(function (enrolledMethod) {
      return organizationMfaOptionsSupported.includes(enrolledMethod);
    });
  }, [enrolledMfaMethods, isEnrolling, organizationMfaOptionsSupported]);
  var handleSubmit = function handleSubmit(otp) {
    authenticate({
      otp: otp,
      memberId: memberId,
      organizationId: organizationId,
      sessionDurationMinutes: sessionDurationMinutes
    });
  };
  var handleSwitchToTotp = function handleSwitchToTotp() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  var handleResendOTP = function handleResendOTP() {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
      return _regeneratorRuntime().wrap(function _callee16$(_context16) {
        while (1) switch (_context16.prev = _context16.next) {
          case 0:
            _context16.next = 2;
            return sendSms({
              memberId: memberId,
              organizationId: organizationId,
              locale: smsOtpOptions === null || smsOtpOptions === void 0 ? void 0 : smsOtpOptions.locale
            });
          case 2:
          case "end":
            return _context16.stop();
        }
      }, _callee16);
    }));
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'mfa/start_enrollment',
      method: B2BMFAProducts.smsOtp
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, canGoBack && /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleBack
  }), codeExpiration !== null ? (/*#__PURE__*/wn.createElement(SentOTPEntry, {
    isSubmitting: isAuthenticating,
    onSubmit: handleSubmit,
    errorMessage: errorMessage,
    expiration: codeExpiration,
    formattedDestination: (_a = formattedDestination !== null && formattedDestination !== void 0 ? formattedDestination : memberPhoneNumber) !== null && _a !== void 0 ? _a : '',
    resendOTP: handleResendOTP
  })) : (/*#__PURE__*/wn.createElement(LoadingScreen, null)), isTotpAvailable && (/*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/wn.createElement(Divider, null), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleSwitchToTotp
  }, _t$1({
    id: 'mfa.methods.authenticatorApp',
    message: "Use an authenticator app"
  })))));
};
var useSsoDiscoveryConnection = function useSsoDiscoveryConnection() {
  var stytch = useStytch();
  return useMutate('stytch.sso.discoverConnections', function (_key, _ref131) {
    var emailAddress = _ref131.arg.emailAddress;
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
      return _regeneratorRuntime().wrap(function _callee17$(_context17) {
        while (1) switch (_context17.prev = _context17.next) {
          case 0:
            _context17.next = 2;
            return stytch.sso.discoverConnections(emailAddress);
          case 2:
            return _context17.abrupt("return", _context17.sent);
          case 3:
          case "end":
            return _context17.stop();
        }
      }, _callee17);
    }));
  }, {
    throwOnError: true
  });
};
var SSODiscoveryEmail = function SSODiscoveryEmail() {
  var _useGlobalReducer67 = useGlobalReducer(),
    _useGlobalReducer68 = _slicedToArray(_useGlobalReducer67, 2),
    dispatch = _useGlobalReducer68[1];
  var _h$61 = h$2(''),
    _h$62 = _slicedToArray(_h$61, 2),
    email = _h$62[0],
    setEmail = _h$62[1];
  var _useLingui40 = useLingui(),
    _t = _useLingui40._;
  var _h$63 = h$2(null),
    _h$64 = _slicedToArray(_h$63, 2),
    error = _h$64[0],
    setError = _h$64[1];
  var _h$65 = h$2(false),
    _h$66 = _slicedToArray(_h$65, 2),
    isLoading = _h$66[0],
    setIsLoading = _h$66[1];
  var _useSsoDiscoveryConne = useSsoDiscoveryConnection(),
    trigger = _useSsoDiscoveryConne.trigger;
  var stytch = useStytch();
  var _useConfig5 = useConfig(),
    ssoOptions = _useConfig5.ssoOptions;
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
      var tryGetConnections, connections, _connections, connection;
      return _regeneratorRuntime().wrap(function _callee19$(_context19) {
        while (1) switch (_context19.prev = _context19.next) {
          case 0:
            e.preventDefault();
            setError(null);
            tryGetConnections = function tryGetConnections() {
              return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
                var _a, response;
                return _regeneratorRuntime().wrap(function _callee18$(_context18) {
                  while (1) switch (_context18.prev = _context18.next) {
                    case 0:
                      _context18.prev = 0;
                      _context18.next = 3;
                      return trigger({
                        emailAddress: email
                      });
                    case 3:
                      response = _context18.sent;
                      if (response) {
                        _context18.next = 6;
                        break;
                      }
                      return _context18.abrupt("return", []);
                    case 6:
                      return _context18.abrupt("return", response.connections);
                    case 9:
                      _context18.prev = 9;
                      _context18.t0 = _context18["catch"](0);
                      setError((_a = extractErrorMessage(_context18.t0, _t({
                        id: 'ssoDiscovery.email.error.unknown',
                        message: "Something went wrong. Try again later or contact your admin for help."
                      }))) !== null && _a !== void 0 ? _a : null);
                    case 12:
                    case "end":
                      return _context18.stop();
                  }
                }, _callee18, null, [[0, 9]]);
              }));
            };
            _context19.prev = 3;
            setIsLoading(true);
            _context19.next = 7;
            return tryGetConnections();
          case 7:
            connections = _context19.sent;
            if (!((connections === null || connections === void 0 ? void 0 : connections.length) === 1)) {
              _context19.next = 13;
              break;
            }
            _connections = _slicedToArray(connections, 1), connection = _connections[0];
            _context19.next = 12;
            return stytch.sso.start({
              connection_id: connection.connection_id,
              login_redirect_url: ssoOptions === null || ssoOptions === void 0 ? void 0 : ssoOptions.loginRedirectURL,
              signup_redirect_url: ssoOptions === null || ssoOptions === void 0 ? void 0 : ssoOptions.signupRedirectURL
            });
          case 12:
            return _context19.abrupt("return");
          case 13:
            setIsLoading(false);
            if (connections) {
              dispatch({
                type: 'set_sso_discovery_state',
                connections: connections
              });
            }
            _context19.next = 21;
            break;
          case 17:
            _context19.prev = 17;
            _context19.t0 = _context19["catch"](3);
            setIsLoading(false);
            throw _context19.t0;
          case 21:
          case "end":
            return _context19.stop();
        }
      }, _callee19, null, [[3, 17]]);
    }));
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'navigate_back'
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleBack
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'ssoDiscovery.email.title',
    message: "Enter your email to continue"
  })), /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    minHeight: 52
  }, /*#__PURE__*/wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  }), error && /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: error
  })), /*#__PURE__*/wn.createElement(SubmitButton, {
    isSubmitting: isLoading,
    text: _t({
      id: 'button.continue',
      message: "Continue"
    })
  }))));
};
var SSODiscoveryMenu = function SSODiscoveryMenu() {
  var _useGlobalReducer69 = useGlobalReducer(),
    _useGlobalReducer70 = _slicedToArray(_useGlobalReducer69, 2),
    state = _useGlobalReducer70[0],
    dispatch = _useGlobalReducer70[1];
  var _useLingui41 = useLingui(),
    _t = _useLingui41._;
  var handleBack = function handleBack() {
    dispatch({
      type: 'navigate_back'
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleBack
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'ssoDiscovery.title',
    message: "Select a connection to continue"
  })), /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, state.formState.ssoDiscoveryState.connections.map(function (connection) {
    return /*#__PURE__*/wn.createElement(SSOButton, {
      key: connection.connection_id,
      display_name: connection.display_name,
      connection_id: connection.connection_id,
      identity_provider: connection.identity_provider
    });
  })));
};
var SSODiscoveryFallback = function SSODiscoveryFallback() {
  var _useGlobalReducer71 = useGlobalReducer(),
    _useGlobalReducer72 = _slicedToArray(_useGlobalReducer71, 2),
    dispatch = _useGlobalReducer72[1];
  var _h$67 = h$2(''),
    _h$68 = _slicedToArray(_h$67, 2),
    slug = _h$68[0],
    setSlug = _h$68[1];
  var _h$69 = h$2(null),
    _h$70 = _slicedToArray(_h$69, 2),
    error = _h$70[0],
    setError = _h$70[1];
  var _h$71 = h$2(false),
    _h$72 = _slicedToArray(_h$71, 2),
    isSubmitting = _h$72[0],
    setIsSubmitting = _h$72[1];
  var stytchClient = useStytch();
  var _useConfig6 = useConfig(),
    ssoOptions = _useConfig6.ssoOptions;
  var _useLingui42 = useLingui(),
    _t = _useLingui42._;
  var _useMutate1 = useMutate('stytch.organization.getBySlug', function (_, _ref132) {
      var slug = _ref132.arg.slug;
      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {
        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
          while (1) switch (_context20.prev = _context20.next) {
            case 0:
              return _context20.abrupt("return", stytchClient.organization.getBySlug({
                organization_slug: slug
              }));
            case 1:
            case "end":
              return _context20.stop();
          }
        }, _callee20);
      }));
    }, {
      onError: function onError() {
        setError(_t({
          id: 'ssoDiscovery.fallback.error.unknown',
          message: "An error occurred. Please try again."
        }));
        setIsSubmitting(false);
      }
    }),
    lookupOrganization = _useMutate1.trigger;
  var handleSubmit = function handleSubmit(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
      var result, organization, _organization$sso_act, connection;
      return _regeneratorRuntime().wrap(function _callee21$(_context21) {
        while (1) switch (_context21.prev = _context21.next) {
          case 0:
            e.preventDefault();
            setError(null);
            setIsSubmitting(true);
            _context21.next = 5;
            return lookupOrganization({
              slug: slug
            });
          case 5:
            result = _context21.sent;
            if (!result) {
              _context21.next = 21;
              break;
            }
            organization = result.organization;
            if (!(organization === null)) {
              _context21.next = 13;
              break;
            }
            setError(_t({
              id: 'ssoDiscovery.fallback.error.orgNotFound',
              message: "Organization not found. Please try again."
            }));
            setIsSubmitting(false);
            _context21.next = 21;
            break;
          case 13:
            if (!(organization.sso_active_connections.length === 1)) {
              _context21.next = 19;
              break;
            }
            _organization$sso_act = _slicedToArray(organization.sso_active_connections, 1), connection = _organization$sso_act[0];
            _context21.next = 17;
            return stytchClient.sso.start({
              connection_id: connection.connection_id,
              login_redirect_url: ssoOptions === null || ssoOptions === void 0 ? void 0 : ssoOptions.loginRedirectURL,
              signup_redirect_url: ssoOptions === null || ssoOptions === void 0 ? void 0 : ssoOptions.signupRedirectURL
            });
          case 17:
            _context21.next = 21;
            break;
          case 19:
            dispatch({
              type: 'set_organization',
              organization: organization
            });
            dispatch({
              type: 'transition',
              screen: AppScreens$1.Main
            });
          case 21:
          case "end":
            return _context21.stop();
        }
      }, _callee21);
    }));
  };
  var handleTryAnotherMethod = function handleTryAnotherMethod() {
    dispatch({
      type: 'transition',
      screen: AppScreens$1.Main
    });
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'navigate_back'
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleBack
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t({
    id: 'ssoDiscovery.fallback.title',
    message: "Sorry, we couldn't find any connections."
  })), /*#__PURE__*/wn.createElement(Text, null, _t({
    id: 'ssoDiscovery.fallback.content',
    message: "Please input the Organization's unique slug to continue. If you don't know the unique slug, log in through another method to view all of your available Organizations."
  })), /*#__PURE__*/wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    minHeight: 52
  }, /*#__PURE__*/wn.createElement(Input, {
    value: slug,
    onChange: function onChange(e) {
      return setSlug(e.target.value);
    },
    placeholder: _t({
      id: 'formField.orgSlug.placeholder',
      message: "Enter org slug"
    })
  }), error && /*#__PURE__*/wn.createElement(ErrorText, {
    errorMessage: error
  })), /*#__PURE__*/wn.createElement(SubmitButton, {
    text: _t({
      id: 'button.continue',
      message: "Continue"
    }),
    disabled: !slug,
    isSubmitting: isSubmitting
  }))), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleTryAnotherMethod
  }, _t({
    id: 'ssoDiscovery.fallback.button.reset',
    message: "Try another log in method"
  })));
};
var CopyIcon = function CopyIcon() {
  return /*#__PURE__*/y("svg", {
    width: "25",
    height: "24",
    viewBox: "0 0 25 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/y("path", {
    d: "M17 1H5C3.9 1 3 1.9 3 3V17H5V3H17V1ZM20 5H9C7.9 5 7 5.9 7 7V21C7 22.1 7.9 23 9 23H20C21.1 23 22 22.1 22 21V7C22 5.9 21.1 5 20 5ZM20 21H9V7H20V21Z",
    fill: "currentColor"
  }));
};
var Copy = CreateIcon(CopyIcon);
var CopyButton = He.button(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral(["\n  all: unset;\n  flex: 0 0 24px;\n  height: 28px;\n  opacity: 0;\n  :focus {\n    opacity: 1;\n  }\n"])));
var CodeContainer = He(InsetContainer)(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral(["\n  cursor: pointer;\n  :hover ", " {\n    opacity: 1;\n  }\n"])), CopyButton);
var Spacer = He.div(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral(["\n  flex: 0 1 24px;\n"])));
var Code = He.code(_templateObject72 || (_templateObject72 = _taggedTemplateLiteral(["\n  white-space: pre-wrap;\n  align-self: center;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 1ch;\n"])));
var TOTPEnrollManualScreen = function TOTPEnrollManualScreen() {
  var _useGlobalReducer73 = useGlobalReducer(),
    _useGlobalReducer74 = _slicedToArray(_useGlobalReducer73, 2),
    state = _useGlobalReducer74[0],
    dispatch = _useGlobalReducer74[1];
  var _useLingui43 = useLingui(),
    _t$1 = _useLingui43._;
  var secret = state.mfa.totp.enrollment.secret;
  var displaySecret = secret.toLowerCase();
  var secretChunked = displaySecret.split(/(.{4})/g).filter(Boolean);
  var handleShowQRCode = function handleShowQRCode() {
    dispatch({
      type: 'totp/show_code',
      method: 'qr'
    });
  };
  var handleContinue = function handleContinue() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  var handleCodeCopy = function handleCodeCopy(e) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {
      return _regeneratorRuntime().wrap(function _callee22$(_context22) {
        while (1) switch (_context22.prev = _context22.next) {
          case 0:
            e.stopPropagation();
            _context22.prev = 1;
            _context22.next = 4;
            return navigator.clipboard.writeText(displaySecret);
          case 4:
            _t.success(_t$1({
              id: 'mfa.totpEnrollment.toast.codeCopied',
              message: "Code copied"
            }));
            _context22.next = 10;
            break;
          case 7:
            _context22.prev = 7;
            _context22.t0 = _context22["catch"](1);
            _t.error(_t$1({
              id: 'mfa.totpEnrollment.toast.copyFailed',
              message: "Couldn't copy code to clipboard"
            }));
          case 10:
          case "end":
            return _context22.stop();
        }
      }, _callee22, null, [[1, 7]]);
    }));
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleShowQRCode
  }), /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t$1({
    id: 'mfa.totpEnrollment.title',
    message: "Having trouble scanning the QR code?"
  })), /*#__PURE__*/wn.createElement(Text, null, _t$1({
    id: 'mfa.totpEnrollment.content',
    message: "Click to copy the code below. Enter into your authenticator app to link your account."
  })), /*#__PURE__*/wn.createElement(CodeContainer, {
    onClick: handleCodeCopy
  }, /*#__PURE__*/wn.createElement(Spacer, null), /*#__PURE__*/wn.createElement(Code, null, secretChunked.map(function (part, i) {
    return /*#__PURE__*/wn.createElement("span", {
      key: i
    }, part);
  })), /*#__PURE__*/wn.createElement(CopyButton, {
    type: "button",
    onClick: handleCodeCopy,
    "aria-label": _t$1({
      id: 'mfa.totpEnrollment.copyCode.ariaLabel',
      message: "Copy code"
    })
  }, /*#__PURE__*/wn.createElement(Copy, null))), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: handleContinue
  }, _t$1({
    id: 'button.continue',
    message: "Continue"
  })), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleShowQRCode
  }, _t$1({
    id: 'button.totpQrRetry',
    message: "Try to scan the QR code again"
  })));
};
var QRCodeImg = He.img(_templateObject73 || (_templateObject73 = _taggedTemplateLiteral(["\n  margin: 0 auto;\n"])));
var TOTPEnrollQRScreen = function TOTPEnrollQRScreen() {
  var stytchClient = useStytch();
  var _useGlobalReducer75 = useGlobalReducer(),
    _useGlobalReducer76 = _slicedToArray(_useGlobalReducer75, 2),
    state = _useGlobalReducer76[0],
    dispatch = _useGlobalReducer76[1];
  var _useLingui44 = useLingui(),
    _t$1 = _useLingui44._;
  var _state$mfa$totp = state.mfa.totp,
    createError = _state$mfa$totp.createError,
    enrollment = _state$mfa$totp.enrollment,
    isCreating = _state$mfa$totp.isCreating;
  var _state$mfa$primaryInf4 = state.mfa.primaryInfo,
    memberId = _state$mfa$primaryInf4.memberId,
    organizationId = _state$mfa$primaryInf4.organizationId;
  var _useMutate10 = useMutate('stytch.totp.create', function (_, _ref133) {
      var _ref133$arg = _ref133.arg,
        memberId = _ref133$arg.memberId,
        organizationId = _ref133$arg.organizationId;
      dispatch({
        type: 'totp/create'
      });
      return stytchClient.totp.create({
        member_id: memberId,
        organization_id: organizationId
      });
    }, {
      onSuccess: function onSuccess(response) {
        dispatch({
          type: 'totp/create_success',
          response: response,
          memberId: memberId,
          organizationId: organizationId
        });
      },
      onError: function onError(error) {
        var message = getTranslatedError(error, _t$1);
        if (message) {
          _t.error(message);
        }
        dispatch({
          type: 'totp/create_error',
          error: error
        });
      }
    }),
    createTotp = _useMutate10.trigger;
  var shouldCreate = !enrollment && !isCreating && !createError;
  p$1(function () {
    if (shouldCreate) {
      createTotp({
        memberId: memberId,
        organizationId: organizationId
      });
    }
  }, [createTotp, memberId, organizationId, shouldCreate]);
  var handleShowManualCode = function handleShowManualCode() {
    dispatch({
      type: 'totp/show_code',
      method: 'manual'
    });
  };
  var handleContinue = function handleContinue() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header"
  }, _t$1({
    id: 'totp.setupQr.title',
    message: "Scan the QR code to link your authenticator app"
  })), /*#__PURE__*/wn.createElement(Text, null, _t$1({
    id: 'totp.setupQr.content',
    message: "Your organization requires an additional form of verification to make your account more secure. If you don\u2019t have an authenticator app, you\u2019ll need to install one first."
  })), !!enrollment ? (/*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/wn.createElement(QRCodeImg, {
    alt: _t$1({
      id: 'mfaTotpEnrollment.qrAltText',
      message: "QR code for TOTP enrollment"
    }),
    src: enrollment.qrCode
  }), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleShowManualCode
  }, _t$1({
    id: 'button.totpQrManual',
    message: "Having trouble scanning?"
  })), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: handleContinue
  }, _t$1({
    id: 'button.continue',
    message: "Continue"
  })))) : (/*#__PURE__*/wn.createElement(LoadingScreen, null)));
};
var TOTPEntry = function TOTPEntry(_ref134) {
  var helperContent = _ref134.helperContent,
    isSubmitting = _ref134.isSubmitting,
    onSubmit = _ref134.onSubmit,
    errorMessage = _ref134.errorMessage;
  var _useLingui45 = useLingui(),
    _t = _useLingui45._;
  return /*#__PURE__*/wn.createElement(OTPEntry, {
    header: _t({
      id: 'totp.title',
      message: "Enter verification code"
    }),
    instruction: _t({
      id: 'totp.content',
      message: "Enter the 6-digit code from your authenticator app."
    }),
    helperContent: helperContent,
    isSubmitting: isSubmitting,
    onSubmit: onSubmit,
    errorMessage: errorMessage
  });
};
var TOTPEntryScreen = function TOTPEntryScreen() {
  var stytchClient = useStytch();
  var _useConfig7 = useConfig(),
    sessionDurationMinutes = _useConfig7.sessionOptions.sessionDurationMinutes;
  var _useLingui46 = useLingui(),
    _t = _useLingui46._;
  var _useGlobalReducer77 = useGlobalReducer(),
    _useGlobalReducer78 = _slicedToArray(_useGlobalReducer77, 2),
    state = _useGlobalReducer78[0],
    dispatch = _useGlobalReducer78[1];
  var isEnrolling = state.mfa.isEnrolling;
  var _state$mfa$primaryInf5 = state.mfa.primaryInfo,
    enrolledMfaMethods = _state$mfa$primaryInf5.enrolledMfaMethods,
    memberId = _state$mfa$primaryInf5.memberId,
    organizationId = _state$mfa$primaryInf5.organizationId,
    organizationMfaOptionsSupported = _state$mfa$primaryInf5.organizationMfaOptionsSupported;
  var _useMutate11 = useMutate('stytch.totp.authenticate', function (_, _ref135) {
      var _ref135$arg = _ref135.arg,
        memberId = _ref135$arg.memberId,
        organizationId = _ref135$arg.organizationId,
        otp = _ref135$arg.otp,
        sessionDurationMinutes = _ref135$arg.sessionDurationMinutes;
      return stytchClient.totp.authenticate({
        code: otp,
        member_id: memberId,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess() {
        dispatch({
          type: 'totp/authenticate_success'
        });
      }
    }),
    authenticate = _useMutate11.trigger,
    isAuthenticating = _useMutate11.isMutating,
    authenticateError = _useMutate11.error;
  var isSmsOtpAvailable = F$1(function () {
    return !isEnrolling && enrolledMfaMethods.includes(B2BMFAProducts.smsOtp) && (organizationMfaOptionsSupported.length === 0 || organizationMfaOptionsSupported.includes(B2BMFAProducts.smsOtp));
  }, [enrolledMfaMethods, isEnrolling, organizationMfaOptionsSupported]);
  var errorMessage = authenticateError ? _t({
    id: 'error.passcodeInvalid',
    message: "Invalid passcode, please try again."
  }) : undefined;
  var canGoBack = isEnrolling;
  var handleSubmit = function handleSubmit(otp) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {
      return _regeneratorRuntime().wrap(function _callee23$(_context23) {
        while (1) switch (_context23.prev = _context23.next) {
          case 0:
            authenticate({
              memberId: memberId,
              organizationId: organizationId,
              otp: otp,
              sessionDurationMinutes: sessionDurationMinutes
            });
          case 1:
          case "end":
            return _context23.stop();
        }
      }, _callee23);
    }));
  };
  var handleSwitchToRecoveryCode = function handleSwitchToRecoveryCode() {
    dispatch({
      type: 'recovery_code/navigate_to_entry'
    });
  };
  var handleSwitchToSms = function handleSwitchToSms() {
    dispatch({
      type: 'sms_otp/navigate_to_entry'
    });
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'totp/show_code'
    });
  };
  var helperContent = !isEnrolling ? (/*#__PURE__*/wn.createElement(Trans, {
    id: "mfa.totpEntry.useBackupCode",
    message: "Can\u2019t access your authenticator app? <backupCodeLink>Use a backup code</backupCodeLink>",
    components: {
      backupCodeLink: /*#__PURE__*/wn.createElement(InlineButton, {
        onClick: handleSwitchToRecoveryCode
      })
    }
  })) : _t({
    id: 'mfa.totpEntry.getNewCode',
    message: "If the verification code doesn\u2019t work, go back to your authenticator app to get a new code."
  });
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, canGoBack && /*#__PURE__*/wn.createElement(BackArrow, {
    onClick: handleBack
  }), /*#__PURE__*/wn.createElement(TOTPEntry, {
    helperContent: helperContent,
    isSubmitting: isAuthenticating,
    onSubmit: handleSubmit,
    errorMessage: errorMessage
  }), isSmsOtpAvailable && (/*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/wn.createElement(Divider, null), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleSwitchToSms
  }, _t({
    id: 'mfa.totpEntry.switchToSms',
    message: "Text me a code instead"
  })))));
};
var SuccessIcon = function SuccessIcon() {
  return /*#__PURE__*/y("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/y("path", {
    d: "M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM8 15L3 10L4.41 8.59L8 12.17L15.59 4.58L17 6L8 15Z",
    fill: "#0F4447"
  }));
};
var ErrorIcon = function ErrorIcon() {
  return /*#__PURE__*/y("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/y("path", {
    d: "M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM11 15H9V13H11V15ZM11 11H9V5H11V11Z",
    fill: "#590607"
  }));
};
var baseStyles = {
  display: 'flex',
  gap: '8px',
  padding: '8px',
  fontSize: '14px',
  borderRadius: '4px'
};
var successStyles = Object.assign(Object.assign({}, baseStyles), {
  background: '#ECFFF5',
  boxShadow: '0px 5px 10px rgba(15, 68, 71, 0.18)',
  color: '#0F4447'
});
var errorStyles = Object.assign(Object.assign({}, baseStyles), {
  background: '#FFEEEC',
  boxShadow: '0px 5px 10px rgba(89, 6, 7, 0.2)',
  color: '#590607'
});
var Snackbar = function Snackbar() {
  return /*#__PURE__*/wn.createElement(Ie, {
    containerStyle: {
      position: 'sticky',
      marginTop: '4px',
      marginBottom: '24px'
    },
    toastOptions: {
      success: {
        style: successStyles,
        icon: /*#__PURE__*/wn.createElement(SuccessIcon, null)
      },
      error: {
        style: errorStyles,
        icon: /*#__PURE__*/wn.createElement(ErrorIcon, null)
      }
    }
  });
};
var OuterContainer = He.div(_templateObject74 || (_templateObject74 = _taggedTemplateLiteral(["\n  width: ", ";\n  font-family: ", ";\n  box-sizing: border-box;\n  * {\n    box-sizing: content-box;\n  }\n  background-color: ", ";\n  border: ", ";\n  border-radius: ", ";\n  border-bottom-left-radius: ", ";\n  border-bottom-right-radius: ", ";\n  border-bottom: ", ";\n"])), function (_ref136) {
  var theme = _ref136.theme;
  return theme.container.width;
}, function (_ref137) {
  var theme = _ref137.theme;
  return theme.typography.fontFamily;
}, function (_ref138) {
  var theme = _ref138.theme;
  return theme.container.backgroundColor;
}, function (_ref139) {
  var theme = _ref139.theme;
  return theme.container.border;
}, function (_ref140) {
  var theme = _ref140.theme;
  return theme.container.borderRadius;
}, function (_ref141) {
  var theme = _ref141.theme,
    displayWatermark = _ref141.displayWatermark;
  return displayWatermark ? '0' : theme.container.borderRadius;
}, function (_ref142) {
  var theme = _ref142.theme,
    displayWatermark = _ref142.displayWatermark;
  return displayWatermark ? '0' : theme.container.borderRadius;
}, function (_ref143) {
  var theme = _ref143.theme,
    displayWatermark = _ref143.displayWatermark;
  return displayWatermark ? 'none' : theme.container.border;
});
var ChildrenContainer = He.div(_templateObject75 || (_templateObject75 = _taggedTemplateLiteral(["\n  padding: 24px 32px;\n"])));
var WatermarkContainer = He.div(_templateObject76 || (_templateObject76 = _taggedTemplateLiteral(["\n  box-sizing: border-box;\n  width: ", ";\n  background-color: ", ";\n  border: ", ";\n  border-top: none;\n  border-bottom-left-radius: ", ";\n  border-bottom-right-radius: ", ";\n  overflow: hidden;\n"])), function (_ref144) {
  var theme = _ref144.theme;
  return theme.container.width;
}, function (_ref145) {
  var theme = _ref145.theme;
  return theme.container.backgroundColor;
}, function (_ref146) {
  var theme = _ref146.theme;
  return theme.container.border;
}, function (_ref147) {
  var theme = _ref147.theme;
  return theme.container.borderRadius;
}, function (_ref148) {
  var theme = _ref148.theme;
  return theme.container.borderRadius;
});
var InnerContainer = He.div(_templateObject77 || (_templateObject77 = _taggedTemplateLiteral(["\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.5;\n"])));
var Image = He.img(_templateObject78 || (_templateObject78 = _taggedTemplateLiteral(["\n  width: 150px;\n"])));
var POWERED_BY_STYTCH_IMG_URL = 'https://public-assets.stytch.com/powered_by_stytch_logo_dark.svg';
var LoadingContainer = function LoadingContainer(_ref149) {
  var children = _ref149.children;
  return /*#__PURE__*/wn.createElement(OuterContainer, {
    displayWatermark: false
  }, /*#__PURE__*/wn.createElement(ChildrenContainer, null, children));
};
var MainContainer = function MainContainer(_ref150) {
  var children = _ref150.children,
    displayWatermark = _ref150.displayWatermark;
  var _useLingui47 = useLingui(),
    _t = _useLingui47._;
  return /*#__PURE__*/wn.createElement(wn.Fragment, null, /*#__PURE__*/wn.createElement(OuterContainer, {
    displayWatermark: displayWatermark
  }, /*#__PURE__*/wn.createElement(ChildrenContainer, null, children, /*#__PURE__*/wn.createElement(Snackbar, null))), displayWatermark && (/*#__PURE__*/wn.createElement(WatermarkContainer, null, /*#__PURE__*/wn.createElement(InnerContainer, null, /*#__PURE__*/wn.createElement("a", {
    style: {
      height: 32,
      display: 'flex',
      alignItems: 'center',
      padding: '8px 0px',
      boxSizing: 'border-box'
    },
    href: "https://stytch.com/",
    target: "_blank",
    rel: "noreferrer"
  }, /*#__PURE__*/wn.createElement(Image, {
    alt: _t({
      id: 'watermark.altText',
      message: "Powered by Stytch"
    }),
    src: POWERED_BY_STYTCH_IMG_URL
  }))))));
};
var useStytchMember = function useStytchMember() {
  var stytch = useStytch();
  return Cn(stytch.onStateChange, function () {
    return stytch.self.getSync();
  });
};
var OPENID_CONSENT_ITEM = {
  text: 'Verify your identity',
  details: ['View information stored within your account']
};
var PROFILE_CONSENT_ITEM = {
  text: 'View your personal profile information',
  details: []
};
var OFFLINE_ACCESS_CONSENT_ITEM = {
  text: "Maintain access to your data even when you're not actively using the app",
  details: ['Access your data even when you are offline.', 'Synchronize data and process background tasks on your behalf.']
};
var OPENID_SCOPE = 'openid';
var PROFILE_SCOPE = 'profile';
var EMAIL_SCOPE = 'email';
var PHONE_SCOPE = 'phone';
var FULL_ACCESS_SCOPE = 'full_access';
var OFFLINE_ACCESS_SCOPE = 'offline_access';
var DEFAULT_SCOPES = new Set([OPENID_SCOPE, PROFILE_SCOPE, EMAIL_SCOPE, PHONE_SCOPE, FULL_ACCESS_SCOPE, OFFLINE_ACCESS_SCOPE]);
var FALLBACK_SCOPES = [OPENID_SCOPE, EMAIL_SCOPE, PROFILE_SCOPE];
var containsCustomScopes = function containsCustomScopes(scope) {
  return scope.split(' ').some(function (sc) {
    return !DEFAULT_SCOPES.has(sc);
  });
};
var createBuiltinScopeDescriptions = function createBuiltinScopeDescriptions(scopes) {
  var descriptions = [];
  if (scopes.includes(OPENID_SCOPE)) {
    descriptions.push(OPENID_CONSENT_ITEM);
  }
  if (scopes.includes(EMAIL_SCOPE) || scopes.includes(PROFILE_SCOPE) || scopes.includes(PHONE_SCOPE)) {
    descriptions.push(createProfileScopeDescription({
      containsEmail: scopes.includes(EMAIL_SCOPE),
      containsPhoneNumber: scopes.includes(PHONE_SCOPE),
      containsProfile: scopes.includes(PROFILE_SCOPE)
    }));
  }
  if (scopes.includes(OFFLINE_ACCESS_SCOPE)) {
    descriptions.push(OFFLINE_ACCESS_CONSENT_ITEM);
  }
  return descriptions;
};
var createProfileScopeDescription = function createProfileScopeDescription(_ref151) {
  var containsProfile = _ref151.containsProfile,
    containsEmail = _ref151.containsEmail,
    containsPhoneNumber = _ref151.containsPhoneNumber;
  var details = [];
  if (containsProfile) {
    details.push('Your name, profile picture, and language preferences');
  }
  if (containsEmail) {
    details.push('Your email address');
  }
  if (containsPhoneNumber) {
    details.push('Your phone number');
  }
  return {
    text: PROFILE_CONSENT_ITEM.text,
    details: details
  };
};
var createCustomScopeDescriptions = function createCustomScopeDescriptions(scopes, rbacPolicy) {
  if (!rbacPolicy) return [];
  var descriptions = [];
  var _iterator = _createForOfIteratorHelper(scopes),
    _step;
  try {
    var _loop2 = function _loop2() {
      var scope = _step.value;
      if (DEFAULT_SCOPES.has(scope)) return 1;
      var found = rbacPolicy.scopes.find(function (policyScope) {
        return policyScope.scope === scope;
      });
      if (found && found.description) {
        descriptions.push(found.description);
      } else {
        descriptions.push("Use the ".concat(scope, " scope"));
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      if (_loop2()) continue;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return descriptions;
};
var fallbackConsentManifestGenerator = function fallbackConsentManifestGenerator(_ref152) {
  var scopes = _ref152.scopes,
    clientName = _ref152.clientName,
    rbacPolicy = _ref152.rbacPolicy;
  return [{
    header: "".concat(clientName, " is requesting to:"),
    items: createBuiltinScopeDescriptions(scopes).concat(createCustomScopeDescriptions(scopes, rbacPolicy))
  }];
};
var parseOAuthAuthorizeParams = function parseOAuthAuthorizeParams(params) {
  var authorizeParams = {
    client_id: '',
    redirect_uri: '',
    response_type: 'code',
    scopes: [].concat(FALLBACK_SCOPES)
  };
  var requiredFields = ['client_id', 'redirect_uri'];
  for (var _i3 = 0, _requiredFields = requiredFields; _i3 < _requiredFields.length; _i3++) {
    var field = _requiredFields[_i3];
    var value = params.get(field);
    if (!value) {
      return {
        error: "Required parameter is missing: ".concat(field, ". Please reach out to the application developer."),
        result: authorizeParams
      };
    }
    authorizeParams[field] = value;
  }
  var optionalFields = ['response_type', 'scope', 'code_challenge', 'state', 'nonce', 'prompt'];
  for (var _i4 = 0, _optionalFields = optionalFields; _i4 < _optionalFields.length; _i4++) {
    var _field = _optionalFields[_i4];
    var _value = params.get(_field);
    if (_value) {
      if (_field === 'scope') {
        authorizeParams.scopes = _value.split(' ').filter(Boolean);
      } else {
        authorizeParams[_field] = _value;
      }
    }
  }
  return {
    error: null,
    result: authorizeParams
  };
};
var parseOAuthLogoutParams = function parseOAuthLogoutParams(params) {
  var logoutParams = {
    client_id: '',
    post_logout_redirect_uri: ''
  };
  var requiredFields = ['client_id', 'post_logout_redirect_uri'];
  for (var _i5 = 0, _requiredFields2 = requiredFields; _i5 < _requiredFields2.length; _i5++) {
    var field = _requiredFields2[_i5];
    var value = params.get(field);
    if (!value) {
      return {
        error: "Required parameter is missing: ".concat(field, ". Please reach out to the application developer."),
        result: logoutParams
      };
    }
    logoutParams[field] = value;
  }
  logoutParams.id_token_hint = params.get('id_token_hint') || undefined;
  logoutParams.state = params.get('state') || undefined;
  return {
    error: null,
    result: logoutParams
  };
};
var parseIDPParams = function parseIDPParams(searchParams) {
  var params = new URLSearchParams(searchParams);
  if (params.has('post_logout_redirect_uri')) {
    var logoutResult = parseOAuthLogoutParams(params);
    return {
      error: logoutResult.error,
      flow: {
        type: 'Logout',
        params: logoutResult.result
      }
    };
  }
  var authorizeResult = parseOAuthAuthorizeParams(params);
  return {
    error: authorizeResult.error,
    flow: {
      type: 'Authorize',
      params: authorizeResult.result
    }
  };
};
var ScopeList = He.ul(_templateObject79 || (_templateObject79 = _taggedTemplateLiteral(["\n  padding: 0;\n"])));
var ScopeListItem = He.li(_templateObject80 || (_templateObject80 = _taggedTemplateLiteral(["\n  padding: 4px;\n  box-sizing: border-box;\n  position: relative;\n  list-style: none;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ", ";\n  }\n"])), function (_ref153) {
  var theme = _ref153.theme;
  return theme.colors.secondary;
});
var ItemSummary = He.summary(_templateObject81 || (_templateObject81 = _taggedTemplateLiteral(["\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  cursor: ", ";\n"])), function (props) {
  return props.expandable ? 'pointer' : 'default';
});
var DropdownArrowSvg = He.svg(_templateObject82 || (_templateObject82 = _taggedTemplateLiteral(["\n  width: 32px;\n  height: 32px;\n  margin-left: 10px;\n  margin-top: -5px;\n  vertical-align: top;\n  flex-shrink: 0;\n  transition: transform 0.3s ease;\n  details[open] & {\n    transform: rotate(90deg);\n  }\n"])));
var ItemNestedDetailsList = He.ul(_templateObject83 || (_templateObject83 = _taggedTemplateLiteral(["\n  padding: 4px 24px;\n  list-style: none;\n"])));
var DropdownArrow = function DropdownArrow() {
  return /*#__PURE__*/wn.createElement(DropdownArrowSvg, {
    width: "33",
    height: "32",
    viewBox: "0 0 33 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/wn.createElement("path", {
    d: "M14.5875 11L13.4125 12.175L17.2291 16L13.4125 19.825L14.5875 21L19.5875 16L14.5875 11Z",
    fill: "currentColor"
  }));
};
var Item = function Item(_ref154) {
  var item = _ref154.item;
  var _a, _b, _c, _d;
  if (typeof item === 'string') {
    item = {
      text: item
    };
  }
  return /*#__PURE__*/wn.createElement(ScopeListItem, null, /*#__PURE__*/wn.createElement("details", null, /*#__PURE__*/wn.createElement(ItemSummary, {
    expandable: !!((_a = item.details) === null || _a === void 0 ? void 0 : _a.length)
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "helper"
  }, "\u2022\xA0", item.text), ((_b = item.details) === null || _b === void 0 ? void 0 : _b.length) && /*#__PURE__*/wn.createElement(DropdownArrow, null)), ((_c = item.details) === null || _c === void 0 ? void 0 : _c.length) && (/*#__PURE__*/wn.createElement(ItemNestedDetailsList, null, (_d = item.details) === null || _d === void 0 ? void 0 : _d.map(function (details) {
    return /*#__PURE__*/wn.createElement("li", {
      key: details
    }, /*#__PURE__*/wn.createElement(Text, {
      size: "helper",
      color: "secondary"
    }, "\u2022\xA0", details));
  })))));
};
var SectionHeader = He(Text)(_templateObject84 || (_templateObject84 = _taggedTemplateLiteral(["\n  font-weight: 600;\n"])));
var Section = function Section(_ref155) {
  var section = _ref155.section;
  return /*#__PURE__*/wn.createElement("div", null, /*#__PURE__*/wn.createElement(SectionHeader, {
    size: "body"
  }, section.header), /*#__PURE__*/wn.createElement(ScopeList, null, section.items.map(function (item, i) {
    return /*#__PURE__*/wn.createElement(Item, {
      key: i,
      item: item
    });
  })));
};
var ConsentManifest = function ConsentManifest(_ref156) {
  var manifest = _ref156.manifest,
    clientName = _ref156.clientName;
  var _useLingui48 = useLingui(),
    _t = _useLingui48._;
  if (_typeof(manifest[0]) === 'object' && 'header' in manifest[0]) {
    return /*#__PURE__*/wn.createElement("div", null, manifest.map(function (item, i) {
      return /*#__PURE__*/wn.createElement(Section, {
        key: i,
        section: item
      });
    }));
  }
  return /*#__PURE__*/wn.createElement(Section, {
    section: {
      header: _t({
        id: 'idpConsent.allowClientTo',
        message: "Allow {clientName} to:",
        values: {
          clientName: clientName
        }
      }),
      items: manifest
    }
  });
};
var UngrantableSection = He.details(_templateObject85 || (_templateObject85 = _taggedTemplateLiteral(["\n  border: ", ";\n  border-radius: ", ";\n  padding: 16px;\n  margin-bottom: 36px;\n"])), function (_ref157) {
  var theme = _ref157.theme;
  return theme.container.border;
}, function (_ref158) {
  var theme = _ref158.theme;
  return theme.container.borderRadius;
});
var UngrantableSummary = He.summary(_templateObject86 || (_templateObject86 = _taggedTemplateLiteral(["\n  list-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n\n  details[open] > & {\n    padding-bottom: 8px;\n    margin-bottom: 8px;\n    border-bottom: 1px solid ", ";\n  }\n"])), function (_ref159) {
  var theme = _ref159.theme;
  return theme.colors.secondary;
});
var UngrantableNestedDetailsList = He.ul(_templateObject87 || (_templateObject87 = _taggedTemplateLiteral(["\n  padding: 4px;\n  margin: 0;\n  list-style: none;\n"])));
var UngrantableScopes = function UngrantableScopes(_ref160) {
  var clientName = _ref160.clientName,
    ungrantableScopeDescriptions = _ref160.ungrantableScopeDescriptions;
  var _useLingui49 = useLingui(),
    _t2 = _useLingui49._;
  if (!ungrantableScopeDescriptions.length) return null;
  return /*#__PURE__*/wn.createElement(UngrantableSection, null, /*#__PURE__*/wn.createElement(UngrantableSummary, null, /*#__PURE__*/wn.createElement(Text, {
    size: "helper"
  }, _t2({
    id: 'idpConsent.noPermissionsToGrant',
    message: "You do not have permissions to grant {clientName} access to some of the requested scopes.",
    values: {
      clientName: clientName
    }
  })), /*#__PURE__*/wn.createElement(DropdownArrow, null)), /*#__PURE__*/wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, _t2({
    id: 'idpConsent.cannotGrantRequest',
    message: "You cannot grant {clientName}'s request to:",
    values: {
      clientName: clientName
    }
  })), /*#__PURE__*/wn.createElement(UngrantableNestedDetailsList, null, ungrantableScopeDescriptions.map(function (desc, i) {
    return /*#__PURE__*/wn.createElement("li", {
      key: i
    }, /*#__PURE__*/wn.createElement(Text, {
      size: "helper",
      color: "secondary"
    }, "\u2022\xA0", desc));
  })));
};
var ConsentManifestGeneratorContext = /*#__PURE__*/F$2(undefined);
var TrustedAuthTokenParamsContext = /*#__PURE__*/F$2(undefined);
var IDPContextProvider = function IDPContextProvider(_ref161) {
  var children = _ref161.children,
    consentManifestGenerator = _ref161.consentManifestGenerator,
    authTokenParams = _ref161.authTokenParams;
  return /*#__PURE__*/wn.createElement(ConsentManifestGeneratorContext.Provider, {
    value: consentManifestGenerator
  }, /*#__PURE__*/wn.createElement(TrustedAuthTokenParamsContext.Provider, {
    value: authTokenParams
  }, children));
};
var useConsentManifestGenerator = function useConsentManifestGenerator() {
  return q(ConsentManifestGeneratorContext);
};
var useTrustedAuthTokenParams = function useTrustedAuthTokenParams() {
  return q(TrustedAuthTokenParamsContext);
};
var Logo = He.img(_templateObject88 || (_templateObject88 = _taggedTemplateLiteral(["\n  max-height: 50px;\n  max-width: 100px;\n"])));
var initialState$1 = function initialState$1(error, params) {
  return {
    loading: !error,
    preflight: !!error,
    error: error,
    success: false,
    denied: false,
    consent_required: false,
    client: null,
    grantable_scope: '',
    ungrantable_scope: '',
    redirect_uri: params.redirect_uri
  };
};
var idpStateReducer = function idpStateReducer(state, action) {
  switch (action.type) {
    case 'START_SUBMIT':
      return Object.assign(Object.assign({}, state), {
        loading: true
      });
    case 'COMPLETE_SUBMIT':
      return Object.assign(Object.assign({}, state), {
        loading: false,
        success: true
      });
    case 'START_PREFLIGHT':
      return Object.assign(Object.assign({}, state), {
        preflight: true,
        loading: true
      });
    case 'PREFLIGHT_ERROR':
      return Object.assign(Object.assign({}, state), {
        preflight: true,
        loading: false,
        error: action.error
      });
    case 'COMPLETE_PREFLIGHT':
      return Object.assign(Object.assign({}, state), {
        loading: false,
        client: action.client,
        consent_required: action.consent_required,
        grantable_scope: action.grantable_scope,
        ungrantable_scope: action.ungrantable_scope
      });
    case 'CONSENT_DENIED':
      return Object.assign(Object.assign({}, state), {
        denied: true
      });
    default:
      return state;
  }
};
var useIDPState = function useIDPState(_ref162) {
  var initialError = _ref162.initialError,
    initialParams = _ref162.initialParams,
    oauthAuthorizeStart = _ref162.oauthAuthorizeStart,
    oauthAuthorizeSubmit = _ref162.oauthAuthorizeSubmit,
    onError = _ref162.onError,
    onEvent = _ref162.onEvent,
    attestTrustedToken = _ref162.attestTrustedToken;
  var _s$ = s$1(idpStateReducer, initialState$1(initialError, initialParams)),
    _s$2 = _slicedToArray(_s$, 2),
    state = _s$2[0],
    dispatch = _s$2[1];
  var onErrorRef = _$1(onError);
  p$1(function () {
    onErrorRef.current = onError;
  }, [onError]);
  var onEventRef = _$1(onEvent);
  p$1(function () {
    onEventRef.current = onEvent;
  }, [onEvent]);
  p$1(function () {
    if (!initialError) return;
    onErrorRef.current(new IDPOAuthFlowMissingParamError(initialError));
  }, [initialError]);
  var submitInternal = T$1(function (_ref163) {
    var consent_required = _ref163.consent_required,
      consent_granted = _ref163.consent_granted;
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {
      var submitResp;
      return _regeneratorRuntime().wrap(function _callee24$(_context24) {
        while (1) switch (_context24.prev = _context24.next) {
          case 0:
            if (!((initialParams === null || initialParams === void 0 ? void 0 : initialParams.auth_token) && (initialParams === null || initialParams === void 0 ? void 0 : initialParams.profile_id))) {
              _context24.next = 11;
              break;
            }
            _context24.prev = 1;
            _context24.next = 4;
            return attestTrustedToken({
              trustedAuthToken: initialParams === null || initialParams === void 0 ? void 0 : initialParams.auth_token,
              tokenProfileID: initialParams === null || initialParams === void 0 ? void 0 : initialParams.profile_id
            });
          case 4:
            _context24.next = 11;
            break;
          case 6:
            _context24.prev = 6;
            _context24.t0 = _context24["catch"](1);
            dispatch({
              type: 'PREFLIGHT_ERROR',
              error: 'Trusted auth token is not verified'
            });
            if (onError && _context24.t0 instanceof Error) {
              onError(_context24.t0);
            }
            return _context24.abrupt("return");
          case 11:
            dispatch({
              type: 'START_SUBMIT'
            });
            _context24.next = 14;
            return oauthAuthorizeSubmit(Object.assign(Object.assign({}, initialParams), {
              consent_granted: consent_granted
            }));
          case 14:
            submitResp = _context24.sent;
            dispatch({
              type: 'COMPLETE_SUBMIT'
            });
            if (!(submitResp === null || submitResp === void 0 ? void 0 : submitResp.redirect_uri)) {
              _context24.next = 19;
              break;
            }
            window.location.href = submitResp.redirect_uri;
            return _context24.abrupt("return");
          case 19:
            if (consent_required && !consent_granted) {
              dispatch({
                type: 'CONSENT_DENIED'
              });
              onEventRef.current({
                type: StytchEventType.OAuthAuthorizeFlowConsentDenied,
                data: {}
              });
            } else {
              onEventRef.current({
                type: StytchEventType.OAuthAuthorizeFlowComplete,
                data: {}
              });
            }
          case 20:
          case "end":
            return _context24.stop();
        }
      }, _callee24, null, [[1, 6]]);
    }));
  }, [dispatch, oauthAuthorizeSubmit, initialParams, attestTrustedToken, onError]);
  var submit = T$1(function (_ref164) {
    var consent_granted = _ref164.consent_granted;
    return submitInternal({
      consent_granted: consent_granted,
      consent_required: true
    });
  }, [submitInternal]);
  var loadClient = T$1(function () {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {
      var startResponse, err, message, grantable, ungrantable;
      return _regeneratorRuntime().wrap(function _callee25$(_context25) {
        while (1) switch (_context25.prev = _context25.next) {
          case 0:
            dispatch({
              type: 'START_PREFLIGHT'
            });
            onEventRef.current({
              type: StytchEventType.OAuthAuthorizeFlowStart,
              data: {
                client_id: initialParams['client_id'],
                redirect_uri: initialParams['redirect_uri'],
                scope: initialParams['scopes'].join(' ')
              }
            });
            _context25.prev = 2;
            _context25.next = 5;
            return oauthAuthorizeStart({
              client_id: initialParams['client_id'],
              redirect_uri: initialParams['redirect_uri'],
              response_type: initialParams['response_type'] || 'code',
              scopes: initialParams['scopes'],
              prompt: initialParams['prompt'] || undefined
            });
          case 5:
            startResponse = _context25.sent;
            _context25.next = 15;
            break;
          case 8:
            _context25.prev = 8;
            _context25.t0 = _context25["catch"](2);
            err = StytchAPIError.from(_context25.t0);
            message = err.error_message;
            dispatch({
              type: 'PREFLIGHT_ERROR',
              error: message
            });
            onErrorRef.current(err);
            return _context25.abrupt("return");
          case 15:
            if (!startResponse.consent_required) {
              _context25.next = 22;
              break;
            }
            grantable = startResponse.scope_results.filter(function (s) {
              return s.is_grantable;
            }).map(function (s) {
              return s.scope;
            }).join(' ');
            ungrantable = startResponse.scope_results.filter(function (s) {
              return !s.is_grantable;
            }).map(function (s) {
              return s.scope;
            }).join(' ');
            dispatch({
              type: 'COMPLETE_PREFLIGHT',
              consent_required: startResponse.consent_required,
              client: startResponse.client,
              grantable_scope: grantable,
              ungrantable_scope: ungrantable
            });
            return _context25.abrupt("return");
          case 22:
            _context25.next = 24;
            return submitInternal({
              consent_required: false,
              consent_granted: false
            });
          case 24:
          case "end":
            return _context25.stop();
        }
      }, _callee25, null, [[2, 8]]);
    }));
  }, [oauthAuthorizeStart, initialParams, submitInternal]);
  p$1(function () {
    if (state.preflight) {
      return;
    }
    loadClient();
  }, [loadClient, state.preflight]);
  return {
    state: state,
    submit: submit
  };
};
var IDPConsent = function IDPConsent(_ref165) {
  var bootstrap = _ref165.bootstrap,
    bootstrapNotLoaded = _ref165.bootstrapNotLoaded,
    state = _ref165.state,
    submit = _ref165.submit;
  var _a;
  var _useLingui50 = useLingui(),
    _t = _useLingui50._;
  var loading = state.loading,
    error = state.error,
    denied = state.denied,
    success = state.success,
    client = state.client;
  var customConsentManifestGenerator = useConsentManifestGenerator();
  var clientName = F$1(function () {
    var _a, _b;
    var name = (_b = (_a = state.client) === null || _a === void 0 ? void 0 : _a.client_name) !== null && _b !== void 0 ? _b : '';
    if (!name) {
      try {
        var _u2 = new URL(state.redirect_uri);
        name = _u2.hostname;
      } catch (e) {
        logger.warn('Unable to parse host from redirect URI.', e);
        name = _t({
          id: 'idpConsent.defaultClientName',
          message: "The App"
        });
      }
    }
    return name;
  }, [(_a = state.client) === null || _a === void 0 ? void 0 : _a.client_name, state.redirect_uri, _t]);
  var manifest = F$1(function () {
    if (customConsentManifestGenerator) {
      try {
        return customConsentManifestGenerator({
          scopes: state.grantable_scope.split(' '),
          clientName: clientName
        });
      } catch (e) {
        logger.error('Error rendering custom consent screen. Falling back to default consent screen.', e);
      }
    }
    return fallbackConsentManifestGenerator({
      scopes: state.grantable_scope.split(' '),
      rbacPolicy: bootstrap.rbacPolicy,
      clientName: clientName
    });
  }, [customConsentManifestGenerator, state.grantable_scope, clientName, bootstrap.rbacPolicy]);
  var ungrantableScopeDescriptions = F$1(function () {
    if (state.ungrantable_scope === '') return [];
    return createCustomScopeDescriptions(state.ungrantable_scope.split(' '), bootstrap.rbacPolicy);
  }, [state.ungrantable_scope, bootstrap.rbacPolicy]);
  if (loading || bootstrapNotLoaded) {
    return /*#__PURE__*/wn.createElement(LoadingScreen, null);
  }
  if (error) {
    return /*#__PURE__*/wn.createElement(ErrorDisplay, {
      text: error
    });
  }
  if (denied) {
    return /*#__PURE__*/wn.createElement(ErrorDisplay, {
      text: _t({
        id: 'idpConsent.denied',
        message: "Access to the application was denied."
      })
    });
  }
  if (success) {
    return /*#__PURE__*/wn.createElement(Confirmation, null);
  }
  return /*#__PURE__*/wn.createElement(Consent, {
    client: client,
    submit: submit,
    grantableScope: state.grantable_scope,
    projectName: bootstrap.projectName
  }, /*#__PURE__*/wn.createElement(UngrantableScopes, {
    ungrantableScopeDescriptions: ungrantableScopeDescriptions,
    clientName: clientName
  }), /*#__PURE__*/wn.createElement(ConsentManifest, {
    manifest: manifest,
    clientName: clientName
  }));
};
var Consent = function Consent(_ref166) {
  var client = _ref166.client,
    submit = _ref166.submit,
    grantableScope = _ref166.grantableScope,
    projectName = _ref166.projectName,
    children = _ref166.children;
  var _useLingui51 = useLingui(),
    _t2 = _useLingui51._;
  var _Ze2 = Ze(),
    logo = _Ze2.logo;
  var clientName = client.client_name;
  var title = containsCustomScopes(grantableScope) ? _t2({
    id: 'idpConsent.customScopes.title',
    message: "{clientName} wants to access your {projectName} account",
    values: {
      clientName: clientName,
      projectName: projectName
    }
  }) : _t2({
    id: 'idpConsent.signIn.title',
    message: "Sign in to {clientName} with {projectName}",
    values: {
      clientName: clientName,
      projectName: projectName
    }
  });
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, logo.logoImageUrl && (/*#__PURE__*/wn.createElement(Flex, {
    justifyContent: "center"
  }, /*#__PURE__*/wn.createElement(Logo, {
    src: logo.logoImageUrl
  }))), /*#__PURE__*/wn.createElement(Text, {
    size: "header",
    align: "center"
  }, title), /*#__PURE__*/wn.createElement("div", null, children), /*#__PURE__*/wn.createElement("div", null, /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: function onClick() {
      return submit({
        consent_granted: true
      });
    }
  }, _t2({
    id: 'idpConsent.button.allow',
    message: "Allow"
  })), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: function onClick() {
      return submit({
        consent_granted: false
      });
    },
    variant: "text"
  }, _t2({
    id: 'idpConsent.button.deny',
    message: "Deny"
  }))));
};
var initialState = function initialState(error) {
  return {
    loading: !error,
    preflight: !!error,
    error: error,
    denied: false,
    consent_required: false,
    redirect_uri: ''
  };
};
var logoutStateReducer = function logoutStateReducer(state, action) {
  switch (action.type) {
    case 'START_PREFLIGHT':
      return Object.assign(Object.assign({}, state), {
        preflight: true,
        loading: true
      });
    case 'PREFLIGHT_ERROR':
      return Object.assign(Object.assign({}, state), {
        preflight: true,
        loading: false,
        error: action.error
      });
    case 'COMPLETE_PREFLIGHT':
      return Object.assign(Object.assign({}, state), {
        loading: false,
        consent_required: action.consent_required,
        redirect_uri: action.redirect_uri
      });
    case 'CONSENT_DENIED':
      return Object.assign(Object.assign({}, state), {
        denied: true
      });
    default:
      return state;
  }
};
var useLogoutState = function useLogoutState(_ref167) {
  var initialError = _ref167.initialError,
    initialParams = _ref167.initialParams,
    oauthLogoutStart = _ref167.oauthLogoutStart,
    revokeSession = _ref167.revokeSession,
    onError = _ref167.onError;
  var _s$3 = s$1(logoutStateReducer, initialState(initialError)),
    _s$4 = _slicedToArray(_s$3, 2),
    state = _s$4[0],
    dispatch = _s$4[1];
  var onErrorRef = _$1(onError);
  p$1(function () {
    onErrorRef.current = onError;
  }, [onError]);
  p$1(function () {
    if (!initialError) return;
    onErrorRef.current(new IDPOAuthFlowMissingParamError(initialError));
  }, [initialError]);
  var submitInternal = T$1(function (redirectURI) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {
      return _regeneratorRuntime().wrap(function _callee26$(_context26) {
        while (1) switch (_context26.prev = _context26.next) {
          case 0:
            _context26.prev = 0;
            _context26.next = 3;
            return revokeSession();
          case 3:
            _context26.next = 7;
            break;
          case 5:
            _context26.prev = 5;
            _context26.t0 = _context26["catch"](0);
          case 7:
            window.location.href = redirectURI;
          case 8:
          case "end":
            return _context26.stop();
        }
      }, _callee26, null, [[0, 5]]);
    }));
  }, [revokeSession]);
  var logoutPreflight = T$1(function () {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {
      var startResponse, err, message;
      return _regeneratorRuntime().wrap(function _callee27$(_context27) {
        while (1) switch (_context27.prev = _context27.next) {
          case 0:
            dispatch({
              type: 'START_PREFLIGHT'
            });
            _context27.prev = 1;
            _context27.next = 4;
            return oauthLogoutStart(initialParams);
          case 4:
            startResponse = _context27.sent;
            _context27.next = 14;
            break;
          case 7:
            _context27.prev = 7;
            _context27.t0 = _context27["catch"](1);
            err = StytchAPIError.from(_context27.t0);
            message = err.error_message;
            dispatch({
              type: 'PREFLIGHT_ERROR',
              error: message
            });
            onErrorRef.current(err);
            return _context27.abrupt("return");
          case 14:
            if (!startResponse.consent_required) {
              _context27.next = 19;
              break;
            }
            dispatch({
              type: 'COMPLETE_PREFLIGHT',
              consent_required: startResponse.consent_required,
              redirect_uri: startResponse.redirect_uri
            });
            return _context27.abrupt("return");
          case 19:
            submitInternal(startResponse.redirect_uri);
          case 20:
          case "end":
            return _context27.stop();
        }
      }, _callee27, null, [[1, 7]]);
    }));
  }, [initialParams, oauthLogoutStart, submitInternal]);
  p$1(function () {
    if (state.preflight) {
      return;
    }
    logoutPreflight();
  }, [logoutPreflight, state.preflight]);
  var submit = T$1(function (_ref168) {
    var consent_granted = _ref168.consent_granted;
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {
      return _regeneratorRuntime().wrap(function _callee28$(_context28) {
        while (1) switch (_context28.prev = _context28.next) {
          case 0:
            if (!consent_granted) {
              _context28.next = 4;
              break;
            }
            return _context28.abrupt("return", submitInternal(state.redirect_uri));
          case 4:
            dispatch({
              type: 'CONSENT_DENIED'
            });
          case 5:
          case "end":
            return _context28.stop();
        }
      }, _callee28);
    }));
  }, [submitInternal, state]);
  return {
    state: state,
    submit: submit
  };
};
var IDPLogout = function IDPLogout(_ref169) {
  var state = _ref169.state,
    submit = _ref169.submit,
    bootstrap = _ref169.bootstrap,
    bootstrapNotLoaded = _ref169.bootstrapNotLoaded;
  var _useLingui52 = useLingui(),
    _t = _useLingui52._;
  var loading = state.loading,
    error = state.error,
    denied = state.denied;
  if (loading || bootstrapNotLoaded) {
    return /*#__PURE__*/wn.createElement(LoadingScreen, null);
  }
  if (error) {
    return /*#__PURE__*/wn.createElement(ErrorDisplay, {
      text: error
    });
  }
  if (denied) {
    return /*#__PURE__*/wn.createElement(Confirmation, {
      text: _t({
        id: 'idpLogout.notLoggedOut',
        message: "You have not been logged out. You may close this page."
      })
    });
  }
  var projectName = bootstrap.projectName;
  return /*#__PURE__*/wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/wn.createElement(Text, {
    size: "header",
    align: "center"
  }, _t({
    id: 'idpLogout.title',
    message: "Log out?"
  })), /*#__PURE__*/wn.createElement("div", null, _t({
    id: 'idpLogout.confirmMessage',
    message: "Are you sure you want to log out of your {projectName} account?",
    values: {
      projectName: projectName
    }
  })), /*#__PURE__*/wn.createElement("div", null, /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: function onClick() {
      return submit({
        consent_granted: true
      });
    }
  }, _t({
    id: 'idpLogout.yes',
    message: "Yes"
  })), /*#__PURE__*/wn.createElement(Button, {
    type: "button",
    onClick: function onClick() {
      return submit({
        consent_granted: false
      });
    },
    variant: "text"
  }, _t({
    id: 'idpLogout.no',
    message: "No"
  }))));
};
var IDPConsentScreenImpl = function IDPConsentScreenImpl(_ref170) {
  var initialError = _ref170.initialError,
    initialParams = _ref170.initialParams;
  var stytchClient = useStytch();
  var onError = useErrorCallback();
  var onEvent = useEventCallback();
  var oauthAuthorizeStart = readB2BInternals(stytchClient).idp.oauthAuthorizeStart;
  var oauthAuthorizeSubmit = readB2BInternals(stytchClient).idp.oauthAuthorizeSubmit;
  var attestTrustedToken = function attestTrustedToken(authTokenParams) {
    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {
      var token, profile_id, member;
      return _regeneratorRuntime().wrap(function _callee29$(_context29) {
        while (1) switch (_context29.prev = _context29.next) {
          case 0:
            token = authTokenParams === null || authTokenParams === void 0 ? void 0 : authTokenParams.trustedAuthToken;
            profile_id = authTokenParams === null || authTokenParams === void 0 ? void 0 : authTokenParams.tokenProfileID;
            if (!(token && profile_id)) {
              _context29.next = 9;
              break;
            }
            member = stytchClient.self.getSync();
            if (!member) {
              _context29.next = 7;
              break;
            }
            _context29.next = 7;
            return stytchClient.session.revoke();
          case 7:
            _context29.next = 9;
            return stytchClient.session.attest({
              token: token,
              profile_id: profile_id,
              organization_id: member === null || member === void 0 ? void 0 : member.organization_id,
              session_duration_minutes: 60
            });
          case 9:
          case "end":
            return _context29.stop();
        }
      }, _callee29);
    }));
  };
  var bootstrap = useBootstrap();
  var authParams = useTrustedAuthTokenParams();
  var effectiveParams = Object.assign(Object.assign({}, initialParams), {
    auth_token: authParams === null || authParams === void 0 ? void 0 : authParams.trustedAuthToken,
    profile_id: authParams === null || authParams === void 0 ? void 0 : authParams.tokenProfileID
  });
  var idpConsentState = useIDPState({
    initialError: initialError,
    initialParams: effectiveParams,
    oauthAuthorizeStart: oauthAuthorizeStart,
    oauthAuthorizeSubmit: oauthAuthorizeSubmit,
    onError: onError,
    onEvent: onEvent,
    attestTrustedToken: attestTrustedToken
  });
  return /*#__PURE__*/wn.createElement(IDPConsent, Object.assign({
    bootstrap: bootstrap,
    bootstrapNotLoaded: false
  }, idpConsentState));
};
var IDPLogoutScreenImpl = function IDPLogoutScreenImpl(_ref171) {
  var initialError = _ref171.initialError,
    initialParams = _ref171.initialParams;
  var stytchClient = useStytch();
  var onError = useErrorCallback();
  var oauthLogoutStart = readB2BInternals(stytchClient).idp.oauthLogoutStart;
  var revokeSession = function revokeSession() {
    return stytchClient.session.revoke({
      forceClear: true
    });
  };
  var bootstrap = useBootstrap();
  var idpLogoutState = useLogoutState({
    initialError: initialError,
    initialParams: initialParams,
    oauthLogoutStart: oauthLogoutStart,
    revokeSession: revokeSession,
    onError: onError
  });
  return /*#__PURE__*/wn.createElement(IDPLogout, Object.assign({}, idpLogoutState, {
    bootstrap: bootstrap,
    bootstrapNotLoaded: false
  }));
};
var IDPConsentScreen = function IDPConsentScreen() {
  var _h$73 = h$2(parseIDPParams(window.location.search)),
    _h$74 = _slicedToArray(_h$73, 1),
    parseResult = _h$74[0];
  return /*#__PURE__*/wn.createElement(wn.Fragment, null, parseResult.flow.type === 'Authorize' && (/*#__PURE__*/wn.createElement(EnsureMemberIsLoggedIn, null, /*#__PURE__*/wn.createElement(IDPConsentScreenImpl, {
    initialError: parseResult.error,
    initialParams: parseResult.flow.params
  }))), parseResult.flow.type === 'Logout' && (/*#__PURE__*/wn.createElement(IDPLogoutScreenImpl, {
    initialError: parseResult.error,
    initialParams: parseResult.flow.params
  })));
};
var EnsureMemberIsLoggedIn = function EnsureMemberIsLoggedIn(_ref172) {
  var children = _ref172.children;
  var _useLingui53 = useLingui(),
    _t = _useLingui53._;
  var member = useStytchMember();
  var onError = useErrorCallback();
  var onErrorRef = _$1(onError);
  p$1(function () {
    onErrorRef.current = onError;
  }, [onError]);
  p$1(function () {
    if (member) return;
    onErrorRef.current(new NoCurrentSessionError());
  }, [member]);
  if (member) {
    return children;
  } else {
    return /*#__PURE__*/wn.createElement(ErrorDisplay, {
      text: _t({
        id: 'idpConsent.noActiveSession',
        message: "No active session detected. Please log in to continue."
      })
    });
  }
};
var getTokenFromUrl = function getTokenFromUrl() {
  var url = new URL(window.location.href);
  var tokenType = url.searchParams.get('stytch_token_type');
  var token = url.searchParams.get('token');
  return {
    tokenType: tokenType,
    token: token
  };
};
var supportedTokenTypes = ['discovery', 'discovery_oauth', 'oauth', 'sso', 'multi_tenant_magic_links', 'multi_tenant_impersonation'];
var supportedTokenTypesSet = new Set(supportedTokenTypes);
var isSupportedTokenType = function isSupportedTokenType(tokenType) {
  return !!(tokenType && supportedTokenTypesSet.has(tokenType));
};
var AppContainer$1 = function AppContainer$1() {
  var _ScreenComponentMap;
  var _useGlobalReducer79 = useGlobalReducer(),
    _useGlobalReducer80 = _slicedToArray(_useGlobalReducer79, 2),
    state = _useGlobalReducer80[0],
    dispatch = _useGlobalReducer80[1];
  var stytchClient = useStytch();
  var config = useConfig();
  var _Ze3 = Ze(),
    displayWatermark = _Ze3.displayWatermark;
  var isOnlyFloatingOneTap = useIsOnlyFloatingOneTap();
  var currentScreen = state.screen;
  var ScreenComponentMap = (_ScreenComponentMap = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ScreenComponentMap, AppScreens$1.Main, /*#__PURE__*/wn.createElement(MainScreen, null)), AppScreens$1.EmailConfirmation, /*#__PURE__*/wn.createElement(EmailConfirmation, null)), AppScreens$1.LoggedIn, /*#__PURE__*/wn.createElement(ConfirmationScreen, null)), AppScreens$1.Discovery, /*#__PURE__*/wn.createElement(Discovery, null)), AppScreens$1.Error, /*#__PURE__*/wn.createElement(ErrorScreen, null)), AppScreens$1.PasswordEmailForm, /*#__PURE__*/wn.createElement(PasswordsEmailForm, null)), AppScreens$1.PasswordAuthenticate, /*#__PURE__*/wn.createElement(PasswordsAuthenticate, null)), AppScreens$1.PasswordResetForm, /*#__PURE__*/wn.createElement(PasswordResetForm, null)), AppScreens$1.PasswordResetVerifyConfirmation, /*#__PURE__*/wn.createElement(PasswordResetConfirmation, null)), AppScreens$1.PasswordForgotForm, /*#__PURE__*/wn.createElement(PasswordsForgotForm, null)), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ScreenComponentMap, AppScreens$1.PasswordSetNewConfirmation, /*#__PURE__*/wn.createElement(PasswordSetNew, null)), AppScreens$1.MFAEnrollmentSelection, /*#__PURE__*/wn.createElement(MFAEnrollmentSelectionScreen, null)), AppScreens$1.SMSOTPEnrollment, /*#__PURE__*/wn.createElement(SMSOTPEnrollScreen, null)), AppScreens$1.SMSOTPEntry, /*#__PURE__*/wn.createElement(SMSOTPEntryScreen, null)), AppScreens$1.RecoveryCodeEntry, /*#__PURE__*/wn.createElement(RecoveryCodeEntryScreen, null)), AppScreens$1.RecoveryCodeSave, /*#__PURE__*/wn.createElement(RecoveryCodeSaveScreen, null)), AppScreens$1.TOTPEnrollmentQRCode, /*#__PURE__*/wn.createElement(TOTPEnrollQRScreen, null)), AppScreens$1.TOTPEnrollmentManual, /*#__PURE__*/wn.createElement(TOTPEnrollManualScreen, null)), AppScreens$1.TOTPEntry, /*#__PURE__*/wn.createElement(TOTPEntryScreen, null)), AppScreens$1.EmailMethodSelection, /*#__PURE__*/wn.createElement(EmailMethodSelectionScreen, null)), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ScreenComponentMap, AppScreens$1.EmailOTPEntry, /*#__PURE__*/wn.createElement(EmailOTPEntryScreen, null)), AppScreens$1.SSODiscoveryEmail, /*#__PURE__*/wn.createElement(SSODiscoveryEmail, null)), AppScreens$1.SSODiscoveryFallback, /*#__PURE__*/wn.createElement(SSODiscoveryFallback, null)), AppScreens$1.SSODiscoveryMenu, /*#__PURE__*/wn.createElement(SSODiscoveryMenu, null)), AppScreens$1.IDPConsent, /*#__PURE__*/wn.createElement(IDPConsentScreen, null)));
  var onSuccess = function onSuccess(data) {
    clearStytchSearchParams();
    onAuthenticateSuccess(data, dispatch, config);
  };
  var onDiscoverySuccess = function onDiscoverySuccess(data) {
    clearStytchSearchParams();
    onDiscoveryAuthenticateSuccess(data, dispatch);
  };
  var handleStytchAPIError = function handleStytchAPIError(defaultErrorType) {
    return function (error) {
      var error_type = extractErrorType(error);
      var errorTypeMap = {
        ad_blocker_detected: ErrorType.AdBlockerDetected
      };
      var errorType = error_type && errorTypeMap[error_type] ? errorTypeMap[error_type] : defaultErrorType !== null && defaultErrorType !== void 0 ? defaultErrorType : ErrorType.Default;
      clearStytchSearchParams();
      dispatch({
        type: 'set_error_message_and_transition',
        errorType: errorType,
        canGoBack: false
      });
    };
  };
  var _useMutate12 = useMutate("stytch.magicLinks.authenticate", function (_, _ref173) {
      var token = _ref173.arg.token;
      return stytchClient.magicLinks.authenticate({
        magic_links_token: token,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: onSuccess,
      onError: handleStytchAPIError(ErrorType.EmailMagicLink)
    }),
    stytchMagicLinkAuthenticate = _useMutate12.trigger,
    isMagicLinkLoading = _useMutate12.isMutating;
  var _useMutate13 = useMutate("stytch.impersonation.authenticate", function (_, _ref174) {
      var token = _ref174.arg.token;
      return stytchClient.impersonation.authenticate({
        impersonation_token: token
      });
    }, {
      onSuccess: onSuccess,
      onError: handleStytchAPIError()
    }),
    stytchImpersonationAuthenticate = _useMutate13.trigger,
    isImpersonationLoading = _useMutate13.isMutating;
  var _useMutate14 = useMutate("stytch.oauth.authenticate", function (_, _ref175) {
      var token = _ref175.arg.token;
      return stytchClient.oauth.authenticate({
        oauth_token: token,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: onSuccess,
      onError: handleStytchAPIError()
    }),
    stytchOAuthAuthenticate = _useMutate14.trigger,
    isOAuthLoading = _useMutate14.isMutating;
  var _useMutate15 = useMutate("stytch.oauth.discovery.authenticate", function (_, _ref176) {
      var token = _ref176.arg.token;
      return stytchClient.oauth.discovery.authenticate({
        discovery_oauth_token: token
      });
    }, {
      onSuccess: onDiscoverySuccess,
      onError: handleStytchAPIError()
    }),
    stytchOAuthDiscoveryAuthenticate = _useMutate15.trigger,
    isDiscoveryOAuthLoading = _useMutate15.isMutating;
  var _useMutate16 = useMutate("stytch.sso.authenticate", function (_, _ref177) {
      var token = _ref177.arg.token;
      return stytchClient.sso.authenticate({
        sso_token: token,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: onSuccess,
      onError: handleStytchAPIError()
    }),
    stytchSSOAuthenticate = _useMutate16.trigger,
    isSSOLoading = _useMutate16.isMutating;
  var _useMutate17 = useMutate("stytch.magicLinks.discovery.authenticate", function (_, _ref178) {
      var token = _ref178.arg.token;
      return stytchClient.magicLinks.discovery.authenticate({
        discovery_magic_links_token: token
      });
    }, {
      onSuccess: onDiscoverySuccess,
      onError: handleStytchAPIError()
    }),
    stytchDiscoveryAuthenticate = _useMutate17.trigger,
    isDiscoveryLoading = _useMutate17.isMutating;
  var isTokenAuthLoading = isMagicLinkLoading || isSSOLoading || isDiscoveryLoading || isDiscoveryOAuthLoading || isOAuthLoading || isImpersonationLoading;
  var _useExtractSlug = useExtractSlug(),
    slug = _useExtractSlug.slug,
    resultPending = _useExtractSlug.resultPending;
  p$1(function () {
    if (isOnlyFloatingOneTap) {
      return;
    }
    if (state.screen === AppScreens$1.IDPConsent) {
      return;
    }
    if (state.flowState.type == AuthFlowType.PasswordReset) {
      return;
    }
    var _getTokenFromUrl = getTokenFromUrl(),
      tokenType = _getTokenFromUrl.tokenType,
      token = _getTokenFromUrl.token;
    if (token && isSupportedTokenType(tokenType) && !isTokenAuthLoading) {
      switch (tokenType) {
        case 'discovery':
          stytchDiscoveryAuthenticate({
            token: token
          });
          break;
        case 'discovery_oauth':
          stytchOAuthDiscoveryAuthenticate({
            token: token
          });
          break;
        case 'oauth':
          stytchOAuthAuthenticate({
            token: token
          });
          break;
        case 'sso':
          stytchSSOAuthenticate({
            token: token
          });
          break;
        case 'multi_tenant_magic_links':
          stytchMagicLinkAuthenticate({
            token: token
          });
          break;
        case 'multi_tenant_impersonation':
          stytchImpersonationAuthenticate({
            token: token
          });
          break;
        default:
          return assertUnreachable();
      }
    }
  }, []);
  var triggerError = useErrorCallback();
  p$1(function () {
    if (isOnlyFloatingOneTap) {
      return;
    }
    if (isTokenAuthLoading) {
      return;
    }
    var _getTokenFromUrl2 = getTokenFromUrl(),
      tokenType = _getTokenFromUrl2.tokenType,
      token = _getTokenFromUrl2.token;
    if (token && isSupportedTokenType(tokenType)) {
      return;
    }
    if (!slug && !resultPending && state.flowState.organization === null && state.screen === AppScreens$1.Main && state.flowState.type == AuthFlowType.Organization) {
      dispatch({
        type: 'set_error_message_and_transition',
        errorType: ErrorType.Organization,
        canGoBack: false
      });
    }
  }, [dispatch, isOnlyFloatingOneTap, isTokenAuthLoading, resultPending, slug, state.flowState.organization, state.flowState.type, state.screen, triggerError]);
  if (isOnlyFloatingOneTap) {
    return /*#__PURE__*/wn.createElement(B2BGoogleOneTap, null);
  }
  if (isTokenAuthLoading) {
    return /*#__PURE__*/wn.createElement(LoadingContainer, null, /*#__PURE__*/wn.createElement(LoggingInScreen, null));
  }
  return /*#__PURE__*/wn.createElement(MainContainer, {
    displayWatermark: displayWatermark
  }, ScreenComponentMap[currentScreen]);
};
var AppContainer = function AppContainer(_ref179) {
  var client = _ref179.client,
    styles = _ref179.styles,
    callbacks = _ref179.callbacks,
    config = _ref179.config,
    strings = _ref179.strings;
  var _h$75 = h$2(function () {
      var _readB2BInternals$boo3 = readB2BInternals(client).bootstrap.getSync(),
        displayWatermark = _readB2BInternals$boo3.displayWatermark;
      return displayWatermark;
    }),
    _h$76 = _slicedToArray(_h$75, 2),
    displayWatermark = _h$76[0],
    setDisplayWatermark = _h$76[1];
  p$1(function () {
    readB2BInternals(client).bootstrap.getAsync().then(function (data) {
      readB2BInternals(client).networkClient.logEvent({
        name: 'render_b2b_login_screen',
        details: {
          options: config,
          bootstrap: data
        }
      });
      setDisplayWatermark(data.displayWatermark);
    });
  }, [client]);
  var getRedirectTypeFromUrl = function getRedirectTypeFromUrl() {
    var url = new URL(window.location.href);
    var redirectType = url.searchParams.get('stytch_redirect_type');
    return redirectType;
  };
  var redirectType = getRedirectTypeFromUrl();
  var authFlowType = redirectType === RedirectURLType.ResetPassword ? AuthFlowType.PasswordReset : config.authFlowType;
  var initialState = Object.assign(Object.assign({}, DEFAULT_STATE), {
    screen: authFlowType === AuthFlowType.PasswordReset ? AppScreens$1.PasswordResetForm : AppScreens$1.Main,
    flowState: Object.assign(Object.assign({}, DEFAULT_STATE.flowState), {
      type: authFlowType
    })
  });
  var configWithDefaults = F$1(function () {
    var _a;
    return Object.assign(Object.assign({}, config), {
      sessionOptions: (_a = config.sessionOptions) !== null && _a !== void 0 ? _a : {}
    });
  }, [config]);
  var theme = useTheme({
    styles: styles,
    displayWatermark: displayWatermark
  });
  return /*#__PURE__*/wn.createElement(GlobalContextProvider, {
    client: client,
    callbacks: callbacks,
    config: configWithDefaults,
    initialState: initialState
  }, /*#__PURE__*/wn.createElement(Fe, {
    theme: theme
  }, /*#__PURE__*/wn.createElement(I18nProviderWrapper, {
    messages: messages,
    overrides: strings
  }, /*#__PURE__*/wn.createElement(AppContainer$1, null))));
};
var B2BIDPContainer = function B2BIDPContainer(_ref180) {
  var client = _ref180.client,
    styles = _ref180.styles,
    callbacks = _ref180.callbacks,
    strings = _ref180.strings,
    getIDPConsentManifest = _ref180.getIDPConsentManifest,
    trustedAuthTokenParams = _ref180.trustedAuthTokenParams;
  var initialState = Object.assign(Object.assign({}, DEFAULT_STATE), {
    screen: AppScreens$1.IDPConsent
  });
  var theme = useTheme({
    styles: styles,
    displayWatermark: false
  });
  p$1(function () {
    readB2BInternals(client).bootstrap.getAsync().then(function (data) {
      readB2BInternals(client).networkClient.logEvent({
        name: 'render_b2b_idp_screen',
        details: {
          bootstrap: data
        }
      });
    });
  }, [client]);
  return /*#__PURE__*/wn.createElement(GlobalContextProvider, {
    client: client,
    config: DEFAULT_CONFIG,
    callbacks: callbacks,
    initialState: initialState
  }, /*#__PURE__*/wn.createElement(IDPContextProvider, {
    consentManifestGenerator: getIDPConsentManifest,
    authTokenParams: trustedAuthTokenParams
  }, /*#__PURE__*/wn.createElement(Fe, {
    theme: theme
  }, /*#__PURE__*/wn.createElement(I18nProviderWrapper, {
    messages: messages,
    overrides: strings
  }, /*#__PURE__*/wn.createElement(AppContainer$1, null)))));
};
var B2B_UI_SCREEN_WEB_COMPONENT_NAME = 'stytch-b2b-ui';
var B2BUILoginComponent = CreateSSRSafeWebComponent(AppContainer, B2B_UI_SCREEN_WEB_COMPONENT_NAME);
var B2B_UI_IDP_WEB_COMPONENT_NAME = 'stytch-b2b-identity-provider';
var B2BUIIdentityProviderComponent = CreateSSRSafeWebComponent(B2BIDPContainer, B2B_UI_IDP_WEB_COMPONENT_NAME);
var StytchB2BUIClient = /*#__PURE__*/function (_StytchB2BHeadlessCli) {
  function StytchB2BUIClient() {
    _classCallCheck(this, StytchB2BUIClient);
    checkB2BNotSSR('StytchB2BUIClient');
    for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return _callSuper(this, StytchB2BUIClient, [].concat(args));
  }
  _inherits(StytchB2BUIClient, _StytchB2BHeadlessCli);
  return _createClass(StytchB2BUIClient, [{
    key: "mount",
    value: function mount(_ref181) {
      var elementId = _ref181.elementId,
        styles = _ref181.styles,
        callbacks = _ref181.callbacks,
        config = _ref181.config,
        strings = _ref181.strings;
      var _a;
      var targetParentDomNode = document.querySelector(elementId);
      if (!targetParentDomNode) {
        throw new Error("The selector you specified (".concat(elementId, ") applies to no DOM elements that are currently on the page. Make sure the element exists on the page before calling mountLogin()."));
      }
      if (((_a = targetParentDomNode.firstChild) === null || _a === void 0 ? void 0 : _a.nodeName.toLowerCase()) === B2B_UI_SCREEN_WEB_COMPONENT_NAME.toLowerCase()) {
        var node = targetParentDomNode.firstChild;
        node.render({
          client: this,
          config: config,
          callbacks: callbacks,
          styles: styles,
          strings: strings
        });
        return;
      }
      var loginElement = B2BUILoginComponent({
        client: this,
        config: config,
        callbacks: callbacks,
        styles: styles,
        strings: strings
      });
      targetParentDomNode.appendChild(loginElement);
    }
  }, {
    key: "mountIdentityProvider",
    value: function mountIdentityProvider(_ref182) {
      var elementId = _ref182.elementId,
        styles = _ref182.styles,
        callbacks = _ref182.callbacks,
        strings = _ref182.strings,
        getIDPConsentManifest = _ref182.getIDPConsentManifest,
        trustedAuthTokenParams = _ref182.trustedAuthTokenParams;
      var _a;
      var targetParentDomNode = document.querySelector(elementId);
      if (!targetParentDomNode) {
        throw new Error("The selector you specified (".concat(elementId, ") applies to no DOM elements that are currently on the page. Make sure the element exists on the page before calling mountIdentityProvider()."));
      }
      if (((_a = targetParentDomNode.firstChild) === null || _a === void 0 ? void 0 : _a.nodeName.toLowerCase()) === B2B_UI_IDP_WEB_COMPONENT_NAME.toLowerCase()) {
        var node = targetParentDomNode.firstChild;
        node.render({
          client: this,
          callbacks: callbacks,
          styles: styles,
          strings: strings,
          getIDPConsentManifest: getIDPConsentManifest,
          trustedAuthTokenParams: trustedAuthTokenParams
        });
        return;
      }
      var idpElement = B2BUIIdentityProviderComponent({
        client: this,
        callbacks: callbacks,
        styles: styles,
        strings: strings,
        getIDPConsentManifest: getIDPConsentManifest,
        trustedAuthTokenParams: trustedAuthTokenParams
      });
      targetParentDomNode.appendChild(idpElement);
    }
  }]);
}(StytchB2BHeadlessClient);
export { AuthFlowType, B2BMFAProducts, B2BOAuthProviders, B2BProducts, IDPOAuthFlowMissingParamError, NoCurrentSessionError, OTPMethods, OneTapPositions, Products, RedirectURLType, StytchAPIError, StytchB2BUIClient, StytchEventType, StytchSDKError, Wallets };
