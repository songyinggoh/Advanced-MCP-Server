import { StytchB2BHeadlessClient } from './index.headless.js';
import { StytchProjectConfigurationInput, StyleConfig, Callbacks, StytchB2BUIConfig, StringsOptions } from '@stytch/core/public';
export * from '@stytch/core/public';
import { B as B2BIDPConsentManifestGenerator } from '../types-C1nZnwOa.js';
import '@stytch/core';
import '../OneTapClient-zVI7LxJ6.js';
import 'google-one-tap';

/**
 * A client used for invoking Stytch's B2B APIs.
 * The Stytch UI Client can be used as a drop-in solution for authentication and session management.
 * The Stytch UI client also can be used to render various UI elements for managing users.
 * Full documentation can be found {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online}.
 *
 * @example
 * const stytch = new StytchB2BUIClient('public-token-<find yours in the stytch dashboard>');
 * stytch.magicLinks.email.loginOrCreate({
 *   email: 'sandbox@stytch.com',
 *   organization_id: 'organization-test-123',
 * });
 */
declare class StytchB2BUIClient<TProjectConfiguration extends StytchProjectConfigurationInput = Stytch.DefaultProjectConfiguration> extends StytchB2BHeadlessClient<TProjectConfiguration> {
    constructor(...args: ConstructorParameters<typeof StytchB2BHeadlessClient<TProjectConfiguration>>);
    /**
     * Mounts a login screen inside the element provided.
     * If a login screen has already been rendered inside the element,
     * it will be updated to use the new config, style, and callback options passed in.
     * @example
     * stytchClient.mount({
     *   elementId: '#container',
     *   config: {...}
     * });
     *
     * @param elementId - A string containing the id of the element that should contain the login screen.
     * @param config - A {@link StytchB2BUIConfig} object containing the products that should be registered
     * @param styles - A {@link StyleConfig} object containing custom styling info
     * @param callbacks - Optional {@link Callbacks} triggered by various events in the Stytch SDK.
     * @param strings - Optional custom strings to be used in the prebuilt UI.
     * @throws An error when the element specified by elementId cannot be found.
     */
    mount({ elementId, styles, callbacks, config, strings, }: {
        elementId: string;
        styles?: StyleConfig;
        callbacks?: Callbacks<TProjectConfiguration>;
        config: StytchB2BUIConfig;
    } & StringsOptions): void;
    /**
     * Mounts an IDP Consent screen inside the element provided.
     * Parses OAuth Authorization params (client_id, scope, nonce, etc.) out of the page URL.
     * Requires the user to be logged in.
     * @example
     * stytchClient.mountIdentityProvider({
     *   elementId: '#idp-container',
     *   config: {...}
     * });
     *
     * @param elementId - A string containing the id of the element that should contain the consent screen.
     * @param styles - A {@link StyleConfig} object containing custom styling info
     * @param callbacks - Optional {@link Callbacks} triggered by various events in the Stytch SDK.
     * @param getIDPConsentManifest - Optional {@link B2BIDPConsentManifestGenerator} to customize the consent screen.
     * @throws An error when the element specified by elementId cannot be found.
     */
    mountIdentityProvider({ elementId, styles, callbacks, strings, getIDPConsentManifest, trustedAuthTokenParams, }: {
        elementId: string;
        styles?: StyleConfig;
        callbacks?: Callbacks<TProjectConfiguration>;
        getIDPConsentManifest?: B2BIDPConsentManifestGenerator;
        trustedAuthTokenParams?: {
            trustedAuthToken: string;
            tokenProfileID: string;
        };
    } & StringsOptions): void;
}

export { StytchB2BUIClient };
