'use strict';

function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return r; }; var t, r = {}, e = Object.prototype, n = e.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, i = o.iterator || "@@iterator", a = o.asyncIterator || "@@asyncIterator", u = o.toStringTag || "@@toStringTag"; function c(t, r, e, n) { return Object.defineProperty(t, r, { value: e, enumerable: !n, configurable: !n, writable: !n }); } try { c({}, ""); } catch (t) { c = function c(t, r, e) { return t[r] = e; }; } function h(r, e, n, o) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype); return c(a, "_invoke", function (r, e, n) { var o = 1; return function (i, a) { if (3 === o) throw Error("Generator is already running"); if (4 === o) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var u = n.delegate; if (u) { var c = d(u, n); if (c) { if (c === f) continue; return c; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (1 === o) throw o = 4, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = 3; var h = s(r, e, n); if ("normal" === h.type) { if (o = n.done ? 4 : 2, h.arg === f) continue; return { value: h.arg, done: n.done }; } "throw" === h.type && (o = 4, n.method = "throw", n.arg = h.arg); } }; }(r, n, new Context(o || [])), !0), a; } function s(t, r, e) { try { return { type: "normal", arg: t.call(r, e) }; } catch (t) { return { type: "throw", arg: t }; } } r.wrap = h; var f = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var l = {}; c(l, i, function () { return this; }); var p = Object.getPrototypeOf, y = p && p(p(x([]))); y && y !== e && n.call(y, i) && (l = y); var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l); function g(t) { ["next", "throw", "return"].forEach(function (r) { c(t, r, function (t) { return this._invoke(r, t); }); }); } function AsyncIterator(t, r) { function e(o, i, a, u) { var c = s(t[o], t, i); if ("throw" !== c.type) { var h = c.arg, f = h.value; return f && "object" == _typeof(f) && n.call(f, "__await") ? r.resolve(f.__await).then(function (t) { e("next", t, a, u); }, function (t) { e("throw", t, a, u); }) : r.resolve(f).then(function (t) { h.value = t, a(h); }, function (t) { return e("throw", t, a, u); }); } u(c.arg); } var o; c(this, "_invoke", function (t, n) { function i() { return new r(function (r, o) { e(t, n, r, o); }); } return o = o ? o.then(i, i) : i(); }, !0); } function d(r, e) { var n = e.method, o = r.i[n]; if (o === t) return e.delegate = null, "throw" === n && r.i["return"] && (e.method = "return", e.arg = t, d(r, e), "throw" === e.method) || "return" !== n && (e.method = "throw", e.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f; var i = s(o, r.i, e.arg); if ("throw" === i.type) return e.method = "throw", e.arg = i.arg, e.delegate = null, f; var a = i.arg; return a ? a.done ? (e[r.r] = a.value, e.next = r.n, "return" !== e.method && (e.method = "next", e.arg = t), e.delegate = null, f) : a : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, f); } function w(t) { this.tryEntries.push(t); } function m(r) { var e = r[4] || {}; e.type = "normal", e.arg = t, r[4] = e; } function Context(t) { this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0); } function x(r) { if (null != r) { var e = r[i]; if (e) return e.call(r); if ("function" == typeof r.next) return r; if (!isNaN(r.length)) { var o = -1, a = function e() { for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e; return e.value = t, e.done = !0, e; }; return a.next = a; } } throw new TypeError(_typeof(r) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, "constructor", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, "GeneratorFunction"), r.isGeneratorFunction = function (t) { var r = "function" == typeof t && t.constructor; return !!r && (r === GeneratorFunction || "GeneratorFunction" === (r.displayName || r.name)); }, r.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, "GeneratorFunction")), t.prototype = Object.create(v), t; }, r.awrap = function (t) { return { __await: t }; }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () { return this; }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(h(t, e, n, o), i); return r.isGeneratorFunction(e) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, g(v), c(v, u, "Generator"), c(v, i, function () { return this; }), c(v, "toString", function () { return "[object Generator]"; }), r.keys = function (t) { var r = Object(t), e = []; for (var n in r) e.unshift(n); return function t() { for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t; return t.done = !0, t; }; }, r.values = x, Context.prototype = { constructor: Context, reset: function reset(r) { if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) "t" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0][4]; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(r) { if (this.done) throw r; var e = this; function n(t) { a.type = "throw", a.arg = r, e.next = t; } for (var o = e.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i[4], u = this.prev, c = i[1], h = i[2]; if (-1 === i[0]) return n("end"), !1; if (!c && !h) throw Error("try statement without catch or finally"); if (null != i[0] && i[0] <= u) { if (u < c) return this.method = "next", this.arg = t, n(c), !0; if (u < h) return n(h), !1; } } }, abrupt: function abrupt(t, r) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) { var o = n; break; } } o && ("break" === t || "continue" === t) && o[0] <= r && r <= o[2] && (o = null); var i = o ? o[4] : {}; return i.type = t, i.arg = r, o ? (this.method = "next", this.next = o[2], f) : this.complete(i); }, complete: function complete(t, r) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && r && (this.next = r), f; }, finish: function finish(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[2] === t) return this.complete(e[4], e[3]), m(e), f; } }, "catch": function _catch(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[0] === t) { var n = e[4]; if ("throw" === n.type) { var o = n.arg; m(e); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(r, e, n) { return this.delegate = { i: x(r), r: e, n: n }, "next" === this.method && (this.arg = t), f; } }, r; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var internal = require('../internal-DTqpPDZg.js');
var BOOTSTRAP_CACHE_KEY = 'bootstrap';
var DEFAULT_BOOTSTRAP = function DEFAULT_BOOTSTRAP() {
  return {
    displayWatermark: false,
    projectName: null,
    cnameDomain: null,
    emailDomains: ['stytch.com'],
    captchaSettings: {
      enabled: false
    },
    pkceRequiredForEmailMagicLinks: false,
    pkceRequiredForPasswordResets: false,
    pkceRequiredForOAuth: false,
    pkceRequiredForSso: false,
    slugPattern: null,
    createOrganizationEnabled: false,
    passwordConfig: null,
    runDFPProtectedAuth: false,
    rbacPolicy: null,
    siweRequiredForCryptoWallets: false,
    vertical: null
  };
};
var BootstrapDataManager = /*#__PURE__*/function () {
  function BootstrapDataManager(_publicToken, _networkClient, _dataLayer) {
    var _this = this;
    _classCallCheck(this, BootstrapDataManager);
    this._publicToken = _publicToken;
    this._networkClient = _networkClient;
    this._dataLayer = _dataLayer;
    this._bootstrapDataPromise = this._networkClient.fetchSDK({
      url: "/projects/bootstrap/".concat(this._publicToken),
      method: 'GET'
    }).then(BootstrapDataManager.mapBootstrapData).then(function (data) {
      _this._dataLayer.setItem(BOOTSTRAP_CACHE_KEY, JSON.stringify(data));
      return data;
    })["catch"](function (error) {
      internal.logger.error(error);
      return DEFAULT_BOOTSTRAP();
    });
  }
  return _createClass(BootstrapDataManager, [{
    key: "getSync",
    value: function getSync() {
      var cached = this._dataLayer.getItem(BOOTSTRAP_CACHE_KEY);
      if (cached === null) {
        return DEFAULT_BOOTSTRAP();
      }
      try {
        return JSON.parse(cached);
      } catch (_a) {
        return DEFAULT_BOOTSTRAP();
      }
    }
  }, {
    key: "getAsync",
    value: function getAsync() {
      return this._bootstrapDataPromise;
    }
  }], [{
    key: "mapBootstrapData",
    value: function mapBootstrapData(response) {
      var _a, _b;
      var passwordConfig = response.password_config !== null ? {
        ludsComplexity: response.password_config.luds_complexity,
        ludsMinimumCount: response.password_config.luds_minimum_count
      } : null;
      return {
        projectName: response.project_name,
        displayWatermark: !response.disable_sdk_watermark,
        captchaSettings: response.captcha_settings,
        cnameDomain: response.cname_domain,
        emailDomains: response.email_domains,
        pkceRequiredForEmailMagicLinks: response.pkce_required_for_email_magic_links,
        pkceRequiredForPasswordResets: response.pkce_required_for_password_resets,
        pkceRequiredForOAuth: response.pkce_required_for_oauth,
        pkceRequiredForSso: response.pkce_required_for_sso,
        slugPattern: response.slug_pattern,
        createOrganizationEnabled: response.create_organization_enabled,
        passwordConfig: passwordConfig,
        runDFPProtectedAuth: (_a = response.dfp_protected_auth_enabled) !== null && _a !== void 0 ? _a : false,
        dfpProtectedAuthMode: response.dfp_protected_auth_mode,
        rbacPolicy: (_b = response.rbac_policy) !== null && _b !== void 0 ? _b : null,
        siweRequiredForCryptoWallets: response.siwe_required_for_crypto_wallets,
        vertical: response.vertical
      };
    }
  }]);
}();
var loadRecaptchaClient = function loadRecaptchaClient(siteKey) {
  return internal.loadESModule("https://www.google.com/recaptcha/enterprise.js?render=".concat(siteKey), function () {
    return window.grecaptcha.enterprise;
  });
};
var CaptchaProvider = /*#__PURE__*/_createClass(function CaptchaProvider(bootstrapPromise) {
  var _this2 = this;
  _classCallCheck(this, CaptchaProvider);
  this.bootstrapPromise = bootstrapPromise;
  this.executeRecaptcha = function () {
    return internal.__awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var _yield$this$state, captchaClient, configured, siteKey;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return this.state;
          case 2:
            _yield$this$state = _context.sent;
            captchaClient = _yield$this$state.captchaClient;
            configured = _yield$this$state.configured;
            siteKey = _yield$this$state.siteKey;
            if (configured) {
              _context.next = 8;
              break;
            }
            return _context.abrupt("return", undefined);
          case 8:
            _context.next = 10;
            return new Promise(function (resolve) {
              return captchaClient.ready(resolve);
            });
          case 10:
            return _context.abrupt("return", captchaClient.execute(siteKey, {
              action: 'LOGIN'
            }));
          case 11:
          case "end":
            return _context.stop();
        }
      }, _callee, this);
    }));
  };
  this.state = bootstrapPromise.then(function (bootstrapData) {
    return internal.__awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (bootstrapData.captchaSettings.enabled) {
              _context2.next = 2;
              break;
            }
            return _context2.abrupt("return", {
              configured: false
            });
          case 2:
            _context2.next = 4;
            return loadRecaptchaClient(bootstrapData.captchaSettings.siteKey);
          case 4:
            _context2.t0 = _context2.sent;
            _context2.t1 = bootstrapData.captchaSettings.siteKey;
            return _context2.abrupt("return", {
              configured: true,
              captchaClient: _context2.t0,
              siteKey: _context2.t1
            });
          case 7:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
  });
});
var ClientsideServicesProvider = /*#__PURE__*/function () {
  function ClientsideServicesProvider(iframeURL) {
    var _this3 = this;
    _classCallCheck(this, ClientsideServicesProvider);
    this.iframeURL = iframeURL;
    this.oneTapStart = function (req) {
      return _this3.call('oneTapStart', req);
    };
    this.oneTapSubmit = function (req) {
      return _this3.call('oneTapSubmit', req);
    };
    this.parsedPhoneNumber = function (req) {
      return _this3.call('parsedPhoneNumber', req);
    };
  }
  return _createClass(ClientsideServicesProvider, [{
    key: "frameClient",
    get: function get() {
      var _a;
      this._frameClient = (_a = this._frameClient) !== null && _a !== void 0 ? _a : new internal.IframeHostClient(this.iframeURL);
      return this._frameClient;
    }
  }, {
    key: "call",
    value: function call(handlerName, req) {
      return this.frameClient.call(handlerName, [req]);
    }
  }]);
}();
var version = "5.34.0";
var NetworkClient = /*#__PURE__*/function () {
  function NetworkClient(_publicToken, _subscriptionDataLayer, _liveAPIURL, _testAPIURL, additionalTelemetryDataFn) {
    _classCallCheck(this, NetworkClient);
    this._publicToken = _publicToken;
    this._subscriptionDataLayer = _subscriptionDataLayer;
    this.additionalTelemetryDataFn = additionalTelemetryDataFn;
    this.updateSessionToken = function () {
      return null;
    };
    this.baseURL = _liveAPIURL;
    if (internal.isTestPublicToken(_publicToken)) {
      this.baseURL = _testAPIURL;
    }
    this.eventLogger = new internal.EventLogger({
      maxBatchSize: internal.DEFAULT_MAX_BATCH_SIZE,
      intervalDurationMs: internal.DEFAULT_INTERVAL_DURATION_MS,
      logEventURL: this.buildSDKUrl('/events')
    });
  }
  return _createClass(NetworkClient, [{
    key: "logEvent",
    value: function logEvent(_ref) {
      var name = _ref.name,
        details = _ref.details,
        _ref$error = _ref.error,
        error = _ref$error === void 0 ? {} : _ref$error;
      this.eventLogger.logEvent(this.createTelemetryBlob(), {
        public_token: this._publicToken,
        event_name: name,
        details: details,
        error_code: error.error_code,
        error_description: error.error_description,
        http_status_code: error.http_status_code
      });
    }
  }, {
    key: "createTelemetryBlob",
    value: function createTelemetryBlob() {
      return Object.assign(Object.assign({
        event_id: internal.createEventId(),
        app_session_id: internal.createAppSessionId(),
        persistent_id: internal.createPersistentId(),
        client_sent_at: new Date().toISOString(),
        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone
      }, this.additionalTelemetryDataFn()), {
        app: {
          identifier: window.location.hostname
        },
        sdk: {
          identifier: 'Stytch.js Javascript SDK',
          version: version
        }
      });
    }
  }, {
    key: "fetchSDK",
    value: function fetchSDK(_ref2) {
      var url = _ref2.url,
        body = _ref2.body,
        method = _ref2.method;
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var sessionToken, basicAuthHeader, xSDKClientHeader, xSDKParentHostHeader;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              sessionToken = this._subscriptionDataLayer.readSessionCookie().session_token;
              basicAuthHeader = 'Basic ' + window.btoa(this._publicToken + ':' + (sessionToken || this._publicToken));
              xSDKClientHeader = window.btoa(JSON.stringify(this.createTelemetryBlob()));
              xSDKParentHostHeader = window.location.origin;
              return _context3.abrupt("return", internal.baseFetchSDK({
                basicAuthHeader: basicAuthHeader,
                body: body,
                finalURL: this.buildSDKUrl(url),
                method: method,
                xSDKClientHeader: xSDKClientHeader,
                xSDKParentHostHeader: xSDKParentHostHeader
              }));
            case 5:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
    }
  }, {
    key: "submitFormSDK",
    value: function submitFormSDK(_ref3) {
      var url = _ref3.url,
        body = _ref3.body,
        method = _ref3.method;
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        var sessionToken, basicAuthHeader, xSDKClientHeader, xSDKParentHostHeader;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              sessionToken = this._subscriptionDataLayer.readSessionCookie().session_token;
              basicAuthHeader = 'Basic ' + window.btoa(this._publicToken + ':' + (sessionToken || this._publicToken));
              xSDKClientHeader = window.btoa(JSON.stringify(this.createTelemetryBlob()));
              xSDKParentHostHeader = window.location.origin;
              return _context4.abrupt("return", internal.baseSubmitFormSDK({
                basicAuthHeader: basicAuthHeader,
                body: body,
                finalURL: this.buildSDKUrl(url),
                method: method,
                xSDKClientHeader: xSDKClientHeader,
                xSDKParentHostHeader: xSDKParentHostHeader
              }));
            case 5:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
    }
  }, {
    key: "retriableFetchSDK",
    value: function retriableFetchSDK(_ref4) {
      var url = _ref4.url,
        body = _ref4.body,
        method = _ref4.method,
        retryCallback = _ref4.retryCallback;
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        var sessionToken, basicAuthHeader, xSDKClientHeader, xSDKParentHostHeader;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              sessionToken = this._subscriptionDataLayer.readSessionCookie().session_token;
              basicAuthHeader = 'Basic ' + window.btoa(this._publicToken + ':' + (sessionToken || this._publicToken));
              xSDKClientHeader = window.btoa(JSON.stringify(this.createTelemetryBlob()));
              xSDKParentHostHeader = window.location.origin;
              return _context5.abrupt("return", internal.retriableFetchSDK({
                basicAuthHeader: basicAuthHeader,
                body: body,
                finalURL: this.buildSDKUrl(url),
                method: method,
                xSDKClientHeader: xSDKClientHeader,
                xSDKParentHostHeader: xSDKParentHostHeader,
                retryCallback: retryCallback
              }));
            case 5:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
    }
  }, {
    key: "buildSDKUrl",
    value: function buildSDKUrl(url) {
      return "".concat(this.baseURL, "/sdk/v1").concat(url);
    }
  }]);
}();
var PKCE_VERIFIER_STORAGE_KEY = 'PKCE_VERIFIER';
function toHex(n) {
  var str = n.toString(16);
  if (str.length === 1) {
    str = '0' + str;
  }
  return str;
}
function base64URLEncode(buf) {
  var _String$fromCharCode;
  return btoa((_String$fromCharCode = String.fromCharCode).call.apply(_String$fromCharCode, [null].concat(_toConsumableArray(new Uint8Array(buf))))).replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
}
var PKCEManager = /*#__PURE__*/function () {
  function PKCEManager(_dataLayer, namespace) {
    _classCallCheck(this, PKCEManager);
    this._dataLayer = _dataLayer;
    this.namespace = namespace;
  }
  return _createClass(PKCEManager, [{
    key: "key",
    value: function key() {
      return PKCE_VERIFIER_STORAGE_KEY + ':' + this.namespace;
    }
  }, {
    key: "startPKCETransaction",
    value: function startPKCETransaction() {
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var keyPair;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return PKCEManager.createProofkeyPair();
            case 2:
              keyPair = _context6.sent;
              this._dataLayer.setItem(this.key(), JSON.stringify(keyPair));
              return _context6.abrupt("return", keyPair);
            case 5:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
    }
  }, {
    key: "getPKPair",
    value: function getPKPair() {
      var serialized = this._dataLayer.getItem(this.key());
      if (serialized === null) {
        return undefined;
      }
      try {
        return JSON.parse(serialized);
      } catch (_a) {
        internal.logger.warn('Found malformed Proof Key pair in localstorage.');
        return undefined;
      }
    }
  }, {
    key: "clearPKPair",
    value: function clearPKPair() {
      return this._dataLayer.removeItem(this.key());
    }
  }], [{
    key: "createProofkeyPair",
    value: function createProofkeyPair() {
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        var bytes, codeVerifier, digest;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              bytes = new Uint32Array(16);
              window.crypto.getRandomValues(bytes);
              codeVerifier = Array.from(bytes).map(toHex).join('');
              _context7.next = 5;
              return window.crypto.subtle.digest('SHA-256', new TextEncoder().encode(codeVerifier));
            case 5:
              digest = _context7.sent;
              return _context7.abrupt("return", {
                code_challenge: base64URLEncode(digest),
                code_verifier: codeVerifier
              });
            case 7:
            case "end":
              return _context7.stop();
          }
        }, _callee7);
      }));
    }
  }]);
}();
var createDeepEqual = function createDeepEqual() {
  var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    _ref5$KEYS_TO_EXCLUDE = _ref5.KEYS_TO_EXCLUDE,
    KEYS_TO_EXCLUDE = _ref5$KEYS_TO_EXCLUDE === void 0 ? [] : _ref5$KEYS_TO_EXCLUDE;
  var _deepEqual = function deepEqual(a, b) {
    if (_typeof(a) !== _typeof(b)) return false;
    if (a === null || b === null) return a === b;
    if (_typeof(a) === 'object') {
      if (Object.keys(a).length !== Object.keys(b).length || Object.keys(a).some(function (k) {
        return !(k in b);
      })) return false;
      return Object.entries(a).filter(function (_ref6) {
        var _ref7 = _slicedToArray(_ref6, 1),
          k = _ref7[0];
        return !KEYS_TO_EXCLUDE.includes(k);
      }).every(function (_ref8) {
        var _ref9 = _slicedToArray(_ref8, 2),
          k = _ref9[0],
          v = _ref9[1];
        return _deepEqual(v, b[k]);
      });
    }
    return a === b;
  };
  return _deepEqual;
};

/*! js-cookie v3.0.1 | MIT */
function assign(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      target[key] = source[key];
    }
  }
  return target;
}
var defaultConverter = {
  read: function read(value) {
    if (value[0] === '"') {
      value = value.slice(1, -1);
    }
    return value.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
  },
  write: function write(value) {
    return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);
  }
};
function init(converter, defaultAttributes) {
  function set(key, value, attributes) {
    if (typeof document === 'undefined') {
      return;
    }
    attributes = assign({}, defaultAttributes, attributes);
    if (typeof attributes.expires === 'number') {
      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);
    }
    if (attributes.expires) {
      attributes.expires = attributes.expires.toUTCString();
    }
    key = encodeURIComponent(key).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
    var stringifiedAttributes = '';
    for (var attributeName in attributes) {
      if (!attributes[attributeName]) {
        continue;
      }
      stringifiedAttributes += '; ' + attributeName;
      if (attributes[attributeName] === true) {
        continue;
      }
      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
    }
    return document.cookie = key + '=' + converter.write(value, key) + stringifiedAttributes;
  }
  function get(key) {
    if (typeof document === 'undefined' || arguments.length && !key) {
      return;
    }
    var cookies = document.cookie ? document.cookie.split('; ') : [];
    var jar = {};
    for (var i = 0; i < cookies.length; i++) {
      var parts = cookies[i].split('=');
      var value = parts.slice(1).join('=');
      try {
        var foundKey = decodeURIComponent(parts[0]);
        jar[foundKey] = converter.read(value, foundKey);
        if (key === foundKey) {
          break;
        }
      } catch (e) {}
    }
    return key ? jar[key] : jar;
  }
  return Object.create({
    set: set,
    get: get,
    remove: function remove(key, attributes) {
      set(key, '', assign({}, attributes, {
        expires: -1
      }));
    },
    withAttributes: function withAttributes(attributes) {
      return init(this.converter, assign({}, this.attributes, attributes));
    },
    withConverter: function withConverter(converter) {
      return init(assign({}, this.converter, converter), this.attributes);
    }
  }, {
    attributes: {
      value: Object.freeze(defaultAttributes)
    },
    converter: {
      value: Object.freeze(converter)
    }
  });
}
var api = init(defaultConverter, {
  path: '/'
});
var STYTCH_SESSION_COOKIE = 'stytch_session';
var STYTCH_SESSION_JWT_COOKIE = 'stytch_session_jwt';
var STYTCH_INTERMEDIATE_SESSION_TOKEN_COOKIE = 'stytch_intermediate_session_token';
var SEEN_DOMAINS_KEY = 'seen_domains';
var isStorageAvailable = function isStorageAvailable(storage) {
  return typeof storage !== 'undefined' && storage !== null;
};
var safeStorageOperation = function safeStorageOperation(storage) {
  return function (_ref0) {
    var operation = _ref0.operation,
      key = _ref0.key,
      value = _ref0.value;
    if (!storage || !isStorageAvailable(storage)) return null;
    try {
      switch (operation) {
        case 'get':
          return storage.getItem(key);
        case 'set':
          if (value) storage.setItem(key, value);
          break;
        case 'remove':
          storage.removeItem(key);
          break;
      }
    } catch (err) {}
    return null;
  };
};
var safeLocalStorageOperation = safeStorageOperation(typeof window !== 'undefined' ? window.localStorage : undefined);
var safeSessionStorageOperation = safeStorageOperation(typeof window !== 'undefined' ? window.sessionStorage : undefined);
var SubscriptionDataLayer = /*#__PURE__*/function () {
  function SubscriptionDataLayer(publicToken, options) {
    var _this4 = this;
    _classCallCheck(this, SubscriptionDataLayer);
    this.browserSessionStorage = {
      getItem: function getItem(key) {
        return safeSessionStorageOperation({
          operation: 'get',
          key: internal.getPersistentStorageKey(_this4.publicToken, key)
        });
      },
      setItem: function setItem(key, value) {
        safeSessionStorageOperation({
          operation: 'set',
          key: internal.getPersistentStorageKey(_this4.publicToken, key),
          value: value
        });
      },
      removeItem: function removeItem(key) {
        safeSessionStorageOperation({
          operation: 'remove',
          key: internal.getPersistentStorageKey(_this4.publicToken, key)
        });
      }
    };
    this.publicToken = publicToken;
    this.state = null;
    this.stateKeysUpdated = new Set();
    this.subscriptions = {};
    if (options === null || options === void 0 ? void 0 : options.cookieOptions) {
      internal.validate('SubscriptionDataLayer').isOptionalString('cookieOptions.opaqueTokenCookieName', options.cookieOptions.opaqueTokenCookieName).isOptionalString('cookieOptions.jwtCookieName', options.cookieOptions.jwtCookieName).isOptionalString('cookieOptions.istCookieName', options.cookieOptions.istCookieName).isOptionalString('cookieOptions.path', options.cookieOptions.path).isOptionalString('cookieOptions.domain', options.cookieOptions.domain);
      this._jwtCookieName = options.cookieOptions.jwtCookieName || null;
      this._opaqueTokenCookieName = options.cookieOptions.opaqueTokenCookieName || null;
      this._cookiePath = options.cookieOptions.path || null;
      this._domain = options.cookieOptions.domain || null;
      this._cookieAvailableToSubdomains = options.cookieOptions.availableToSubdomains || false;
      this._istCookieName = options.cookieOptions.istCookieName || null;
    } else {
      this._opaqueTokenCookieName = null;
      this._jwtCookieName = null;
      this._cookiePath = null;
      this._domain = null;
      this._cookieAvailableToSubdomains = false;
      this._istCookieName = null;
    }
    var localStorageState = safeLocalStorageOperation({
      operation: 'get',
      key: internal.getPersistentStorageKey(this.publicToken)
    });
    if (!localStorageState) {
      return;
    }
    var parsedState;
    try {
      parsedState = JSON.parse(localStorageState);
    } catch (e) {
      this.syncToLocalStorage();
      return;
    }
    this.state = parsedState;
  }
  return _createClass(SubscriptionDataLayer, [{
    key: "opaqueTokenCookieName",
    get: function get() {
      var _a;
      return (_a = this._opaqueTokenCookieName) !== null && _a !== void 0 ? _a : STYTCH_SESSION_COOKIE;
    }
  }, {
    key: "jwtCookieName",
    get: function get() {
      var _a;
      return (_a = this._jwtCookieName) !== null && _a !== void 0 ? _a : STYTCH_SESSION_JWT_COOKIE;
    }
  }, {
    key: "istCookieName",
    get: function get() {
      var _a;
      return (_a = this._istCookieName) !== null && _a !== void 0 ? _a : STYTCH_INTERMEDIATE_SESSION_TOKEN_COOKIE;
    }
  }, {
    key: "readSessionCookie",
    value: function readSessionCookie() {
      return {
        session_token: api.get(this.opaqueTokenCookieName),
        session_jwt: api.get(this.jwtCookieName)
      };
    }
  }, {
    key: "readIntermediateSessionTokenCookie",
    value: function readIntermediateSessionTokenCookie() {
      return api.get(this.istCookieName);
    }
  }, {
    key: "writeSessionCookie",
    value: function writeSessionCookie(stateDiff) {
      var _a, _b, _c, _d;
      var state = stateDiff.state,
        session_token = stateDiff.session_token,
        session_jwt = stateDiff.session_jwt;
      var cookieOpts = SubscriptionDataLayer.generateCookieOpts({
        expiresAt: (_b = (_a = state === null || state === void 0 ? void 0 : state.session) === null || _a === void 0 ? void 0 : _a.expires_at) !== null && _b !== void 0 ? _b : '',
        availableToSubdomains: this._cookieAvailableToSubdomains,
        path: this._cookiePath,
        domain: this._domain
      });
      if (cookieOpts.domain) {
        this.addSeenDomain(cookieOpts.domain);
      }
      api.set(this.opaqueTokenCookieName, session_token, cookieOpts);
      api.set(this.jwtCookieName, session_jwt, cookieOpts);
      var alternateCookieOptions = SubscriptionDataLayer.generateCookieOpts({
        expiresAt: (_d = (_c = state === null || state === void 0 ? void 0 : state.session) === null || _c === void 0 ? void 0 : _c.expires_at) !== null && _d !== void 0 ? _d : '',
        availableToSubdomains: !this._cookieAvailableToSubdomains,
        path: this._cookiePath,
        domain: this._domain
      });
      if (alternateCookieOptions.domain) {
        this.addSeenDomain(alternateCookieOptions.domain);
      }
      if (internal.hasMultipleCookies(this.jwtCookieName)) {
        api.remove(this.jwtCookieName, alternateCookieOptions);
      }
      if (internal.hasMultipleCookies(this.opaqueTokenCookieName)) {
        api.remove(this.opaqueTokenCookieName, alternateCookieOptions);
      }
      if (internal.hasMultipleCookies(this.jwtCookieName)) {
        internal.logger.warn('Could not remove extraneous JWT cookie. This might happen if the cookie has been set using multiple `path` settings, and may produce unwanted behavior.');
      }
      if (internal.hasMultipleCookies(this.opaqueTokenCookieName)) {
        internal.logger.warn('Could not remove extraneous opaque token cookie.');
      }
    }
  }, {
    key: "writeIntermediateSessionTokenCookie",
    value: function writeIntermediateSessionTokenCookie(IST) {
      var expiresAtTime = new Date(Date.now() + 10 * 60000);
      var cookieOpts = SubscriptionDataLayer.generateCookieOpts({
        expiresAt: expiresAtTime.toString(),
        availableToSubdomains: this._cookieAvailableToSubdomains,
        path: this._cookiePath,
        domain: this._domain
      });
      api.set(this.istCookieName, IST, cookieOpts);
    }
  }, {
    key: "removeSessionCookie",
    value: function removeSessionCookie() {
      this.removeCookies([this.opaqueTokenCookieName, this.jwtCookieName]);
    }
  }, {
    key: "removeISTCookie",
    value: function removeISTCookie() {
      this.removeCookies([this.istCookieName]);
    }
  }, {
    key: "removeCookies",
    value: function removeCookies(cookiesToRemove) {
      var _this5 = this;
      var trackedDomains = this.getSeenDomains();
      var allDomains = [this._domain, null].concat(_toConsumableArray(trackedDomains));
      var uniqueDomains = _toConsumableArray(new Set(allDomains));
      [true, false].forEach(function (availableToSubdomains) {
        [_this5._cookiePath, null].forEach(function (path) {
          uniqueDomains.forEach(function (domain) {
            var cookieOpts = SubscriptionDataLayer.generateCookieOpts({
              expiresAt: new Date(0).toString(),
              availableToSubdomains: availableToSubdomains,
              path: path,
              domain: domain
            });
            cookiesToRemove.forEach(function (cookieName) {
              api.remove(cookieName, cookieOpts);
            });
          });
        });
      });
    }
  }, {
    key: "syncToLocalStorage",
    value: function syncToLocalStorage() {
      safeLocalStorageOperation({
        operation: 'set',
        key: internal.getPersistentStorageKey(this.publicToken),
        value: JSON.stringify(this.state)
      });
    }
  }, {
    key: "getItem",
    value: function getItem(key) {
      return safeLocalStorageOperation({
        operation: 'get',
        key: internal.getPersistentStorageKey(this.publicToken, key)
      });
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      safeLocalStorageOperation({
        operation: 'set',
        key: internal.getPersistentStorageKey(this.publicToken, key),
        value: value
      });
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      safeLocalStorageOperation({
        operation: 'remove',
        key: internal.getPersistentStorageKey(this.publicToken, key)
      });
    }
  }, {
    key: "getSeenDomains",
    value: function getSeenDomains() {
      var storedDomains = this.getItem(SEEN_DOMAINS_KEY);
      if (!storedDomains) {
        return [];
      }
      try {
        var parsed = JSON.parse(storedDomains);
        return Array.isArray(parsed) ? parsed : [];
      } catch (e) {
        return [];
      }
    }
  }, {
    key: "addSeenDomain",
    value: function addSeenDomain(domain) {
      if (!domain) {
        return;
      }
      var storedDomains = this.getSeenDomains();
      if (!storedDomains.includes(domain)) {
        storedDomains.push(domain);
        this.setItem(SEEN_DOMAINS_KEY, JSON.stringify(storedDomains));
      }
    }
  }], [{
    key: "generateCookieOpts",
    value: function generateCookieOpts(_ref1) {
      var path = _ref1.path,
        domain = _ref1.domain,
        availableToSubdomains = _ref1.availableToSubdomains,
        expiresAt = _ref1.expiresAt;
      var cookieOpts = {
        expires: new Date(expiresAt),
        sameSite: 'lax'
      };
      if (path) {
        cookieOpts.path = path;
      }
      if (internal.isLocalhost()) {
        cookieOpts.secure = false;
      } else {
        if (availableToSubdomains) {
          cookieOpts.domain = domain || window.location.host;
        }
        cookieOpts.secure = true;
      }
      return cookieOpts;
    }
  }]);
}();
var B2BSubscriptionDataLayer = /*#__PURE__*/function (_SubscriptionDataLaye) {
  function B2BSubscriptionDataLayer() {
    _classCallCheck(this, B2BSubscriptionDataLayer);
    return _callSuper(this, B2BSubscriptionDataLayer, arguments);
  }
  _inherits(B2BSubscriptionDataLayer, _SubscriptionDataLaye);
  return _createClass(B2BSubscriptionDataLayer);
}(SubscriptionDataLayer);
var b2bDataLayerCacheSymbol = Symbol["for"]('__stytch_b2b_DataLayer');
var getB2BDataLayerCache = function getB2BDataLayerCache() {
  var wdw = window;
  if (!wdw[b2bDataLayerCacheSymbol]) {
    wdw[b2bDataLayerCacheSymbol] = {};
  }
  return wdw[b2bDataLayerCacheSymbol];
};
var getB2BDataLayer = function getB2BDataLayer(publicToken, options) {
  var dataLayerCache = getB2BDataLayerCache();
  if (!dataLayerCache[publicToken]) {
    dataLayerCache[publicToken] = new B2BSubscriptionDataLayer(publicToken, options);
  }
  return dataLayerCache[publicToken];
};
var addSubscriber = function addSubscriber(collection, subscriber) {
  var uniqueId = Math.random().toString(36).slice(-10);
  collection[uniqueId] = subscriber;
  return function () {
    return delete collection[uniqueId];
  };
};
var notifySubscribers = function notifySubscribers(collection, value) {
  Object.values(collection).forEach(function (cb) {
    return cb(value);
  });
};
var deepEqualData = createDeepEqual({
  KEYS_TO_EXCLUDE: ['last_accessed_at']
});
var BaseSubscriptionService = /*#__PURE__*/function () {
  function BaseSubscriptionService(_publicToken, _datalayer, _ref10) {
    var _this6 = this;
    var usingCustomApiEndpoint = _ref10.usingCustomApiEndpoint;
    _classCallCheck(this, BaseSubscriptionService);
    this._publicToken = _publicToken;
    this._datalayer = _datalayer;
    this.fromCache = true;
    this._listen = function (e) {
      if (e.key !== internal.getPersistentStorageKey(_this6._publicToken)) {
        return;
      }
      var parsedValue = e.newValue === null || e.newValue === 'null' ? null : JSON.parse(e.newValue);
      _this6.updateState(parsedValue, true);
    };
    window.addEventListener('storage', this._listen);
    if (!usingCustomApiEndpoint) {
      var _this$_datalayer$read = this._datalayer.readSessionCookie(),
        session_token = _this$_datalayer$read.session_token;
      if (!session_token) {
        this.destroySession();
        return;
      }
    }
  }
  return _createClass(BaseSubscriptionService, [{
    key: "getTokens",
    value: function getTokens() {
      var _this$_datalayer$read2 = this._datalayer.readSessionCookie(),
        session_token = _this$_datalayer$read2.session_token,
        session_jwt = _this$_datalayer$read2.session_jwt;
      if (!(typeof session_token === 'string') || !(typeof session_jwt === 'string')) {
        return null;
      }
      return {
        session_token: session_token,
        session_jwt: session_jwt
      };
    }
  }, {
    key: "getIntermediateSessionToken",
    value: function getIntermediateSessionToken() {
      return this._datalayer.readIntermediateSessionTokenCookie() || null;
    }
  }, {
    key: "destroyState",
    value: function destroyState() {
      this.updateStateAndTokens({
        state: null,
        session_token: null,
        session_jwt: null,
        intermediate_session_token: null
      });
    }
  }, {
    key: "destroySession",
    value: function destroySession() {
      this._datalayer.removeSessionCookie();
      this.updateState(null);
    }
  }, {
    key: "_updateStateAndTokensInternal",
    value: function _updateStateAndTokensInternal(stateDiff) {
      var oldStateValue = this._datalayer.state;
      var newStateValue = stateDiff.state === null ? null : Object.assign(Object.assign({}, this._datalayer.state), stateDiff.state);
      this._datalayer.state = newStateValue;
      var wasCached = this.getFromCache();
      this.setCacheRefreshed();
      if (wasCached || !deepEqualData(oldStateValue, newStateValue)) {
        notifySubscribers(this._datalayer.subscriptions, newStateValue);
      }
    }
  }, {
    key: "updateStateAndTokens",
    value: function updateStateAndTokens(stateDiff) {
      if (stateDiff.state) {
        if (typeof stateDiff.session_token === 'string') {
          this._datalayer.writeSessionCookie(stateDiff);
        } else {
          this._datalayer.removeSessionCookie();
        }
        this._datalayer.removeISTCookie();
      } else if (stateDiff.intermediate_session_token) {
        if (typeof stateDiff.intermediate_session_token === 'string') {
          this._datalayer.writeIntermediateSessionTokenCookie(stateDiff.intermediate_session_token);
        } else {
          this._datalayer.removeISTCookie();
        }
        this._datalayer.removeSessionCookie();
      } else {
        this._datalayer.removeSessionCookie();
        this._datalayer.removeISTCookie();
      }
      this._updateStateAndTokensInternal(stateDiff);
      this._datalayer.syncToLocalStorage();
    }
  }, {
    key: "updateState",
    value: function updateState(state) {
      var fromExternalSource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var oldStateValue = this._datalayer.state;
      var newStateValue = state === null ? null : Object.assign(Object.assign({}, this._datalayer.state), state);
      this._datalayer.state = newStateValue;
      var wasCached = this.getFromCache();
      this.setCacheRefreshed();
      var hasStateChanged = !deepEqualData(oldStateValue, newStateValue);
      if (wasCached || hasStateChanged) {
        notifySubscribers(this._datalayer.subscriptions, newStateValue);
        if (hasStateChanged && !fromExternalSource) {
          this._datalayer.syncToLocalStorage();
        }
      }
    }
  }, {
    key: "updateTokens",
    value: function updateTokens(tokens) {
      var session_token = tokens.session_token,
        session_jwt = tokens.session_jwt;
      var cookie = this._datalayer.readSessionCookie();
      var diff = Object.assign(Object.assign({}, cookie), {
        session_token: session_token,
        session_jwt: session_jwt
      });
      if (typeof session_token === 'string' || typeof session_jwt === 'string') {
        this._datalayer.writeSessionCookie(diff);
        this._datalayer.removeISTCookie();
      } else {
        this._datalayer.removeSessionCookie();
      }
    }
  }, {
    key: "subscribeToState",
    value: function subscribeToState(callback) {
      return addSubscriber(this._datalayer.subscriptions, callback);
    }
  }, {
    key: "getState",
    value: function getState() {
      return this._datalayer.state;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      window.removeEventListener('storage', this._listen);
    }
  }, {
    key: "syncFromDeviceStorage",
    value: function syncFromDeviceStorage() {
      return null;
    }
  }, {
    key: "getFromCache",
    value: function getFromCache() {
      return this.fromCache;
    }
  }, {
    key: "setCacheRefreshed",
    value: function setCacheRefreshed() {
      this.fromCache = false;
    }
  }]);
}();
var B2BSubscriptionService = /*#__PURE__*/function (_BaseSubscriptionServ) {
  function B2BSubscriptionService() {
    var _this7;
    _classCallCheck(this, B2BSubscriptionService);
    _this7 = _callSuper(this, B2BSubscriptionService, arguments);
    _this7.updateMember = function (member) {
      return _this7.updateState({
        member: member
      });
    };
    _this7.getMember = function () {
      var _a, _b;
      return (_b = (_a = _this7.getState()) === null || _a === void 0 ? void 0 : _a.member) !== null && _b !== void 0 ? _b : null;
    };
    _this7.updateOrganization = function (organization) {
      return _this7.updateState({
        organization: organization
      });
    };
    _this7.getOrganization = function () {
      var _a, _b;
      return (_b = (_a = _this7.getState()) === null || _a === void 0 ? void 0 : _a.organization) !== null && _b !== void 0 ? _b : null;
    };
    _this7.getSession = function () {
      var _a, _b;
      return (_b = (_a = _this7.getState()) === null || _a === void 0 ? void 0 : _a.session) !== null && _b !== void 0 ? _b : null;
    };
    _this7.updateSession = function (resp) {
      if ('member_session' in resp && resp.member_session) {
        var tokens = resp.session_token && resp.session_jwt ? {
          session_token: resp.session_token,
          session_jwt: resp.session_jwt
        } : {
          session_token: true,
          session_jwt: true
        };
        _this7.updateStateAndTokens(Object.assign(Object.assign({
          state: {
            session: resp.member_session,
            member: resp.member,
            organization: resp.organization
          }
        }, tokens), {
          intermediate_session_token: null
        }));
      } else {
        _this7.updateStateAndTokens({
          state: null,
          session_token: null,
          session_jwt: null,
          intermediate_session_token: resp.intermediate_session_token || true
        });
      }
    };
    return _this7;
  }
  _inherits(B2BSubscriptionService, _BaseSubscriptionServ);
  return _createClass(B2BSubscriptionService);
}(BaseSubscriptionService);
var HeadlessB2BOAuthClient = /*#__PURE__*/function (_internal$HeadlessB2B) {
  function HeadlessB2BOAuthClient(_networkClient, _subscriptionService, _pkceManager, _dynamicConfig, _config) {
    var _this8;
    var _dfpProtectedAuth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : internal.DisabledDFPProtectedAuthProvider();
    var _oneTap = arguments.length > 6 ? arguments[6] : undefined;
    _classCallCheck(this, HeadlessB2BOAuthClient);
    _this8 = _callSuper(this, HeadlessB2BOAuthClient, [_networkClient, _subscriptionService, _pkceManager, _dynamicConfig, _config, _dfpProtectedAuth]);
    _this8._oneTap = _oneTap;
    _this8.startOneTapDiscovery = function (options) {
      return internal.__awaiter(_this8, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        var clientResult, client, onSuccessCallback;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return this._oneTap.createOneTapClient();
            case 2:
              clientResult = _context8.sent;
              if (clientResult.success) {
                _context8.next = 5;
                break;
              }
              throw new Error("One Tap could not load: ".concat(clientResult.reason));
            case 5:
              client = clientResult.client;
              onSuccessCallback = this._oneTap.createOnDiscoverySuccessHandler({
                discoveryRedirectUrl: options.discovery_redirect_url,
                onSuccess: this._oneTap.RedirectOnSuccess
              });
              return _context8.abrupt("return", client.render({
                style: {
                  position: internal.OneTapPositions.floating
                },
                callback: onSuccessCallback,
                cancelOnTapOutside: options.cancel_on_tap_outside
              }));
            case 8:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
    };
    _this8.startOneTap = function (options) {
      return internal.__awaiter(_this8, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
        var clientResult, client, onSuccessCallback;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              if (options.organization_id) {
                _context9.next = 2;
                break;
              }
              throw new internal.StytchSDKUsageError('stytch.oauth.googleOneTap.start', 'organization_id is a required argument');
            case 2:
              _context9.next = 4;
              return this._oneTap.createOneTapClient();
            case 4:
              clientResult = _context9.sent;
              if (clientResult.success) {
                _context9.next = 7;
                break;
              }
              throw new Error("One Tap could not load: ".concat(clientResult.reason));
            case 7:
              client = clientResult.client;
              onSuccessCallback = this._oneTap.createOnSuccessHandler({
                organizationId: options.organization_id,
                signupRedirectUrl: options.signup_redirect_url,
                loginRedirectUrl: options.login_redirect_url,
                onSuccess: this._oneTap.RedirectOnSuccess
              });
              return _context9.abrupt("return", client.render({
                style: {
                  position: internal.OneTapPositions.floating
                },
                callback: onSuccessCallback,
                cancelOnTapOutside: options.cancel_on_tap_outside
              }));
            case 10:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
    };
    _this8.googleOneTap = {
      discovery: {
        start: _this8.startOneTapDiscovery
      },
      start: _this8.startOneTap
    };
    return _this8;
  }
  _inherits(HeadlessB2BOAuthClient, _internal$HeadlessB2B);
  return _createClass(HeadlessB2BOAuthClient);
}(internal.HeadlessB2BOAuthClient);
var navigatorSupportsFedCM = typeof window !== 'undefined' && 'IdentityCredential' in window;
var getConfiguredEmbeddedMode = function getConfiguredEmbeddedMode(position) {
  if (position === internal.OneTapPositions.forceLegacyEmbedded) {
    return 'force';
  }
  if (position === internal.OneTapPositions.embeddedOnly || position === internal.OneTapPositions.embedded || position === internal.OneTapPositions.floatingOrEmbedded) {
    return true;
  }
  return false;
};
var getShouldRenderEmbeddedOneTap = function getShouldRenderEmbeddedOneTap(position) {
  var embeddedMode = getConfiguredEmbeddedMode(position);
  return embeddedMode === 'force' || embeddedMode && !navigatorSupportsFedCM;
};
var GoogleOneTapClient = /*#__PURE__*/function () {
  function GoogleOneTapClient(_googleClient, _clientId) {
    _classCallCheck(this, GoogleOneTapClient);
    this._googleClient = _googleClient;
    this._clientId = _clientId;
  }
  return _createClass(GoogleOneTapClient, [{
    key: "cancel",
    value: function cancel() {
      this._googleClient.cancel();
    }
  }, {
    key: "render",
    value: function render(_ref11) {
      var callback = _ref11.callback,
        onOneTapCancelled = _ref11.onOneTapCancelled,
        style = _ref11.style,
        _ref11$cancelOnTapOut = _ref11.cancelOnTapOutside,
        cancelOnTapOutside = _ref11$cancelOnTapOut === void 0 ? true : _ref11$cancelOnTapOut;
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee0() {
        var _this9 = this;
        var embeddedMode, shouldRenderEmbeddedOneTap, config;
        return _regeneratorRuntime().wrap(function _callee0$(_context0) {
          while (1) switch (_context0.prev = _context0.next) {
            case 0:
              embeddedMode = getConfiguredEmbeddedMode(style.position);
              shouldRenderEmbeddedOneTap = getShouldRenderEmbeddedOneTap(style.position);
              config = {
                client_id: this._clientId,
                callback: callback,
                auto_select: false,
                context: 'use',
                itp_support: true,
                use_fedcm_for_prompt: embeddedMode !== 'force',
                cancel_on_tap_outside: cancelOnTapOutside
              };
              if (shouldRenderEmbeddedOneTap) {
                config.prompt_parent_id = 'google-parent-prompt';
                config.cancel_on_tap_outside = false;
              }
              this._googleClient.initialize(config);
              return _context0.abrupt("return", new Promise(function (resolve) {
                _this9._googleClient.prompt(function (notification) {
                  var _a, _b, _c, _d, _e;
                  if (notification.isSkippedMoment()) {
                    var reason = (_b = (_a = notification.getSkippedReason) === null || _a === void 0 ? void 0 : _a.call(notification)) !== null && _b !== void 0 ? _b : 'unknown_reason';
                    if (reason === 'user_cancel') {
                      onOneTapCancelled === null || onOneTapCancelled === void 0 ? void 0 : onOneTapCancelled();
                    }
                    return resolve({
                      success: false,
                      reason: reason
                    });
                  }
                  if (!notification.isNotDisplayed && shouldRenderEmbeddedOneTap || ((_c = notification.isNotDisplayed) === null || _c === void 0 ? void 0 : _c.call(notification))) {
                    return resolve({
                      success: false,
                      reason: (_e = (_d = notification.getNotDisplayedReason) === null || _d === void 0 ? void 0 : _d.call(notification)) !== null && _e !== void 0 ? _e : 'unknown_reason'
                    });
                  }
                  if (!notification.isDismissedMoment()) {
                    _this9.styleFrame(shouldRenderEmbeddedOneTap);
                    return resolve({
                      success: true
                    });
                  }
                });
              }));
            case 6:
            case "end":
              return _context0.stop();
          }
        }, _callee0, this);
      }));
    }
  }, {
    key: "styleFrame",
    value: function styleFrame(shouldRenderEmbeddedOneTap) {
      if (!shouldRenderEmbeddedOneTap) {
        return;
      }
      Array.from(document.getElementsByTagName('iframe')).forEach(function (frame) {
        if (frame.src.includes(internal.GOOGLE_ONE_TAP_HOST)) {
          frame.style.width = '100%';
        }
      });
    }
  }]);
}();
var loadGoogleOneTapClient = function loadGoogleOneTapClient() {
  return internal.loadESModule(internal.GOOGLE_ONE_TAP_SCRIPT_URL, function () {
    return window.google.accounts.id;
  });
};
var DefaultDynamicConfig = Promise.resolve({
  pkceRequiredForOAuth: false
});
var B2BOneTapProvider = /*#__PURE__*/function () {
  function B2BOneTapProvider(_networkClient, _pkceManager) {
    var _this0 = this;
    var _config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDynamicConfig;
    _classCallCheck(this, B2BOneTapProvider);
    this._networkClient = _networkClient;
    this._pkceManager = _pkceManager;
    this._config = _config;
    this.createOnDiscoverySuccessHandler = function (_ref12) {
      var discoveryRedirectUrl = _ref12.discoveryRedirectUrl,
        onSuccess = _ref12.onSuccess,
        onError = _ref12.onError;
      return function (response) {
        return internal.__awaiter(_this0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee1() {
          var credential, submitPromise;
          return _regeneratorRuntime().wrap(function _callee1$(_context1) {
            while (1) switch (_context1.prev = _context1.next) {
              case 0:
                credential = response.credential;
                submitPromise = this.submitGoogleOneTapTokenDiscovery({
                  credential: credential,
                  discoveryRedirectUrl: discoveryRedirectUrl
                }).then(function (result) {
                  return onSuccess(result.redirect_url);
                });
                if (onError) {
                  submitPromise = submitPromise["catch"](function (error) {
                    return onError(error);
                  });
                }
                _context1.next = 5;
                return submitPromise;
              case 5:
              case "end":
                return _context1.stop();
            }
          }, _callee1, this);
        }));
      };
    };
    this.createOnSuccessHandler = function (_ref13) {
      var organizationId = _ref13.organizationId,
        signupRedirectUrl = _ref13.signupRedirectUrl,
        loginRedirectUrl = _ref13.loginRedirectUrl,
        onSuccess = _ref13.onSuccess,
        onError = _ref13.onError;
      return function (response) {
        return internal.__awaiter(_this0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
          var credential, submitPromise;
          return _regeneratorRuntime().wrap(function _callee10$(_context10) {
            while (1) switch (_context10.prev = _context10.next) {
              case 0:
                credential = response.credential;
                submitPromise = this.submitGoogleOneTapToken({
                  credential: credential,
                  organizationId: organizationId,
                  signupRedirectUrl: signupRedirectUrl,
                  loginRedirectUrl: loginRedirectUrl
                }).then(function (result) {
                  return onSuccess(result.redirect_url);
                });
                if (onError) {
                  submitPromise = submitPromise["catch"](function (error) {
                    return onError(error);
                  });
                }
                _context10.next = 5;
                return submitPromise;
              case 5:
              case "end":
                return _context10.stop();
            }
          }, _callee10, this);
        }));
      };
    };
    this.RedirectOnSuccess = function (redirect_url) {
      window.location.href = redirect_url;
    };
  }
  return _createClass(B2BOneTapProvider, [{
    key: "fetchGoogleStart",
    value: function fetchGoogleStart() {
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
        var oneTapStartResp;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              if (!this.googleClientID) {
                _context11.next = 2;
                break;
              }
              return _context11.abrupt("return", this.googleClientID);
            case 2:
              _context11.next = 4;
              return this._networkClient.fetchSDK({
                url: '/b2b/oauth/google/onetap/start',
                method: 'GET'
              });
            case 4:
              oneTapStartResp = _context11.sent;
              this.googleClientID = oneTapStartResp.google_client_id;
              return _context11.abrupt("return", this.googleClientID);
            case 7:
            case "end":
              return _context11.stop();
          }
        }, _callee11, this);
      }));
    }
  }, {
    key: "submitGoogleOneTapTokenDiscovery",
    value: function submitGoogleOneTapTokenDiscovery(_ref14) {
      var credential = _ref14.credential,
        discoveryRedirectUrl = _ref14.discoveryRedirectUrl;
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        var codeChallenge, _yield$this$_config, pkceRequiredForOAuth, keyPair;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              codeChallenge = undefined;
              _context12.next = 3;
              return this._config;
            case 3:
              _yield$this$_config = _context12.sent;
              pkceRequiredForOAuth = _yield$this$_config.pkceRequiredForOAuth;
              if (!pkceRequiredForOAuth) {
                _context12.next = 12;
                break;
              }
              _context12.next = 8;
              return this._pkceManager.startPKCETransaction();
            case 8:
              keyPair = _context12.sent;
              codeChallenge = keyPair.code_challenge;
              _context12.next = 13;
              break;
            case 12:
              this._pkceManager.clearPKPair();
            case 13:
              _context12.next = 15;
              return this._networkClient.fetchSDK({
                url: '/b2b/oauth/google/onetap/discovery/submit',
                method: 'POST',
                body: {
                  id_token: credential,
                  discovery_redirect_url: discoveryRedirectUrl,
                  pkce_code_challenge: codeChallenge
                }
              });
            case 15:
              return _context12.abrupt("return", _context12.sent);
            case 16:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
    }
  }, {
    key: "submitGoogleOneTapToken",
    value: function submitGoogleOneTapToken(_ref15) {
      var credential = _ref15.credential,
        organizationId = _ref15.organizationId,
        signupRedirectUrl = _ref15.signupRedirectUrl,
        loginRedirectUrl = _ref15.loginRedirectUrl;
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
        var codeChallenge, _yield$this$_config2, pkceRequiredForOAuth, keyPair;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              codeChallenge = undefined;
              _context13.next = 3;
              return this._config;
            case 3:
              _yield$this$_config2 = _context13.sent;
              pkceRequiredForOAuth = _yield$this$_config2.pkceRequiredForOAuth;
              if (!pkceRequiredForOAuth) {
                _context13.next = 12;
                break;
              }
              _context13.next = 8;
              return this._pkceManager.startPKCETransaction();
            case 8:
              keyPair = _context13.sent;
              codeChallenge = keyPair.code_challenge;
              _context13.next = 13;
              break;
            case 12:
              this._pkceManager.clearPKPair();
            case 13:
              _context13.next = 15;
              return this._networkClient.fetchSDK({
                url: '/b2b/oauth/google/onetap/submit',
                method: 'POST',
                body: {
                  id_token: credential,
                  organization_id: organizationId,
                  signup_redirect_url: signupRedirectUrl,
                  login_redirect_url: loginRedirectUrl,
                  pkce_code_challenge: codeChallenge
                }
              });
            case 15:
              return _context13.abrupt("return", _context13.sent);
            case 16:
            case "end":
              return _context13.stop();
          }
        }, _callee13, this);
      }));
    }
  }, {
    key: "createOneTapClient",
    value: function createOneTapClient() {
      return internal.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
        var googleClientId, err, client;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _context14.prev = 0;
              _context14.next = 3;
              return this.fetchGoogleStart();
            case 3:
              googleClientId = _context14.sent;
              _context14.next = 10;
              break;
            case 6:
              _context14.prev = 6;
              _context14.t0 = _context14["catch"](0);
              err = internal.StytchAPIError.from(_context14.t0);
              return _context14.abrupt("return", {
                success: false,
                reason: err.error_type
              });
            case 10:
              if (!(googleClientId === '')) {
                _context14.next = 12;
                break;
              }
              return _context14.abrupt("return", {
                success: false,
                reason: 'oauth_config_not_found'
              });
            case 12:
              _context14.t1 = GoogleOneTapClient;
              _context14.next = 15;
              return loadGoogleOneTapClient();
            case 15:
              _context14.t2 = _context14.sent;
              _context14.t3 = googleClientId;
              client = new _context14.t1(_context14.t2, _context14.t3);
              return _context14.abrupt("return", {
                success: true,
                client: client
              });
            case 19:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this, [[0, 6]]);
      }));
    }
  }]);
}();
var StytchB2BHeadlessClient = /*#__PURE__*/_createClass(function StytchB2BHeadlessClient(rawPublicToken, options) {
  var _this1 = this;
  _classCallCheck(this, StytchB2BHeadlessClient);
  var _a, _b;
  internal.checkB2BNotSSR('StytchB2BHeadlessClient');
  internal.checkPublicToken(rawPublicToken);
  var _PUBLIC_TOKEN = rawPublicToken !== null && rawPublicToken !== void 0 ? rawPublicToken : '';
  var _options = options;
  var config = internal.buildFinalConfig(_options);
  var usingCustomApiEndpoint = internal.isTestPublicToken(_PUBLIC_TOKEN) ? !!((_a = options === null || options === void 0 ? void 0 : options.endpointOptions) === null || _a === void 0 ? void 0 : _a.testApiDomain) : !!((_b = options === null || options === void 0 ? void 0 : options.endpointOptions) === null || _b === void 0 ? void 0 : _b.apiDomain);
  this._dataLayer = getB2BDataLayer(_PUBLIC_TOKEN, _options);
  this._subscriptionService = new B2BSubscriptionService(_PUBLIC_TOKEN, this._dataLayer, {
    usingCustomApiEndpoint: usingCustomApiEndpoint
  });
  this._stateChangeClient = new internal.StateChangeClient(this._subscriptionService, {});
  this.onStateChange = function () {
    var _this1$_stateChangeCl;
    return (_this1$_stateChangeCl = _this1._stateChangeClient).onStateChange.apply(_this1$_stateChangeCl, arguments);
  };
  var additionalTelemetryDataFn = function additionalTelemetryDataFn() {
    var _a, _b, _c, _d;
    return {
      stytch_member_id: (_b = (_a = _this1._dataLayer.state) === null || _a === void 0 ? void 0 : _a.member) === null || _b === void 0 ? void 0 : _b.member_id,
      stytch_member_session_id: (_d = (_c = _this1._dataLayer.state) === null || _c === void 0 ? void 0 : _c.session) === null || _d === void 0 ? void 0 : _d.member_session_id
    };
  };
  var passwordsPKCEManager = new PKCEManager(this._dataLayer, 'passwords');
  var networkClient = new NetworkClient(_PUBLIC_TOKEN, this._dataLayer, config.endpoints.liveAPIURL, config.endpoints.testAPIURL, additionalTelemetryDataFn);
  this._networkClient = networkClient;
  var bootstrap = new BootstrapDataManager(_PUBLIC_TOKEN, networkClient, this._dataLayer);
  var captcha = new CaptchaProvider(bootstrap.getAsync());
  var dfpProtectedAuth = new internal.DFPProtectedAuthProvider(_PUBLIC_TOKEN, config.endpoints.dfpBackendURL, config.endpoints.dfpCdnURL, bootstrap.getAsync(), captcha.executeRecaptcha);
  var clientsideServices = new ClientsideServicesProvider(config.endpoints.clientsideServicesIframeURL);
  var pkceManagerForOAuth = new PKCEManager(this._dataLayer, 'oauth');
  var oneTap = new B2BOneTapProvider(networkClient, pkceManagerForOAuth, bootstrap.getAsync());
  this.organization = new internal.HeadlessB2BOrganizationClient(networkClient, networkClient, this._subscriptionService);
  this.member = new internal.HeadlessB2BSelfClient(networkClient, networkClient, this._subscriptionService);
  this.self = new internal.HeadlessB2BSelfClient(networkClient, networkClient, this._subscriptionService);
  this.session = new internal.HeadlessB2BSessionClient(networkClient, this._subscriptionService);
  this.magicLinks = new internal.HeadlessB2BMagicLinksClient(networkClient, this._subscriptionService, new PKCEManager(this._dataLayer, 'magic_links'), passwordsPKCEManager, bootstrap.getAsync(), dfpProtectedAuth);
  this.oauth = new HeadlessB2BOAuthClient(networkClient, this._subscriptionService, pkceManagerForOAuth, bootstrap.getAsync(), {
    publicToken: _PUBLIC_TOKEN,
    testAPIURL: config.endpoints.testAPIURL,
    liveAPIURL: config.endpoints.liveAPIURL
  }, dfpProtectedAuth, oneTap);
  this.sso = new internal.HeadlessB2BSSOClient(networkClient, this._subscriptionService, new PKCEManager(this._dataLayer, 'sso'), bootstrap.getAsync(), {
    publicToken: _PUBLIC_TOKEN,
    testAPIURL: config.endpoints.testAPIURL,
    liveAPIURL: config.endpoints.liveAPIURL
  }, dfpProtectedAuth);
  this.discovery = new internal.HeadlessB2BDiscoveryClient(networkClient, this._subscriptionService);
  this.passwords = new internal.HeadlessB2BPasswordsClient(networkClient, this._subscriptionService, passwordsPKCEManager, bootstrap.getAsync(), dfpProtectedAuth);
  this.otps = new internal.HeadlessB2BOTPsClient(networkClient, this._subscriptionService, dfpProtectedAuth);
  this.totp = new internal.HeadlessB2BTOTPsClient(networkClient, this._subscriptionService, dfpProtectedAuth);
  this.recoveryCodes = new internal.HeadlessB2BRecoveryCodesClient(networkClient, this._subscriptionService, dfpProtectedAuth);
  this.rbac = new internal.HeadlessB2BRBACClient(bootstrap.getSync(), bootstrap.getAsync(), this._subscriptionService);
  this.scim = new internal.HeadlessB2BSCIMClient(this._networkClient, this._subscriptionService);
  this.impersonation = new internal.HeadlessB2BImpersonationClient(this._networkClient, this._subscriptionService, dfpProtectedAuth);
  this.idp = new internal.HeadlessB2BIDPClient(networkClient);
  this._sessionManager = new internal.SessionManager(this._subscriptionService, this.session, _PUBLIC_TOKEN);
  var searchManager = new internal.SearchDataManager(networkClient, dfpProtectedAuth);
  var idp = new internal.HeadlessB2BIDPClient(networkClient);
  if (usingCustomApiEndpoint || this._dataLayer.readSessionCookie().session_token) {
    this._sessionManager.performBackgroundRefresh();
  }
  networkClient.logEvent({
    name: 'b2b_sdk_instance_instantiated',
    details: {
      event_callback_registered: false,
      error_callback_registered: false,
      success_callback_registered: false
    }
  });
  bootstrap.getAsync().then(function (bootstrapData) {
    if (bootstrapData.vertical === internal.VERTICAL_CONSUMER) {
      internal.logger.error('This application is using a Stytch client for B2B projects, but the public token is for a Stytch Consumer project. Use a Consumer Stytch client instead, or verify that the public token is correct.');
    }
  });
  var internals = {
    idp: idp,
    bootstrap: bootstrap,
    clientsideServices: clientsideServices,
    publicToken: _PUBLIC_TOKEN,
    searchManager: searchManager,
    dataLayer: this._dataLayer,
    networkClient: networkClient,
    oneTap: oneTap
  };
  internal.writeB2BInternals(this, internals);
});
Object.defineProperty(exports, "AuthFlowType", {
  enumerable: true,
  get: function get() {
    return internal.AuthFlowType;
  }
});
Object.defineProperty(exports, "B2BMFAProducts", {
  enumerable: true,
  get: function get() {
    return internal.B2BMFAProducts;
  }
});
Object.defineProperty(exports, "B2BOAuthProviders", {
  enumerable: true,
  get: function get() {
    return internal.B2BOAuthProviders;
  }
});
Object.defineProperty(exports, "B2BProducts", {
  enumerable: true,
  get: function get() {
    return internal.B2BProducts;
  }
});
exports.BiometricRegistrationIdIsNullOrBlank = internal.BiometricRegistrationIdIsNullOrBlank;
exports.BiometricsAlreadyEnrolledError = internal.BiometricsAlreadyEnrolledError;
exports.BiometricsFailedError = internal.BiometricsFailedError;
exports.BiometricsUnavailableError = internal.BiometricsUnavailableError;
exports.ChallengeSigningFailedError = internal.ChallengeSigningFailedError;
exports.DFPNotConfigured = internal.DFPNotConfigured;
exports.DeviceCredentialsNotAllowedError = internal.DeviceCredentialsNotAllowedError;
exports.FailedCodeChallengeError = internal.FailedCodeChallengeError;
exports.FailedToDecryptDataError = internal.FailedToDecryptDataError;
exports.IDPOAuthFlowMissingParamError = internal.IDPOAuthFlowMissingParamError;
exports.InternalError = internal.InternalError;
exports.InvalidAuthorizationCredentialError = internal.InvalidAuthorizationCredentialError;
exports.InvalidCredentialTypeError = internal.InvalidCredentialTypeError;
exports.InvalidPrivateKeyLength = internal.InvalidPrivateKeyLength;
exports.InvalidRedirectSchemeError = internal.InvalidRedirectSchemeError;
exports.InvalidStartUrlError = internal.InvalidStartUrlError;
exports.JSONDataNotConvertibleToStringError = internal.JSONDataNotConvertibleToStringError;
exports.KeyInvalidatedError = internal.KeyInvalidatedError;
exports.KeystoreUnavailableError = internal.KeystoreUnavailableError;
exports.MissingAttestationObjectError = internal.MissingAttestationObjectError;
exports.MissingAuthorizationCredentialIDTokenError = internal.MissingAuthorizationCredentialIDTokenError;
exports.MissingCipherIv = internal.MissingCipherIv;
exports.MissingGoogleClientIDError = internal.MissingGoogleClientIDError;
exports.MissingPKCEError = internal.MissingPKCEError;
exports.MissingPublicKeyError = internal.MissingPublicKeyError;
exports.MissingUrlError = internal.MissingUrlError;
exports.NoBiometricsEnrolledError = internal.NoBiometricsEnrolledError;
exports.NoBiometricsRegistrationError = internal.NoBiometricsRegistrationError;
exports.NoCredentialsPresentError = internal.NoCredentialsPresentError;
exports.NoCurrentSessionError = internal.NoCurrentSessionError;
Object.defineProperty(exports, "OAuthProviders", {
  enumerable: true,
  get: function get() {
    return internal.OAuthProviders;
  }
});
Object.defineProperty(exports, "OTPMethods", {
  enumerable: true,
  get: function get() {
    return internal.OTPMethods;
  }
});
Object.defineProperty(exports, "OneTapPositions", {
  enumerable: true,
  get: function get() {
    return internal.OneTapPositions;
  }
});
exports.PasskeysInvalidEncoding = internal.PasskeysInvalidEncoding;
exports.PasskeysMisconfigured = internal.PasskeysMisconfigured;
exports.PasskeysUnsupportedError = internal.PasskeysUnsupportedError;
Object.defineProperty(exports, "Products", {
  enumerable: true,
  get: function get() {
    return internal.Products;
  }
});
Object.defineProperty(exports, "RNUIProducts", {
  enumerable: true,
  get: function get() {
    return internal.RNUIProducts;
  }
});
exports.RandomNumberGenerationFailed = internal.RandomNumberGenerationFailed;
Object.defineProperty(exports, "RedirectURLType", {
  enumerable: true,
  get: function get() {
    return internal.RedirectURLType;
  }
});
exports.SDKAPIUnreachableError = internal.SDKAPIUnreachableError;
exports.SDKNotConfiguredError = internal.SDKNotConfiguredError;
exports.SignInWithAppleMisconfigured = internal.SignInWithAppleMisconfigured;
exports.StytchAPIError = internal.StytchAPIError;
exports.StytchAPISchemaError = internal.StytchAPISchemaError;
exports.StytchAPIUnreachableError = internal.StytchAPIUnreachableError;
exports.StytchError = internal.StytchError;
Object.defineProperty(exports, "StytchEventType", {
  enumerable: true,
  get: function get() {
    return internal.StytchEventType;
  }
});
exports.StytchSDKAPIError = internal.StytchSDKAPIError;
exports.StytchSDKError = internal.StytchSDKError;
exports.StytchSDKSchemaError = internal.StytchSDKSchemaError;
exports.StytchSDKUsageError = internal.StytchSDKUsageError;
exports.UNRECOVERABLE_ERROR_TYPES = internal.UNRECOVERABLE_ERROR_TYPES;
exports.UserCancellationError = internal.UserCancellationError;
exports.UserLockedOutError = internal.UserLockedOutError;
Object.defineProperty(exports, "Wallets", {
  enumerable: true,
  get: function get() {
    return internal.Wallets;
  }
});
exports.errorToStytchError = internal.errorToStytchError;
exports.StytchB2BHeadlessClient = StytchB2BHeadlessClient;
